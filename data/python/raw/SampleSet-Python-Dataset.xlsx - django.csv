Evaluator,Reviewer 1,Reviewer 2,convention,Class,Comment,comment length,Summary,Usage,Parameters,Expand,Version,Development Notes,Todo,Exception,Links,Noise,Warnings,Recommendation,Dependecies,Precondition,Coding Guidelines,Extension,Subclass explnation,Observation
E3,E2 (agree),,"https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/
",HiddenRangeWidget,"A widget that splits input into two <input type=""hidden""> inputs.",1,"A widget that splits input into two <input type=""hidden""> inputs.",,,,,,,,,,,,,,,,,
E3,E2 (agree),,https://www.python.org/dev/peps/pep-0257/,AmbiguityError,More than one migration matches a name prefix.,1,More than one migration matches a name prefix.,,,,,,,,,,,,,,,,,
E3,E2 (agree),,,BadSignature,Signature does not match.,1,Signature does not match.,,,,,,,,,,,,,,,,,
E3,E1 (agree),,,Group,Table Column Fields,1,Table Column Fields,,,,,,,,,,,,,,,,,
E3,E1 (agree),,,MemcachedCache,An implementation of a cache binding using python-memcached,1,An implementation of a cache binding using python-memcached,,,,,,,,,,,,,,,,,
E3,E1 (disagree),,,MemoryFileUploadHandler,File upload handler to stream uploads into memory (used for small files).,1,File upload handler to stream uploads into memory (used for small files).,,,,,,,,,,,,,,,,,(used for small files)
E3,,E4 (agree),,NestedObjectsTests,Tests for ``NestedObject`` utility collection.,1,Tests for ``NestedObject`` utility collection.,,,,,,,,,,,,,,,,,
E3,,E4 (agree),,DatabaseReceiver,Used in the tests for the database argument in signals (#13552),1,Used in the tests for the database argument in signals (#13552),,,,,,,,,,,,,,,,,
E3,,E4 (agree),,LogoutThenLoginTests,Tests for the logout_then_login view,1,Tests for the logout_then_login view,,,,,,,,,,,,,,,,,
E3,E2 (agree),,,ArchiveIndexView,Top-level archive of date-based items.,1,Top-level archive of date-based items.,,,,,,,,,,,,,,,,,
E2,E1 (agree),,,FrenchTestCase,Tests using the French translations of the sampleproject.,1,Tests using the French translations of the sampleproject.,,,,,,,,,,,,,,,,,
E2,E1 (agree),,,MyModel,Model subclass with a custom base using metaclass.,1,Model subclass with a custom base using metaclass.,,,,,,,,,,,,,,,,,
E2,E1 (agree),,,BarAccount,A service-specific account of type Bar.,1,A service-specific account of type Bar.,,,,,,,,,,,,,,,,,
E2,,E3 (agree),,XFrameOptionsDecoratorsTests,Tests for the X-Frame-Options decorators.,1,Tests for the X-Frame-Options decorators.,,,,,,,,,,,,,,,,,
E2,,E3 (agree),,Dumpdata,Tests for dumpdata management command.,1,Tests for dumpdata management command.,,,,,,,,,,,,,,,,,
E2,,E3 (agree),,KMLSitemap,A minimal hook to produce KML sitemaps.,1,A minimal hook to produce KML sitemaps.,,,,,,,,,,,,,,,,,
E2,,E4 (agree),,SimpleView,A simple view with a docstring.,1,A simple view with a docstring.,,,,,,,,,,,,,,,,,
E2,,E4 (agree),,CustomArticleAdmin,Tests various hooks for using custom templates and contexts.,1,Tests various hooks for using custom templates and contexts.,,,,,,,,,,,,,,,,,
E2,,E4 (agree),,NestedObjectsTests,Tests for ``NestedObject`` utility collection.,1,Tests for ``NestedObject`` utility collection.,,,,,,,,,,,,,,,,,
E2,E1 (agree),,,TestRouter,Routes to the 'other' database if the model name starts with 'Other'.,1,,,,Routes to the 'other' database if the model name starts with 'Other'.,,,,,,,,,,,,,,
E4,E2 (agree),,,BaseExpression,Base class for all query expressions.,1,Base class for all query expressions.,,,,,,,,,,,,,,,,,
E4,E2 (agree),,,Archive,The external API class that encapsulates an archive implementation.,1,The external API class that encapsulates an archive implementation.,,,,,The external API class that encapsulates an archive implementation.,,,,,,,,,,,,
E4,E2 (agree),,,IntFromGeom,"Argument is a geometry, return type is an integer.",1,,,"Argument is a geometry, return type is an integer.",,,"Argument is a geometry, return type is an integer.",,,,,,,,,,,,
E4,E1 (disagree),E3(agree with E1),,SuccessMessageMixin,Add a success message on successful form submission.,1,Add a success message on successful form submission.,,,,,,,,,,,,,,,,,
E4,E1 (disagree),,,IntFromGeom,"Argument is a geometry, return type is an integer.",1,,"Argument is a geometry, return type is an integer.",,,,,,,,,,,,,,,,
E4,E1 (disagree),E2 (agree with E1),,Serializer,Convert a queryset to JSON.,1,Convert a queryset to JSON.,,,,,,,,,,,,,,,,,
E4,,E3 (agree),,AppConfigStub,Stub of an AppConfig. Only provides a label and a dict of models.,1,Stub of an AppConfig.,,Only provides a label and a dict of models.,,,,,,,,,,,,,,,
E4,,E3 (agree),,Choices,Class for creating enumerated choices.,1,Class for creating enumerated choices.,,Class for creating enumerated choices.,,,,,,,,,,,,,,,
E4,,E3 (disagree),,SessionStorage,"Store messages in the session (that is, django.contrib.sessions).",1,"Store messages in the session (that is, django.contrib.sessions).",,,,,,"Store messages in the session (that is, django.contrib.sessions).",,,,,"Store messages in the session (that is, django.contrib.sessions).",,,,,,
E4,E2 (agree),,,ModelBase,Metaclass for all models.,1,Metaclass for all models.,,,,,,,,,,,,,,,,,
E1,E2 (agree),,,PermissionDeniedBackendTest,Other backends are not checked once a backend raises PermissionDenied,1,,,,,,,,,,,Other backends are not checked once a backend raises PermissionDenied,,,,,,,
E1,E2 (disagree),,,InputStreamExhausted,No more reads are allowed from this device.,1,No more reads are allowed from this device.,,,No more reads are allowed from this device.,,,,,,,,,,,,,,
E1,E2 (agree),,,EarliestOrLatestTests,Tests for the earliest() and latest() objects methods,1,Tests for the earliest() and latest() objects methods,,,,,,,,,,,,,,,,,
E1,,E3 (agree),,BaseYearArchiveView,List of objects published in a given year.,1,List of objects published in a given year.,,,,,,,,,,,,,,,,,
E1,,E3 (agree),,InvalidBasesError,A model's base classes can't be resolved.,1,A model's base classes can't be resolved.,,,,,,,,,,,,,,,,,
E1,,E3 (agree),,DisallowedModelAdminToField,Invalid to_field was passed to admin view via URL query string,1,Invalid to_field was passed to admin view via URL query string,,,,,,,,,,,,,,,,,
E1,,E4 (disagree),,FootNote,Model added for ticket 19838,1,,,,,,Model added for ticket 19838,,,,,,,,,,,,
E1,,E4 (agree),,Context,A stack container for variable context,1,A stack container for variable context,,,,,,,,,,,,,,,,,
E1,,E4 (agree),,UpdateError,Occurs if Django tries to update a session that was deleted.,1,Occurs if Django tries to update a session that was deleted.,,,,,,,,,,,,,,,,,
E1,E2 (agree),,,DjangoHTMLTranslator,Django-specific reST to HTML tweaks.,1,Django-specific reST to HTML tweaks.,,,,,,,,,,,,,,,,,
E1,E2 (agree),,,SplitHiddenDateTimeWidget,"A widget that splits datetime input into two <input type=""hidden""> inputs.",1,"A widget that splits datetime input into two <input type=""hidden""> inputs.",,,,,,,,,,,,,,,,,
E3,E2 (disagree),,,RequestFactoryEnvironmentTests,"Regression tests for #8551 and #17067: ensure that environment variables
are set correctly in RequestFactory.",2,"Regression tests for #8551 and #17067: ensure that environment variables
are set correctly in RequestFactory.",,," ensure that environment variables
are set correctly in RequestFactory.",,,,,,,,,,,,,,
E3,E1 (agree),,,IncompleteCategoryFormWithExclude,"A form that replaces the model's url field with a custom one. This should
prevent the model field's validation from being called.",2,A form that replaces the model's url field with a custom one. ,,,,,,,,,,"This should
prevent the model field's validation from being called.",,,,,,,
E3,E1 (agree),,,MigrationWriter,"
Take a Migration instance and is able to produce the contents
of the migration file from it.",2,"
Take a Migration instance and is able to produce the contents
of the migration file from it.",,,,,,,,,,,,,,,,,
E3,,E4 (agree),,MakeListTests,"
The make_list filter can destroy existing escaping, so the results are
escaped.",2,,,,"The make_list filter can destroy existing escaping, so the results are
escaped.",,,,,,,,,,,,,,
E3,,E4 (agree),,GeoFlexibleFieldLookupDict,"Subclass that includes updates the `base_data_types_reverse` dict
for geometry field types.",2,,,,,,,,,,,,,,,,,"Subclass that includes updates the `base_data_types_reverse` dict
for geometry field types.",
E3,E2 (agree),,,OverwritingStorage,"Overwrite existing files instead of appending a suffix to generate an
unused name.",2,"Overwrite existing files instead of appending a suffix to generate an
unused name.",,,,,,,,,,,,,,,,,
E2,E1 (agree),,,ImageFileDescriptor,"
Just like the FileDescriptor, but for ImageFields. The only difference is
assigning the width/height to the width_field/height_field, if appropriate.",2,"
Just like the FileDescriptor, but for ImageFields. ",,,"The only difference is
assigning the width/height to the width_field/height_field, if appropriate.",,,,,,,,,,,,,,
E2,,E3 (agree),,SessionStore,"
A database session store, that handles updating the account ID column
inside the custom session model.",2,"
A database session store, ",,,"that handles updating the account ID column
inside the custom session model.",,,,,,,,,,,,,,
E2,,E3 (agree),,TestImageFieldFile,"
Custom Field File class that records whether or not the underlying file
was opened.",2,"
Custom Field File class that records whether or not the underlying file
was opened.",,,,,,,,,,,,,,,,,
E2,,E4 (disagree),,DblFromGeom,"
Argument is a Geometry, return type is double that is passed
in by reference as the last argument.",2,,,"
Argument is a Geometry,

return type is double that is passed
in by reference as the last argument",,,,,,,,,,,,,,,
E2,E3(disagree),E4 (disagree),,FallbackStorage,"
Try to store all messages in the first backend. Store any unstored
messages in each subsequent backend.",2,,,,"
Try to store all messages in the first backend. Store any unstored
messages in each subsequent backend.",,,,,,,,,,,,,,
E2,E1 (agree),,,ChunkIter,"
An iterable that will yield chunks of data. Given a file-like object as the
constructor, yield chunks of read operations from that object.",2,"
An iterable that will yield chunks of data. ",,,"Given a file-like object as the
constructor, yield chunks of read operations from that object.",,,,,,,,,,,,,,
E4,E2 (agree),,,StaticFilesHandler,"WSGI middleware that intercepts calls to the static files directory, as
defined by the STATIC_URL setting, and serves those files.",2,"WSGI middleware that intercepts calls to the static files directory, as
defined by the STATIC_URL setting, and serves those files.",,"WSGI middleware that intercepts calls to the static files directory, as
defined by the STATIC_URL setting, and serves those files.",,,,,,,,,,,,,,,
E4,E1 (disagree),,,ModelSignal,"
Signal subclass that allows the sender to be lazily specified as a string
of the `app_label.ModelName` form.",2,"Signal subclass that allows the sender to be lazily specified as a string
of the `app_label.ModelName` form.",,,,,,,,,,,,,,,,"Signal subclass that allows the sender to be lazily specified as a string
of the `app_label.ModelName` form.",
E4,E1 (disagree),E2 (agree with E1),,SpatialRefSysMixin,"
The SpatialRefSysMixin is a class used by the database-dependent
SpatialRefSys objects to reduce redundant code.",2,"
The SpatialRefSysMixin is a class used by the database-dependent
SpatialRefSys objects to reduce redundant code.",,,,,"
The SpatialRefSysMixin is a class used by the database-dependent
SpatialRefSys objects to reduce redundant code.",,,,,,,,,,,,
E4,,E3 (disagree),,CustomHeaderRemoteUserTest,"
Tests a custom RemoteUserMiddleware subclass with custom HTTP auth user
header.",2,"
Tests a custom RemoteUserMiddleware subclass",,Tests a custom RemoteUserMiddleware subclass with custom HTTP auth user,,,,,,,,,,,,,,Tests a custom RemoteUserMiddleware subclass with custom HTTP auth user,
E4,,E3 (agree),,UserCreationForm,"
A form that creates a user, with no privileges, from the given username and
password.",2,"A form that creates a user, with no privileges, from the given username and
password.",,"A form that creates a user, with no privileges, from the given username and
password.",,,,,,,,,,,,,,,
E4,E2 (agree),,,StrictAssignmentTests,"Should a model do anything special with __setattr__() or descriptors which
raise a ValidationError, a model form should catch the error (#24706).",2,,,,,,,,"Should a model do anything special with __setattr__() or descriptors which
raise a ValidationError, a model form should catch the error (#24706).",,,,,,,,,,
E1,,E3 (agree),,Combinable,"
Provide the ability to combine one or two objects with
some connector. For example F('foo') + F('bar').",2,"Provide the ability to combine one or two objects with
some connector.",For example F('foo') + F('bar').,,,,,,,,,,,,,,,,
E1,,E3 (agree),,ExceptionThatFailsUnpickling,"
After pickling, this class fails unpickling with an error about incorrect
arguments passed to __init__().",2,"
After pickling, this class fails unpickling with an error about incorrect
arguments passed to __init__().",,,,,,,,,,,,,,,,,
E1,,E4 (agree),,AccessMixin,"
Abstract CBV mixin that gives access mixins the same customizable
functionality.",2,"
Abstract CBV mixin that gives access mixins the same customizable
functionality.",,,,,,,,,,,,,,,,,
E1,,E4 (agree),,UniqueAnchor,"This is a model that can be used as
something for other models to point at",2,"This is a model that can be used as
something for other models to point at",,,,,,,,,,,,,,,,,
E1,E2 (agree),,,ErrorDict,"A collection of errors that knows how to display itself in various formats.

The dictionary keys are the field names, and the values are the errors.",3,A collection of errors that knows how to display itself in various formats.,"The dictionary keys are the field names, and the values are the errors.",,,,,,,,,,,,,,,,
E1,E2 (disagree),,,RawPostDataException,"
You cannot access raw_post_data from a request that has
multipart/* POST data if it has been accessed via POST,
FILES, etc..",3,"You cannot access raw_post_data from a request that has
multipart/* POST data if it has been accessed via POST,
FILES, etc..",,," if it has been accessed via POST,
FILES, etc..",,,,,,,"
You cannot access raw_post_data from a request that has
multipart/* POST data if it has been accessed via POST,
FILES, etc..",,,,,,,
E3,E2 (disagree),E1 (agree with E3),,CryptPasswordHasher,"Password hashing using UNIX crypt (not recommended)

The crypt module is not supported on all platforms.",3,Password hashing using UNIX crypt (not recommended),,,,,The crypt module is not supported on all platforms.,,,,,,Password hashing using UNIX crypt (not recommended),,,,,,
E3,E1 (agree),,,GZipMiddleware,"
Compress content if the browser allows gzip compression.
Set the Vary header accordingly, so that caches will base their storage
on the Accept-Encoding header.",3,"Compress content if the browser allows gzip compression.Set the Vary header accordingly, so that caches will base their storage
on the Accept-Encoding header.",,,,,,,,,,,,,,,,,
E3,E1 (agree),,,ConsoleDirective,"
A reStructuredText directive which renders a two-tab code block in which
the second tab shows a Windows command line equivalent of the usual
Unix-oriented examples.",3,"A reStructuredText directive which renders a two-tab code block in which
the second tab shows a Windows command line equivalent of the usual
Unix-oriented examples.",,,,,,,,,,,,,,,,,
E3,,E4 (agree),,SameAsLookup,"
The ""~="" operator is the ""same as"" operator. It tests actual geometric
equality of two features. So if A and B are the same feature,
vertex-by-vertex, the operator returns true.",3,"The ""~="" operator is the ""same as"" operator. It tests actual geometric
equality of two features. So if A and B are the same feature,
vertex-by-vertex, the operator returns true.",,,"The ""~="" operator is the ""same as"" operator. It tests actual geometric
equality of two features. So if A and B are the same feature,
vertex-by-vertex, the operator returns true.",,,,,,,,,,,,,,
E3,,E4 (agree),,CacheHandler,"
A Cache Handler to manage access to Cache instances.

Ensure only one instance of each alias exists per thread.",3,A Cache Handler to manage access to Cache instances.,,,Ensure only one instance of each alias exists per thread.,,,,,,,,,,,,,,
E2,E1 (agree),,,ProxyModelInheritanceTests,"Proxy model inheritance across apps can result in migrate not creating the table
for the proxied model (as described in #12286).  This test creates two dummy
apps and calls migrate, then verifies that the table has been created.",3,"Proxy model inheritance across apps can result in migrate not creating the table
for the proxied model (as described in #12286). ",,," This test creates two dummy
apps and calls migrate, then verifies that the table has been created.",,,,,,,,,,,,,,
E2,,E3 (disagree),,EmptyStringsAsNullTest,"Filtering on non-null character fields works as expected.
The reason for these tests is that Oracle treats '' as NULL, and this
can cause problems in query construction. Refs #17957.",3,,,,,,,,,Refs #17957.,,,,,,,,,
E2,,E3 (disagree),,ManagementForm,"
Keep track of how many form instances are displayed on the page. If adding
new forms via JavaScript, you should increment the count field of this form
as well.",3,Keep track of how many form instances are displayed on the page.,,,,,,,,,,,"If adding
new forms via JavaScript, you should increment the count field of this form
as well.",,,,,,
E2,,E4 (agree),,CustomCacheKeyValidationTests,"Tests for the ability to mixin a custom ``validate_key`` method to
a custom cache backend that otherwise inherits from a builtin
backend, and override the default key validation. Refs #6447.",3,"Tests for the ability to mixin a custom ``validate_key`` method to
a custom cache backend ",,,"that otherwise inherits from a builtin
backend, and override the default key validation. ",,,,,Refs #6447.,,,,,,,,,
E2,,E4 (agree),,BaseUpdateView,"
Base view for updating an existing object.

Using this base class requires subclassing to provide a response mixin.",3,"
Base view for updating an existing object.",,,,,"
Using this base class requires subclassing to provide a response mixin.",,,,,,,,,,,,
E4,E2 (agree),,,BaseDatabaseSchemaEditor,"
This class and its subclasses are responsible for emitting schema-changing
statements to the databases - model creation/removal/alteration, field
renaming, index fiddling, and so on.",3,"
This class and its subclasses are responsible for emitting schema-changing
statements to the databases - model creation/removal/alteration, field
renaming, index fiddling, and so on.",,,,,"This class and its subclasses are responsible for emitting schema-changing
statements to the databases - model creation/removal/alteration, field
renaming, index fiddling, and so on.",,,,,,,,,,,,
E4,E1 (disagree),,,MigrationQuestioner,"
Give the autodetector responses to questions it might have.
This base class has a built-in noninteractive mode, but the
interactive subclass is what the command-line arguments will use.",3,Give the autodetector responses to questions it might have.,"This base class has a built-in noninteractive mode, but the
interactive subclass is what the command-line arguments will use.",,,,"This base class has a built-in noninteractive mode, but the
interactive subclass is what the command-line arguments will use.",,,,,,,,,,,,
E4,E1 (agree),,,Individual,"
A model with a FK to itself. It won't be registered with the admin, so the
corresponding raw ID widget won't have a magnifying glass link to select
related instances (rendering will be called programmatically in this case).",3,A model with a FK to itself.,"It won't be registered with the admin, so the
corresponding raw ID widget won't have a magnifying glass link to select
related instances (rendering will be called programmatically in this case).",,,,"It won't be registered with the admin, so the
corresponding raw ID widget won't have a magnifying glass link to select
related instances (rendering will be called programmatically in this case).",,,,,,,,,,,,
E4,,E3 (disagree),,ParentWithDependentChildren,"Issue #20522
Model where the validation of child foreign-key relationships depends
on validation of the parent",3,"Model where the validation of child foreign-key relationships depends
on validation of the parent",,,,,,,,Issue #20522,,,,"Issue #20522
Model where the validation of child foreign-key relationships depends
on validation of the parent",,,,,
E4,,E3 (disagree),,CustomCacheKeyValidationTests,"Tests for the ability to mixin a custom ``validate_key`` method to
a custom cache backend that otherwise inherits from a builtin
backend, and override the default key validation. Refs #6447.",3,"Tests for the ability to mixin a custom ``validate_key`` method to
a custom cache backend that otherwise inherits from a builtin
backend, and override the default key validation. Refs #6447.",,,,,,,,Refs #6447.,,,,,,,"Tests for the ability to mixin a custom ``validate_key`` method to
a custom cache backend that otherwise inherits from a builtin
backend, and override the default key validation. Refs #6447.",,
E1,,E3 (disagree),,PrePopulatedPostLargeSlug,"Regression test for #15938: a large max_length for the slugfield must not
be localized in prepopulated_fields_js.html or it might end up breaking
the javascript (ie, using THOUSAND_SEPARATOR ends up with maxLength=1,000)",3,,,,,,,,"Regression test for #15938: a large max_length for the slugfield must not
be localized in prepopulated_fields_js.html or it might end up breaking
the javascript (ie, using THOUSAND_SEPARATOR ends up with maxLength=1,000)",Regression test for #15938:,,,,,,,,,
E1,,E3 (agree),,RawPostDataException,"
You cannot access raw_post_data from a request that has
multipart/* POST data if it has been accessed via POST,
FILES, etc..",3,"
You cannot access raw_post_data from a request that has
multipart/* POST data if it has been accessed via POST,
FILES, etc..",,,,,,,,,,,,,,,,,
E1,,E4 (agree),,SubCategoryForm,"
Subclassing without specifying a Meta on the class will use
the parent's Meta (or the first parent in the MRO if there are
multiple parent classes).",3,,,,,,,,,,,,,,,,,"
Subclassing without specifying a Meta on the class will use
the parent's Meta (or the first parent in the MRO if there are
multiple parent classes).",
E1,,E4 (agree),,RemoteTestRunner,"Run tests and record everything but don't display anything.

The implementation matches the unpythonic coding style of unittest2.",3,Run tests and record everything but don't display anything.,,,,,,,,,,,,,,The implementation matches the unpythonic coding style of unittest2.,,,
E1,E2 (agree),,,VariableWrapper,"
An adapter class for cursor variables that prevents the wrapped object
from being converted into a string when used to instantiate an OracleParam.
This can be used generally for any other object that should be passed into
Cursor.execute as-is.",4,"An adapter class for cursor variables that prevents the wrapped object
from being converted into a string when used to instantiate an OracleParam.
","This can be used generally for any other object that should be passed into
Cursor.execute as-is.",,,,,,,,,,,,,,,,
E3,E2 (agree),,,FakePayload,"
A wrapper around BytesIO that restricts what can be read since data from
the network can't be sought and cannot be read outside of its content
length. This makes sure that views can't do anything under the test client
that wouldn't work in real life.",4,"
A wrapper around BytesIO that restricts what can be read since data from
the network can't be sought and cannot be read outside of its content
length.",,,"This makes sure that views can't do anything under the test client
that wouldn't work in real life.",,,,,,,,,,,,,,
E3,E2 (agree),,,MultiPartParser,"
A rfc2388 multipart/form-data parser.

``MultiValueDict.parse()`` reads the input stream in ``chunk_size`` chunks
and returns a tuple of ``(MultiValueDict(POST), MultiValueDict(FILES))``.",4,"
A rfc2388 multipart/form-data parser.",,,,,"``MultiValueDict.parse()`` reads the input stream in ``chunk_size`` chunks
and returns a tuple of ``(MultiValueDict(POST), MultiValueDict(FILES))``.",,,,,,,,,,,,
E3,E1 (agree),,,WindowFrame,"
Model the frame clause in window expressions. There are two types of frame
clauses which are subclasses, however, all processing and validation (by no
means intended to be complete) is done here. Thus, providing an end for a
frame is optional (the default is UNBOUNDED FOLLOWING, which is the last
row in the frame).",5,"
Model the frame clause in window expressions",,,"There are two types of frame
clauses which are subclasses, however, all processing and validation (by no
means intended to be complete) is done here.",,,,,,,,,,,,,"There are two types of frame
clauses which are subclasses, however, all processing and validation (by no
means intended to be complete) is done here.",
E2,E1 (disagree),,,BCryptSHA256PasswordHasher,"
Secure password hashing using the bcrypt algorithm (recommended)

This is considered by many to be the most secure algorithm but you
must first install the bcrypt library.  Please be warned that
this library depends on native C code and might cause portability
issues.",6,Secure password hashing using the bcrypt algorithm (recommended),"This is considered by many to be the most secure algorithm but you
must first install the bcrypt library. ",,,,,,,,,"Please be warned that
this library depends on native C code and might cause portability
issues.",,,,,,,
E2,E1 (disagree),,,MultiWidget,"
A widget that is composed of multiple widgets.

In addition to the values added by Widget.get_context(), this widget
adds a list of subwidgets to the context as widget['subwidgets'].
These can be looped over and rendered like normal widgets.

You'll probably want to use this class with MultiValueField.",7,A widget that is composed of multiple widgets.,,,"In addition to the values added by Widget.get_context(), this widget
adds a list of subwidgets to the context as widget['subwidgets'].
These can be looped over and rendered like normal widgets.
",,,,,,,,You'll probably want to use this class with MultiValueField.,,,,,,
E2,,E3 (agree),,AtomicTests,"
Tests for the atomic decorator and context manager.

The tests make assertions on internal attributes because there isn't a
robust way to ask the database for its current transaction state.

Since the decorator syntax is converted into a context manager (see the
implementation), there are only a few basic tests with the decorator
syntax and the bulk of the tests use the context manager syntax.",8,"
Tests for the atomic decorator and context manager.

",,,"The tests make assertions on internal attributes because there isn't a
robust way to ask the database for its current transaction state.

Since the decorator syntax is converted into a context manager (see the
implementation), there are only a few basic tests with the decorator
syntax and the bulk of the tests use the context manager syntax.",,,,,,,,,,,,,,
E4,E2 (agree),,,XFrameOptionsMiddleware,"
Set the X-Frame-Options HTTP header in HTTP responses.

Do not set the header if it's already set or if the response contains
a xframe_options_exempt value set to True.

By default, set the X-Frame-Options header to 'SAMEORIGIN', meaning the
response can only be loaded on a frame within the same site. To prevent the
response from being loaded in a frame in any site, set X_FRAME_OPTIONS in
your project's Django settings to 'DENY'.",9,,"By default, set the X-Frame-Options header to 'SAMEORIGIN', meaning the
response can only be loaded on a frame within the same site.


To prevent the
response from being loaded in a frame in any site, set X_FRAME_OPTIONS in
your project's Django settings to 'DENY'.",,,,"Do not set the header if it's already set or if the response contains
a xframe_options_exempt value set to True.

By default, set the X-Frame-Options header to 'SAMEORIGIN', meaning the
response can only be loaded on a frame within the same site.


To prevent the
response from being loaded in a frame in any site, set X_FRAME_OPTIONS in
your project's Django settings to 'DENY'.",Set the X-Frame-Options HTTP header in HTTP responses.,,,,,,,,,,,
E4,E2 (agree),,,BoundWidget,"
A container class used for iterating over widgets. This is useful for
widgets that have choices. For example, the following can be used in a
template:

{% for radio in myform.beatles %}
  <label for=""{{ radio.id_for_label }}"">
    {{ radio.choice_label }}
    <span class=""radio"">{{ radio.tag }}</span>
  </label>
{% endfor %}",10,A container class used for iterating over widgets.,"For example, the following can be used in a
template:

{% for radio in myform.beatles %}
  <label for=""{{ radio.id_for_label }}"">
    {{ radio.choice_label }}
    <span class=""radio"">{{ radio.tag }}</span>
  </label>
{% endfor %}",,,,"This is useful for
widgets that have choices.",,,,,,,,,,,,
E4,E1 (agree),,,ReverseGenericManyToOneDescriptor,"
Accessor to the related objects manager on the one-to-many relation created
by GenericRelation.

In the example::

    class Post(Model):
        comments = GenericRelation(Comment)

``post.comments`` is a ReverseGenericManyToOneDescriptor instance.",9,"Accessor to the related objects manager on the one-to-many relation created
by GenericRelation.","In the example::

    class Post(Model):
        comments = GenericRelation(Comment)

``post.comments`` is a ReverseGenericManyToOneDescriptor instance.",,,,,,,,,,,,,,,,
E1,E2 (agree),,,Operation,"
Base class for migration operations.

It's responsible for both mutating the in-memory model state
(see db/migrations/state.py) to represent what it performs, as well
as actually performing it against a live database.

Note that some operations won't modify memory state at all (e.g. data
copying operations), and some will need their modifications to be
optionally specified by the user (e.g. custom Python code snippets)

Due to the way this class deals with deconstruction, it should be
considered immutable.",12,"Base class for migration operations.
",,,"It's responsible for both mutating the in-memory model state
(see db/migrations/state.py) to represent what it performs, as well
as actually performing it against a live database.
",,,,,,,,,,"
Due to the way this class deals with deconstruction, it should be
considered immutable.",,,,"Note that some operations won't modify memory state at all (e.g. data
copying operations), and some will need their modifications to be
optionally specified by the user (e.g. custom Python code snippets)
"
E1,,E3 (disagree),,Migration,"
The base class for all migrations.

Migration files will import this from django.db.migrations.Migration
and subclass it as a class called Migration. It will have one or more
of the following attributes:

 - operations: A list of Operation instances, probably from django.db.migrations.operations
 - dependencies: A list of tuples of (app_path, migration_name)
 - run_before: A list of tuples of (app_path, migration_name)
 - replaces: A list of migration_names

Note that all migrations come out of migrations and into the Loader or
Graph as instances, having been initialized with their app label and name.",13,"The base class for all migrations.
"," It will have one or more
of the following attributes:

 - operations: A list of Operation instances, probably from django.db.migrations.operations
 - dependencies: A list of tuples of (app_path, migration_name)
 - run_before: A list of tuples of (app_path, migration_name)
 - replaces: A list of migration_names
","It will have one or more
of the following attributes:

 - operations: A list of Operation instances, probably from django.db.migrations.operations
 - dependencies: A list of tuples of (app_path, migration_name)
 - run_before: A list of tuples of (app_path, migration_name)
 - replaces: A list of migration_names
",,,,,,,,"Note that all migrations come out of migrations and into the Loader or
Graph as instances, having been initialized with their app label and name.",,,"Note that all migrations come out of migrations and into the Loader or
Graph as instances, having been initialized with their app label and name.",,,"
Migration files will import this from django.db.migrations.Migration
and subclass it as a class called Migration.",
E1,,E3 (disagree),,AutoFieldMeta,"
Metaclass to maintain backward inheritance compatibility for AutoField.

It is intended that AutoFieldMixin become public API when it is possible to
create a non-integer automatically-generated field using column defaults
stored in the database.

In many areas Django also relies on using isinstance() to check for an
automatically-generated field as a subclass of AutoField. A new flag needs
to be implemented on Field to be used instead.

When these issues have been addressed, this metaclass could be used to
deprecate inheritance from AutoField and use of isinstance() with AutoField
for detecting automatically-generated fields.",13,"Metaclass to maintain backward inheritance compatibility for AutoField.
","In many areas Django also relies on using isinstance() to check for an
automatically-generated field as a subclass of AutoField. A new flag needs
to be implemented on Field to be used instead.
",,"It is intended that AutoFieldMixin become public API when it is possible to
create a non-integer automatically-generated field using column defaults
stored in the database.
",,"When these issues have been addressed, this metaclass could be used to
deprecate inheritance from AutoField and use of isinstance() with AutoField
for detecting automatically-generated fields.",,,,,,"A new flag needs
to be implemented on Field to be used instead.
When these issues have been addressed, this metaclass could be used to
deprecate inheritance from AutoField and use of isinstance() with AutoField
for detecting automatically-generated fields.","In many areas Django also relies on using isinstance() to check for an
automatically-generated field as a subclass of AutoField",,,,,
E3,E1 (agree),,,MultiValueField,"
Aggregate the logic of multiple Fields.

Its clean() method takes a ""decompressed"" list of values, which are then
cleaned into a single value according to self.fields. Each value in
this list is cleaned by the corresponding field -- the first value is
cleaned by the first field, the second value is cleaned by the second
field, etc. Once all fields are cleaned, the list of clean values is
""compressed"" into a single value.

Subclasses should not have to implement clean(). Instead, they must
implement compress(), which takes a list of valid values and returns a
""compressed"" version of those values -- a single value.

You'll probably want to use this with MultiWidget.",14,Aggregate the logic of multiple Fields.,,,"Its clean() method takes a ""decompressed"" list of values, which are then
cleaned into a single value according to self.fields. Each value in
this list is cleaned by the corresponding field -- the first value is
cleaned by the first field, the second value is cleaned by the second
field, etc. Once all fields are cleaned, the list of clean values is
""compressed"" into a single value.",,,,,,,,"
You'll probably want to use this with MultiWidget.",,,,,"Subclasses should not have to implement clean(). Instead, they must
implement compress(), which takes a list of valid values and returns a
""compressed"" version of those values -- a single value.",
E3,,E4 (agree),,TemplateDoesNotExist,"
The exception used when a template does not exist. Optional arguments:

backend
    The template backend class used when raising this exception.

tried
    A list of sources that were tried when finding the template. This
    is formatted as a list of tuples containing (origin, status), where
    origin is an Origin object or duck type and status is a string with the
    reason the template wasn't found.

chain
    A list of intermediate TemplateDoesNotExist exceptions. This is used to
    encapsulate multiple exceptions when loading templates from multiple
    engines.",15,"
The exception used when a template does not exist",,"Optional arguments:

backend
    The template backend class used when raising this exception.

tried
    A list of sources that were tried when finding the template. This
    is formatted as a list of tuples containing (origin, status), where
    origin is an Origin object or duck type and status is a string with the
    reason the template wasn't found.

chain
    A list of intermediate TemplateDoesNotExist exceptions. This is used to
    encapsulate multiple exceptions when loading templates from multiple
    engines.",,,,,,,,,,,,,,,
E2,,E3 (disagree),,Client,"
A class that can act as a client for testing purposes.

It allows the user to compose GET and POST requests, and
obtain the response that the server gave to those requests.
The server Response objects are annotated with the details
of the contexts and templates that were rendered during the
process of serving the request.

Client objects are stateful - they will retain cookie (and
thus session) details for the lifetime of the Client instance.

This is not intended as a replacement for Twill/Selenium or
the like - it is here to allow testing against the
contexts and templates produced by a view, rather than the
HTML rendered to the end-user.",15,"A class that can act as a client for testing purposes.

",,,"It allows the user to compose GET and POST requests, and
obtain the response that the server gave to those requests.
The server Response objects are annotated with the details
of the contexts and templates that were rendered during the
process of serving the request.

Client objects are stateful - they will retain cookie (and
thus session) details for the lifetime of the Client instance.
",,"
This is not intended as a replacement for Twill/Selenium or
the like - it is here to allow testing against the
contexts and templates produced by a view, rather than the
HTML rendered to the end-user.",,,,,"This is not intended as a replacement for Twill/Selenium or
the like - it is here to allow testing against the
contexts and templates produced by a view, rather than the
HTML rendered to the end-user.",,,,,,,
E2,,E4 (disagree),,TestUtils,"
This __doc__ output is required for testing. I copied this example from
`admindocs` documentation. (TITLE)

Display an individual :model:`myapp.MyModel`.

**Context**

``RequestContext``

``mymodel``
    An instance of :model:`myapp.MyModel`.

**Template:**

:template:`myapp/my_template.html` (DESCRIPTION)

some_metadata: some data",17,,,,,,This __doc__ output is required for testing.,,,"I copied this example from
`admindocs` documentation. (TITLE)

Display an individual :model:`myapp.MyModel`.

**Context**

``RequestContext``

``mymodel``
    An instance of :model:`myapp.MyModel`.

**Template:**

:template:`myapp/my_template.html` (DESCRIPTION)

some_metadata: some data",,,,,,,,,
E4,E1 (disagree),,,MultiValueDict,"
A subclass of dictionary customized to handle multiple values for the
same key.

>>> d = MultiValueDict({'name': ['Adrian', 'Simon'], 'position': ['Developer']})
>>> d['name']
'Simon'
>>> d.getlist('name')
['Adrian', 'Simon']
>>> d.getlist('doesnotexist')
[]
>>> d.getlist('doesnotexist', ['Adrian', 'Simon'])
['Adrian', 'Simon']
>>> d.get('lastname', 'nonexistent')
'nonexistent'
>>> d.setlist('lastname', ['Holovaty', 'Willison'])

This class exists to solve the irritating problem raised by cgi.parse_qs,
which returns a list for every key, even though most Web forms submit
single name-value pairs.",19,"A subclass of dictionary customized to handle multiple values for the
same key.",">>> d = MultiValueDict({'name': ['Adrian', 'Simon'], 'position': ['Developer']})
>>> d['name']
'Simon'
>>> d.getlist('name')
['Adrian', 'Simon']
>>> d.getlist('doesnotexist')
[]
>>> d.getlist('doesnotexist', ['Adrian', 'Simon'])
['Adrian', 'Simon']
>>> d.get('lastname', 'nonexistent')
'nonexistent'
>>> d.setlist('lastname', ['Holovaty', 'Willison'])",,"This class exists to solve the irritating problem raised by cgi.parse_qs,
which returns a list for every key, even though most Web forms submit
single name-value pairs.",,"This class exists to solve the irritating problem raised by cgi.parse_qs,
which returns a list for every key, even though most Web forms submit
single name-value pairs.",,,,,,,,,,,,
E4,,E3 (disagree),,MigrationGraph,"
Represent the digraph of all migrations in a project.

Each migration is a node, and each dependency is an edge. There are
no implicit dependencies between numbered migrations - the numbering is
merely a convention to aid file listing. Every new numbered migration
has a declared dependency to the previous number, meaning that VCS
branch merges can be detected and resolved.

Migrations files can be marked as replacing another set of migrations -
this is to support the ""squash"" feature. The graph handler isn't responsible
for these; instead, the code to load them in here should examine the
migration files and if the replaced migrations are all either unapplied
or not present, it should ignore the replaced ones, load in just the
replacing migration, and repoint any dependencies that pointed to the
replaced migrations to point to the replacing one.

A node should be a tuple: (app_path, migration_name). The tree special-cases
things within an app - namely, root nodes and leaf nodes ignore dependencies
to other apps.",19,Represent the digraph of all migrations in a project.,"Migrations files can be marked as replacing another set of migrations -
this is to support the ""squash"" feature.


The graph handler isn't responsible
for these; instead, the code to load them in here should examine the
migration files and if the replaced migrations are all either unapplied
or not present, it should ignore the replaced ones, load in just the
replacing migration, and repoint any dependencies that pointed to the
replaced migrations to point to the replacing one.","A node should be a tuple: (app_path, migration_name).",,,"Each migration is a node, and each dependency is an edge.


There are
no implicit dependencies between numbered migrations - the numbering is
merely a convention to aid file listing.",,,,,"The tree special-cases
things within an app - namely, root nodes and leaf nodes ignore dependencies
to other apps.","The graph handler isn't responsible
for these; instead, the code to load them in here should examine the
migration files and if the replaced migrations are all either unapplied
or not present, it should ignore the replaced ones, load in just the
replacing migration, and repoint any dependencies that pointed to the
replaced migrations to point to the replacing one.",,,,,,"Every new numbered migration
has a declared dependency to the previous number, meaning that VCS
branch merges can be detected and resolved."
E1,,E4 (agree),,Permission,"
The permissions system provides a way to assign permissions to specific
users and groups of users.

The permission system is used by the Django admin site, but may also be
useful in your own code. The Django admin site uses permissions as follows:

    - The ""add"" permission limits the user's ability to view the ""add"" form
      and add an object.
    - The ""change"" permission limits a user's ability to view the change
      list, view the ""change"" form and change an object.
    - The ""delete"" permission limits the ability to delete an object.
    - The ""view"" permission limits the ability to view an object.

Permissions are set globally per type of object, not per specific object
instance. It is possible to say ""Mary may change news stories,"" but it's
not currently possible to say ""Mary may change news stories, but only the
ones she created herself"" or ""Mary may only change news stories that have a
certain status or publication date.""

The permissions listed above are automatically created for each model.",20,"The permissions system provides a way to assign permissions to specific
users and groups of users.
","The permission system is used by the Django admin site, but may also be
useful in your own code. The Django admin site uses permissions as follows:

    - The ""add"" permission limits the user's ability to view the ""add"" form
      and add an object.
    - The ""change"" permission limits a user's ability to view the change
      list, view the ""change"" form and change an object.
    - The ""delete"" permission limits the ability to delete an object.
    - The ""view"" permission limits the ability to view an object.
",,"
The permissions listed above are automatically created for each model.",,,,,,,,,,,,,,"Permissions are set globally per type of object, not per specific object
instance. It is possible to say ""Mary may change news stories,"" but it's
not currently possible to say ""Mary may change news stories, but only the
ones she created herself"" or ""Mary may only change news stories that have a
certain status or publication date.""
"
E1,,E4 (agree),,MigrationLoader,"
Load migration files from disk and their status from the database.

Migration files are expected to live in the ""migrations"" directory of
an app. Their names are entirely unimportant from a code perspective,
but will probably follow the 1234_name.py convention.

On initialization, this class will scan those directories, and open and
read the Python files, looking for a class called Migration, which should
inherit from django.db.migrations.Migration. See
django.db.migrations.migration for what that looks like.

Some migrations will be marked as ""replacing"" another set of migrations.
These are loaded into a separate set of migrations away from the main ones.
If all the migrations they replace are either unapplied or missing from
disk, then they are injected into the main set, replacing the named migrations.
Any dependency pointers to the replaced migrations are re-pointed to the
new migration.

This does mean that this class MUST also talk to the database as well as
to disk, but this is probably fine. We're already not just operating
in memory.",21,"Load migration files from disk and their status from the database.
","This does mean that this class MUST also talk to the database as well as
to disk, but this is probably fine. We're already not just operating
in memory.",,"On initialization, this class will scan those directories, and open and
read the Python files, looking for a class called Migration, which should
inherit from django.db.migrations.Migration. See
django.db.migrations.migration for what that looks like.

Some migrations will be marked as ""replacing"" another set of migrations.
These are loaded into a separate set of migrations away from the main ones.
If all the migrations they replace are either unapplied or missing from
disk, then they are injected into the main set, replacing the named migrations.
Any dependency pointers to the replaced migrations are re-pointed to the
new migration.
",,,,,,,,"Migration files are expected to live in the ""migrations"" directory of
an app. Their names are entirely unimportant from a code perspective,
but will probably follow the 1234_name.py convention.
",,,,,,
E3,,E4 (disagree),,Atomic,"
Guarantee the atomic execution of a given block.

An instance can be used either as a decorator or as a context manager.

When it's used as a decorator, __call__ wraps the execution of the
decorated function in the instance itself, used as a context manager.

When it's used as a context manager, __enter__ creates a transaction or a
savepoint, depending on whether a transaction is already in progress, and
__exit__ commits the transaction or releases the savepoint on normal exit,
and rolls back the transaction or to the savepoint on exceptions.

It's possible to disable the creation of savepoints if the goal is to
ensure that some code runs within a transaction without creating overhead.

A stack of savepoints identifiers is maintained as an attribute of the
connection. None denotes the absence of a savepoint.

This allows reentrancy even if the same AtomicWrapper is reused. For
example, it's possible to define `oa = atomic('other')` and use `@oa` or
`with oa:` multiple times.

Since database connections are thread-local, this is thread-safe.

This is a private API.",25,"
Guarantee the atomic execution of a given block.","When it's used as a decorator, __call__ wraps the execution of the
decorated function in the instance itself, used as a context manager.

When it's used as a context manager, __enter__ creates a transaction or a
savepoint, depending on whether a transaction is already in progress, and
__exit__ commits the transaction or releases the savepoint on normal exit,
and rolls back the transaction or to the savepoint on exceptions.

It's possible to disable the creation of savepoints if the goal is to
ensure that some code runs within a transaction without creating overhead.

A stack of savepoints identifiers is maintained as an attribute of the
connection. None denotes the absence of a savepoint.

This allows reentrancy even if the same AtomicWrapper is reused.",,"An instance can be used either as a decorator or as a context manager.When it's used as a decorator, __call__ wraps the execution of the
decorated function in the instance itself, used as a context manager.",,,,,,,"
This is a private API.
Since database connections are thread-local, this is thread-safe.",,,,,,,
E2,,E4 (agree),,ListMixin,"
A base class which provides complete list interface.
Derived classes must call ListMixin's __init__() function
and implement the following:

function _get_single_external(self, i):
    Return single item with index i for general use.
    The index i will always satisfy 0 <= i < len(self).

function _get_single_internal(self, i):
    Same as above, but for use within the class [Optional]
    Note that if _get_single_internal and _get_single_internal return
    different types of objects, _set_list must distinguish
    between the two and handle each appropriately.

function _set_list(self, length, items):
    Recreate the entire object.

    NOTE: items may be a generator which calls _get_single_internal.
    Therefore, it is necessary to cache the values in a temporary:
        temp = list(items)
    before clobbering the original storage.

function _set_single(self, i, value):
    Set the single item at index i to value [Optional]
    If left undefined, all mutations will result in rebuilding
    the object using _set_list.

function __len__(self):
    Return the length

int _minlength:
    The minimum legal length [Optional]

int _maxlength:
    The maximum legal length [Optional]

type or tuple _allowed:
    A type or tuple of allowed item types [Optional]",38,A base class which provides complete list interface.,,,"
Derived classes must call ListMixin's __init__() function
and implement the following:

function _get_single_external(self, i):
    Return single item with index i for general use.
    The index i will always satisfy 0 <= i < len(self).

function _get_single_internal(self, i):
    Same as above, but for use within the class [Optional]
    Note that if _get_single_internal and _get_single_internal return
    different types of objects, _set_list must distinguish
    between the two and handle each appropriately.

function _set_list(self, length, items):
    Recreate the entire object.

    NOTE: items may be a generator which calls _get_single_internal.
    Therefore, it is necessary to cache the values in a temporary:
        temp = list(items)
    before clobbering the original storage.

function _set_single(self, i, value):
    Set the single item at index i to value [Optional]
    If left undefined, all mutations will result in rebuilding
    the object using _set_list.

function __len__(self):
    Return the length

int _minlength:
    The minimum legal length [Optional]

int _maxlength:
    The maximum legal length [Optional]

type or tuple _allowed:
    A type or tuple of allowed item types [Optional]",,,,,,,,,,,,,,
E4,,E3 (disagree),,BaseCommand,"
The base class from which all management commands ultimately
derive.

Use this class if you want access to all of the mechanisms which
parse the command-line arguments and work out what code to call in
response; if you don't need to change any of that behavior,
consider using one of the subclasses defined in this file.

If you are interested in overriding/customizing various aspects of
the command-parsing and -execution behavior, the normal flow works
as follows:

1. ``django-admin`` or ``manage.py`` loads the command class
   and calls its ``run_from_argv()`` method.

2. The ``run_from_argv()`` method calls ``create_parser()`` to get
   an ``ArgumentParser`` for the arguments, parses them, performs
   any environment changes requested by options like
   ``pythonpath``, and then calls the ``execute()`` method,
   passing the parsed arguments.

3. The ``execute()`` method attempts to carry out the command by
   calling the ``handle()`` method with the parsed arguments; any
   output produced by ``handle()`` will be printed to standard
   output and, if the command is intended to produce a block of
   SQL statements, will be wrapped in ``BEGIN`` and ``COMMIT``.

4. If ``handle()`` or ``execute()`` raised any exception (e.g.
   ``CommandError``), ``run_from_argv()`` will  instead print an error
   message to ``stderr``.

Thus, the ``handle()`` method is typically the starting point for
subclasses; many built-in commands and command types either place
all of their logic in ``handle()``, or perform some additional
parsing work in ``handle()`` and then delegate from it to more
specialized methods as needed.

Several attributes affect behavior at various steps along the way:

``help``
    A short description of the command, which will be printed in
    help messages.

``output_transaction``
    A boolean indicating whether the command outputs SQL
    statements; if ``True``, the output will automatically be
    wrapped with ``BEGIN;`` and ``COMMIT;``. Default value is
    ``False``.

``requires_migrations_checks``
    A boolean; if ``True``, the command prints a warning if the set of
    migrations on disk don't match the migrations in the database.

``requires_system_checks``
    A boolean; if ``True``, entire Django project will be checked for errors
    prior to executing the command. Default value is ``True``.
    To validate an individual application's models
    rather than all applications' models, call
    ``self.check(app_configs)`` from ``handle()``, where ``app_configs``
    is the list of application's configuration provided by the
    app registry.

``stealth_options``
    A tuple of any options the command uses which aren't defined by the
    argument parser.",65,"The base class from which all management commands ultimately
derive.","If you are interested in overriding/customizing various aspects of
the command-parsing and -execution behavior, the normal flow works
as follows:

1. ``django-admin`` or ``manage.py`` loads the command class
   and calls its ``run_from_argv()`` method.

2. The ``run_from_argv()`` method calls ``create_parser()`` to get
   an ``ArgumentParser`` for the arguments, parses them, performs
   any environment changes requested by options like
   ``pythonpath``, and then calls the ``execute()`` method,
   passing the parsed arguments.

3. The ``execute()`` method attempts to carry out the command by
   calling the ``handle()`` method with the parsed arguments; any
   output produced by ``handle()`` will be printed to standard
   output and, if the command is intended to produce a block of
   SQL statements, will be wrapped in ``BEGIN`` and ``COMMIT``.

4. If ``handle()`` or ``execute()`` raised any exception (e.g.
   ``CommandError``), ``run_from_argv()`` will  instead print an error
   message to ``stderr``.","Several attributes affect behavior at various steps along the way:

``help``
    A short description of the command, which will be printed in
    help messages.

``output_transaction``
    A boolean indicating whether the command outputs SQL
    statements; if ``True``, the output will automatically be
    wrapped with ``BEGIN;`` and ``COMMIT;``. Default value is
    ``False``.

``requires_migrations_checks``
    A boolean; if ``True``, the command prints a warning if the set of
    migrations on disk don't match the migrations in the database.

``requires_system_checks``
    A boolean; if ``True``, entire Django project will be checked for errors
    prior to executing the command. Default value is ``True``.
    To validate an individual application's models
    rather than all applications' models, call
    ``self.check(app_configs)`` from ``handle()``, where ``app_configs``
    is the list of application's configuration provided by the
    app registry.",,,"Use this class if you want access to all of the mechanisms which
parse the command-line arguments and work out what code to call in
response; if you don't need to change any of that behavior,
consider using one of the subclasses defined in this file.

Thus, the ``handle()`` method is typically the starting point for
subclasses; many built-in commands and command types either place
all of their logic in ``handle()``, or perform some additional
parsing work in ``handle()`` and then delegate from it to more
specialized methods as needed.

",,,,,,"Use this class if you want access to all of the mechanisms which parse the command-line arguments and work out what code to call in response; if you don't need to change any of that behavior, consider using one of the subclasses defined in this file.",,,,,"Use this class if you want access to all of the mechanisms which
parse the command-line arguments and work out what code to call in
response; if you don't need to change any of that behavior,
consider using one of the subclasses defined in this file.",