Class,Comment,Intent,Responsibilities,Collaborators,Key messages,Key implementation points,Instance variables,ReferenceToOtherResources,Subclasses Explanation,Class references,Example,Todo comments,Naming convention,Coding guidlines,Warnings,Discourse,Links,Extensions,Recommendations,Observations,Preconditions,Dependencies,License/copyright ,Other
ZnRequestResponseHandledEvent,ZnRequestResponseHandledEvent signals that the handler (delegate) processed a request and produced a response in duration in milliseconds. This duration is thus the time taken by the application itself.,,ZnRequestResponseHandledEvent signals that the handler (delegate) processed a request and produced a response in duration in milliseconds.,ZnRequestResponseHandledEvent signals that the handler (delegate) processed a request and produced a response in duration in milliseconds.,,This duration is thus the time taken by the application itself.,,,,,,,,,,,,,,,,,,
AthensSceneView,"i am simple morph for representing some scene.
  
  The scene is any object which implements #renderOn: method,
  or a block with single argument.
  (an argument passed is an Athens canvas).
  
  I implement a simple view panning and zooming with mouse drag and mouse-wheel (correspondigly).
  
  Example1: open scene view, by passing a simple rendering block.
  
  | view |
  view := AthensSceneView new.
  
  view scene: [:canvas |
  canvas surface clear: Color black.
  canvas setPaint: Color red.
  canvas drawShape: (0@0 corner:120@100)
  ].
  view openInWindow.
  
  Example2: open scene view on imported SVG file (note you need 'Athens-SVG' package loaded):
  
  | view |
  view := AthensSceneView new.
  view scene: (AthensSVGConverter fromFile: 'lion.svg').
  
  view openInWindow.",i am simple morph for representing some scene.,I implement a simple view panning and zooming with mouse drag and mouse-wheel (correspondigly).,,,"The scene is any object which implements #renderOn: method,
 or a block with single argument.",,,,,"Example1: open scene view, by passing a simple rendering block.
  
  | view |
  view := AthensSceneView new.
  
  view scene: [:canvas |
  canvas surface clear: Color black.
  canvas setPaint: Color red.
  canvas drawShape: (0@0 corner:120@100)
  ].
  view openInWindow.
  
  Example2: open scene view on imported SVG file (note you need 'Athens-SVG' package loaded):
  
  | view |
  view := AthensSceneView new.
  view scene: (AthensSVGConverter fromFile: 'lion.svg').
  
  view openInWindow.",,,,,,,,,,,,,
NavigationHistory,I act as a web browser history,I act as a web browser history,,,,,,,,,,,,,,,,,,,,,,
GLMEmptyPopupBrick,"I am a general popup widget that also visually preserves a context of a trigger element.
  I can opened based on opening strategy (hover, shift + hover, or double click + shift).
  Subclasses should implement #onCreated method to customize popup content",I am a general popup widget that also visually preserves a context of a trigger element.,,I am a general popup widget that also visually preserves a context of a trigger element.,Subclasses should implement #onCreated method to customize popup content,,,,,,"I can opened based on opening strategy (hover, shift + hover, or double click + shift).",,,,Subclasses should implement #onCreated method to customize popup content,,,,,,,,,
ClyMethodSourcesQuery,"I return all methods which source code includes particular string pattern.
  For example it can be simple substring or regex expression.
  But generally pattern is represented by ClyStringPattern subclasses.
  
  To create my instances use following methods:
  
  ClyMethodSources withString: 'probe string'.
  ClyMethodSources withString: 'probe string' caseSensitive: true.
  ClyMethodSources filteredBy: aStringPattern
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  pattern: <ClyStringPattern>","For example it can be simple substring or regex expression.
  But generally pattern is represented by ClyStringPattern subclasses.",I return all methods which source code includes particular string pattern.,But generally pattern is represented by ClyStringPattern subclasses.,,,"Internal Representation and Key Implementation Points.
  
  Instance Variables
  pattern: <ClyStringPattern>",,,But generally pattern is represented by ClyStringPattern subclasses.,"To create my instances use following methods:
  
  ClyMethodSources withString: 'probe string'.
  ClyMethodSources withString: 'probe string' caseSensitive: true.
  ClyMethodSources filteredBy: aStringPattern",,,,,,,,,,,,,
ManifestCollectionsSupport,"Some basic classes used in collections: Link, Associtation, Weak*, CharacterSet, SetElement, etc.",,Some basic classes used in collections,"Link, Associtation, Weak*, CharacterSet, SetElement, etc.",,,,,,,,,,,,,,,,,,,,
RePatternCodeRule,An abstract class containing common tools for match and rewrite rules,An abstract class containing common tools,for match and rewrite rules,,,,,,,,,,,,,,,,,,,,,
RBAllAnyNoneSatisfyRule,"Replace ad-hoc implementations (using explicit logic based on do:) of ==allSatisfy:==, ==anySatisfy:== and ==noneSatisfy:== by the adequate calls to ==allSatisfy:==, ==anySatisfy:== or ==noneSatisfy:==.
  
  For example
  
  [[[
  collection do: [ :each |
  ...
  condition
  ifFalse: [ ^ false ] ]
  ]]]
  is transformed into
  
  [[[
  collection allSatisfy: [ :each | condition ]
  ]]]","""Replace ad-hoc implementations (using explicit logic based on do:) of ==allSatisfy:==, ==anySatisfy:== and ==noneSatisfy:== by the adequate calls to ==allSatisfy:==, ==anySatisfy:== or ==noneSatisfy:==.",,,,,,,,,"For example
  
  [[[
  collection do: [ :each |
  ...
  condition
  ifFalse: [ ^ false ] ]
  ]]]
  is transformed into
  
  [[[
  collection allSatisfy: [ :each | condition ]
  ]]]""",,,,,,,,,,,,,
DialogWindow,"Dialog style window with no window controls (expand, collapse etc). Usually opened modally (the morph that is used to modally open determines the modal scope, use of World implies ""system modal"").
  Designed to be subclassed with content.
  Supports Escape key for cancel and Enter key for default button.","""Dialog style window with no window controls (expand, collapse etc).","Usually opened modally (the morph that is used to modally open determines the modal scope, use of World implies """"system modal""""). Supports Escape key for cancel and Enter key for default button.""",,,,,,,,,,,,,,,Designed to be subclassed with content.,,,,,,
LazyClassListExample,LazyClassListExample new openOn: Object,,,,,,,,,,LazyClassListExample new openOn: Object,,,,,,,,,,,,,
FLContextSerializationTest,SUnit tests for fuel serialization of methods contexts,SUnit tests for fuel serialization of methods contexts,,for fuel serialization of methods contexts,,,,,,,,,,,,,,,,,,,,
RBRenameVariableTransformation,"Renames a variable in a class and all its direct accesses. It is necessary to indicate whether the variable is an instance or class variable. It is not implemented as a composite transformation because the rename is made internally in the model.
  
  Usage:
  transformation := (RBRenameVariableTransformation
  rename: 'classBlock' to: 'asdf'
  in: #RBBasicLintRuleTest
  classVariable: false)
  transform.
  (ChangesBrowser changes: transformation model changes changes) open
  
  Preconditions:
  overrides from RBAddVariableRefactoring and RBRemoveVariableRefactoring",,Renames a variable in a class and all its direct accesses. It is necessary to indicate whether the variable is an instance or class variable. It is not implemented as a composite transformation because the rename is made internally in the model.,,,,,,,,"Usage:
  transformation := (RBRenameVariableTransformation
  rename: 'classBlock' to: 'asdf'
  in: #RBBasicLintRuleTest
  classVariable: false)
  transform.
  (ChangesBrowser changes: transformation model changes changes) open",,,,,,,,,,"Preconditions:
 overrides from RBAddVariableRefactoring and RBRemoveVariableRefactoring",,,
WatchpointWindow,I am a minimal user interface that shows the last entries in the watchpoint history.,I am a minimal user interface that shows the last entries in the watchpoint history.,I am a minimal user interface that shows the last entries in the watchpoint history.,,,,,,,,,,,,,,,,,,,,,
RBSearchingLiteralRule,Checks for repeated literal equalitity tests that should rather be implemented as a search in a literal collection.,,Checks for repeated literal equalitity tests,,,,,,,,,,,,,,,,,,,,,
PackageNodeExample,Example for a pakage node,Example for a pakage node,,,,,,,,,,,,,,,,,,,,,,
ExampleForTest12,An example class at level 2 (indirectly below Object) used for testing class hierarchy,An example class at level 2 (indirectly below Object) used for testing class hierarchy,An example class at level 2 (indirectly below Object) used for testing class hierarchy,,,,,,,An example class at level 2 (indirectly below Object) used for testing class hierarchy,,,,,,,,,,,,,,
AthensCairoSurface,"i am a concrete implementation of Athens surface which using cairo graphics library for rendering.
  
  Cairo library, by itself can have multiple surface types.
  This class uses image surface (a bitmap located in system memory) and maps to cairo_image_surface_t* C type.
  
  **NOTE**
  As a workaround of bitblt bug, the actual Cairo surfaces, created internally is with 1 extra pixel higher than requested. This is, however completely hidden from users.",i am a concrete implementation of Athens surface which using cairo graphics library for rendering.,,"i am a concrete implementation of Athens surface which using cairo graphics library for rendering. Cairo library, by itself can have multiple surface types.
 
  This class uses image surface (a bitmap located in system memory) and maps to cairo_image_surface_t* C type.",,"Cairo library, by itself can have multiple surface types.",,,,,,,,,"**NOTE**
 As a workaround of bitblt bug, the actual Cairo surfaces, created internally is with 1 extra pixel higher than requested. This is, however completely hidden from users.",,,,,,,i am a concrete implementation of Athens surface which using cairo graphics library for rendering.,,
GLMPresentation,"A GLMPresentation is the abstract class for the hierarchy of presentations. A presentation specifies how the pane (held in the pane instance variable) is going to be displayed. It typically reads at least the #entity port of a pane and populates at least the #selection port.
  
  updateActions holds a collection of GLMUpdateAction that are used to update the presentation via announcements.
  
  rawSelectionTransmissions holds a collection of transmission whose origins are this presentation's #rawSelection port. Destinations of this transmissions are on the pane. This collection always contains at least one transmission to the pane's #selection port. To transform the values travelling through this transmission use #send:. To add new transmissions, use #send:as:.
  
  Because Glamour has a prototype-based design it relies on copying the presentations before installing them in panes (via transmissions). The parentPrototype instance variable keeps track of the presentation from which the current one was copied.
  
  It raises:
  - GLMContextChanged to let the world know that something has changed in the containing pane. This is typically used by the renderer to update the rendering.
  - GLMPresentationUpdated to let the world know that the presentations wants to be updated because of reasons other than the pane context changed.",A GLMPresentation is the abstract class for the hierarchy of presentations.,A presentation specifies how the pane (held in the pane instance variable) is going to be displayed. It typically reads at least the #entity port of a pane and populates at least the #selection port.,"It raises:
  - GLMContextChanged to let the world know that something has changed in the containing pane. This is typically used by the renderer to update the rendering.
  - GLMPresentationUpdated to let the world know that the presentations wants to be updated because of reasons other than the pane context changed.","To transform the values travelling through this transmission use #send:. To add new transmissions, use #send:as:.",Because Glamour has a prototype-based design it relies on copying the presentations before installing them in panes (via transmissions).,"A presentation specifies how the pane (held in the pane instance variable) is going to be displayed. It typically reads at least the #entity port of a pane and populates at least the #selection port.
 
  updateActions holds a collection of GLMUpdateAction that are used to update the presentation via announcements.
  
  rawSelectionTransmissions holds a collection of transmission whose origins are this presentation's #rawSelection port. Destinations of this transmissions are on the pane. This collection always contains at least one transmission to the pane's #selection port
 
 The parentPrototype instance variable keeps track of the presentation from which the current one was copied.",,,"It raises:
  - GLMContextChanged to let the world know that something has changed in the containing pane. This is typically used by the renderer to update the rendering.
  - GLMPresentationUpdated to let the world know that the presentations wants to be updated because of reasons other than the pane context changed.",,,,,,,,,,,,,,
MetacelloLookupProjectSpecForLoad,**MetacelloLookupProjectSpecForLoad** ends up returning an instance of **MetacelloProjectSpecForLoad**,,**MetacelloLookupProjectSpecForLoad** ends up returning an instance of **MetacelloProjectSpecForLoad**,**MetacelloLookupProjectSpecForLoad** ends up returning an instance of **MetacelloProjectSpecForLoad**,,,,,,**MetacelloLookupProjectSpecForLoad** ends up returning an instance of **MetacelloProjectSpecForLoad**,,,,,,,,,,,,,,
FLMaterialization,I implement the algorithm for materializing an object graph on a stream. FLMaterializer known how to build instances of me.,,I implement the algorithm for materializing an object graph on a stream.,FLMaterializer known how to build instances of me.,,,,,,FLMaterializer known how to build instances of me.,,,,,,,,,,,,,,
RBTrueFalseDuplicationRule,"Checks for ifTrue:ifFalse: blocks that have the same code at the beginning or end. While you might not originally write such code, as it is modified, it is easier to create such code. Instead of having the same code in two places, you should move it outside the blocks.
  
  For example,
  test
  ifTrue: [self foo. self bar ]
  ifFalse: [ self foo. self baz ]
  is equivalent to:
  
  self foo.
  test
  ifTrue: [ self bar ]
  ifFalse: [ self baz ]",,"Checks for ifTrue:ifFalse: blocks that have the same code at the beginning or end. While you might not originally write such code, as it is modified, it is easier to create such code. Instead of having the same code in two places, you should move it outside the blocks.",,,,,,,,"For example,
  test
  ifTrue: [self foo. self bar ]
  ifFalse: [ self foo. self baz ]
  is equivalent to:
  
  self foo.
  test
  ifTrue: [ self bar ]
  ifFalse: [ self baz ]",,,,,,,,,,,,,
TimeTest,This is the unit test for the class Time.,This is the unit test,,for the class Time.,,,,,,This is the unit test for the class Time.,,,,,,,,,,,,,,
RBAddClassRefactoring,"I am a refactoring for creating new classes.
  
  You can define the name, superclass, category and subclasses.
  
  I am used by other refactorings that may create new classes, for example, RBSplitClassRefactoring.
  
  My preconditions verify that I use a valid class name, that does not yet exists as a global variable,
  and the subclasses (if any) were direct subclasses of the superclass.","""I am a refactoring for creating new classes.","You can define the name, superclass, category and subclasses.
  
  I am used by other refactorings that may create new classes,","I am used by other refactorings that may create new classes, for example, RBSplitClassRefactoring.",,"My preconditions verify that I use a valid class name, that does not yet exists as a global variable,
  and the subclasses (if any) were direct subclasses of the superclass.",,,,"I am used by other refactorings that may create new classes, for example, RBSplitClassRefactoring.",,,,,,,,,,,,,,
AllocationTest,Test originally from Andreas Raab,,,,,,,,,,,,,,,,,,,,,,,Test originally from Andreas Raab
ClyClassGroupProvider,"I am a root of hierarchy of class group providers.
  My subclasses must build class groups for given package scope.
  
  They should implement following method:
  
  - classGroupsIn: aPackageScope do: aBlock
  
  It should create class group instances and pass them into the block.
  Look at ClyClassGroup comment to see how create groups.",I am a root of hierarchy of class group providers.,,,- classGroupsIn: aPackageScope do: aBlock,,,Look at ClyClassGroup comment to see how create groups.,,,,,,,"My subclasses must build class groups for given package scope.
 They should implement following method:",,,,,,,,,
ReExceptionProperty,"This property represents exceptions that occured during other properties computation. This way tools can work witout interuptions, but users will be aware the there were some exceptions.","This property represents exceptions that occured during other properties computation. This way tools can work witout interuptions, but users will be aware the there were some exceptions.","This property represents exceptions that occured during other properties computation. This way tools can work witout interuptions, but users will be aware the there were some exceptions.",,,,,,,,,,,,"This property represents exceptions that occured during other properties computation. This way tools can work witout interuptions, but users will be aware the there were some exceptions.",,,,,,,,,
FLSmallIntegerCluster,I don't have so much sense as a class.,,I don't have so much sense as a class.,,,,,,,,,,,,,,,,,I don't have so much sense as a class.,,,,
TimeZone,"TimeZone is a simple class to colect the information identifying a UTC time zone.
  
  offset - Duration - the time zone's offset from UTC
  abbreviation - String - the abbreviated name for the time zone.
  name - String - the name of the time zone.
  
  TimeZone class >> #timeZones returns an array of the known time zones
  TimeZone class >> #default returns the default time zone (Grenwich Mean Time)",TimeZone is a simple class to colect the information identifying a UTC time zone.,TimeZone is a simple class to colect the information identifying a UTC time zone.,,"TimeZone class >> #timeZones returns an array of the known time zones
  TimeZone class >> #default returns the default time zone (Grenwich Mean Time)",,offset - Duration - the time zone's offset from UTC abbreviation - String - the abbreviated name for the time zone. name - String - the name of the time zone.,,,,,,,,,,,,,,,,,
RxMatchOptimizer,"-- Regular Expression Matcher v 1.1 (C) 1996, 1999 Vassili Bykov
  --
  A match start optimizer, handy for searching a string. Takes a regex syntax tree and sets itself up so that prefix characters or matcher states that cannot start a match are later recognized with #canStartMatch:in: method.
  
  Used by RxMatcher, but can be used by other matchers (if implemented) as well.","A match start optimizer,","A match start optimizer, handy for searching a string. Takes a regex syntax tree and sets itself up so that prefix characters or matcher states that cannot start a match are later recognized with #canStartMatch:in: method.","Used by RxMatcher, but can be used by other matchers (if implemented) as well.",#canStartMatch:in: method.,,,,,"Used by RxMatcher, but can be used by other matchers",,,,,,,,,,,,,,
RBCascadeNode,"RBCascadeNode is an AST node for cascaded messages (e.g., ""self print1 ; print2"").
  
  Instance Variables:
  messages <SequenceableCollection of: RBMessageNode> the messages
  semicolons <SequenceableCollection of: Integer> positions of the ; between messages","RBCascadeNode is an AST node for cascaded messages (e.g., ""self print1 ; print2"").",,,,,"Instance Variables:
  messages <SequenceableCollection of: RBMessageNode> the messages 
  semicolons <SequenceableCollection of: Integer> positions of the ; between messages",,,,,,,,,,,,,,,,,
ZnEndianessReadWriteStream,I am a stream decorator that knows how to read and write little endian numbers from my underlying stream.,I am a stream decorator that knows how to read and write little endian numbers from my underlying stream.,I am a stream decorator that knows how to read and write little endian numbers from my underlying stream.,,,,,,,,,,,,,,,,,,,,,
FFICallbackType,"I'm a FFICallback type.
  I can handle callback type parameters.
  
  What I actually do is to pass the content of #thunk instVar of the objectClass as parameter.
  Thunk needs to be a callback thunk (and then an ExternalAddress).
  The C side of a callback is void* (because is a pointer to a function)",I'm a FFICallback type.,I can handle callback type parameters.,Thunk needs to be a callback thunk (and then an ExternalAddress).,,What I actually do is to pass the content of #thunk instVar of the objectClass as parameter.,What I actually do is to pass the content of #thunk instVar of the objectClass as parameter.,,,Thunk needs to be a callback thunk (and then an ExternalAddress).,,,,,"Thunk needs to be a callback thunk (and then an ExternalAddress).
 
  The C side of a callback is void* (because is a pointer to a function)",,,,,,Thunk needs to be a callback thunk (and then an ExternalAddress).,,,
GTEventCollectors,"I represent a collection of GTEventCollector objects. GTEventRecorder uses me and I am responsible for adding and removing the collectors.
  
  Public API and Key Messages
  
  - add:
  - remove:
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  collectors: <OrderedCollection>
  mutex: <Mutex>",I represent a collection of GTEventCollector objects,GTEventRecorder uses me and I am responsible for adding and removing the collectors.,GTEventRecorder uses me and I am responsible for adding and removing the collectors.,"Public API and Key Messages
  
  - add:
  - remove:",,"Internal Representation and Key Implementation Points.
  
  Instance Variables
  collectors: <OrderedCollection>
  mutex: <Mutex>",,,GTEventRecorder uses me and I am responsible for adding and removing the collectors.,,,,,,,,,,,,,,
EpProtocolChange,I represent a change in the protocols of a class.,I represent a change in the protocols of a class.,,,,,,,,,,,,,,,,,,,,,,
BaseSlot,"I am a hidden non-virtual slot that the virtual slots BooleanSlot and PropertySlot store into.
  
  They, when a class is created containing it, makes sure that there is one slot of me defined. When the last virtual slot is removed, I am removed.","""I am a hidden non-virtual slot that the virtual slots BooleanSlot and PropertySlot store into.
  
  They, when a class is created containing it, makes sure that there is one slot of me defined. When the last virtual slot is removed, I am removed.""",,"""I am a hidden non-virtual slot that the virtual slots BooleanSlot and PropertySlot store into.
  
  They, when a class is created containing it, makes sure that there is one slot of me defined. When the last virtual slot is removed, I am removed.""","""I am a hidden non-virtual slot that the virtual slots BooleanSlot and PropertySlot store into.
  
  They, when a class is created containing it, makes sure that there is one slot of me defined. When the last virtual slot is removed, I am removed.""",,,,,,,,,,,,,,,,,,,
WideCharacterSetTest,WideCharacterSetTest holds tests for WideCharacterSet,,WideCharacterSetTest holds tests for WideCharacterSet,WideCharacterSetTest holds tests for WideCharacterSet,,,,,,,,,,,,,,,,,,,,
OSWindowWorldMorph,"I am a morphic world that uses OSWindow.
  
  For opening a World in a external window, the following script can be used:
  
  world := OSWindowWorldMorph new.
  world open.","""I am a morphic world that uses OSWindow.",,,,,,,,,"For opening a World in a external window, the following script can be used: world := OSWindowWorldMorph new.
  world open.",,,,,,,,,,,,,
ZnEntity,"I am ZnEntity, an abstract HTTP Entity.
  
  An entity has a content type (mime-type), a content length (byte length) and a contents.
  
  Entities can encode and decode themselves to and from binary streams.
  
  Part of Zinc HTTP Components.","I am ZnEntity, an abstract HTTP Entity.",Entities can encode and decode themselves to and from binary streams.,Entities can encode and decode themselves to and from binary streams.,,,"An entity has a content type (mime-type), a content length (byte length) and a contents.",,,,,,,,,,,,,,,Part of Zinc HTTP Components.,,
RBAbstractClass,"I am the base class of RBClass and RBMetaclass implementing the common behavior for creating and accessing class and metaclass elements in a refactoring namespace.
  
  My subclass instances are created in a refactoring namespace when querying the environment for existing
  classes (or metaclasses) and when creating or changing classes during refactoring operations.
  
  RBClass and RBMetaclass are used to model existing, changed or newly added classes before actually applying the refactoring change to the system.
  You can query the class name, defined methods and variables.
  They provide a similar interface like the real classes, but only the part that is necessary for the
  refactoring framework.
  
  They shouldn't be directly used and always be a part of a refacotoring namespace - the model.
  
  Likewise this classes, my methods aren't real methods but models (RBMethod) that representing a real methods.
  
  Changes for my methods during refactoring are stored in a list of
  newMethods and removedMethods.
  Like a real class I referre to my superclass and subclass, which again are actually RBClasses.",I am the base class of RBClass and RBMetaclass implementing the common behavior for creating and accessing class and metaclass elements in a refactoring namespace.,I am the base class of RBClass and RBMetaclass implementing the common behavior for creating and accessing class and metaclass elements in a refactoring namespace.,"RBClass and RBMetaclass are used to model existing, changed or newly added classes before actually applying the refactoring change to the system.
  Likewise this classes, my methods aren't real methods but models (RBMethod) that representing a real methods.",,,,,"RBClass and RBMetaclass are used to model existing, changed or newly added classes before actually applying the refactoring change to the system.",,,,,,They shouldn't be directly used and always be a part of a refacotoring namespace - the model.,,,,,,,,,
RBAddClassVariableChange,I am a refactoring for a class variable addition. My changes are executed on the instance side.,I am a refactoring for a class variable addition.,I am a refactoring for a class variable addition.,,,My changes are executed on the instance side.,,,,,,,,,,,,,,,,,,
FFIUnknownLibrary,"I'm used when there is no defined library as a module.
  In case FFI users want to declare modules as simple strings, I'm used to model the access to that library.
  I'm never used directly! Instead, users will utilize Strings that will be converted to me thru #asFFILibrary method.
  That way, is completely the same to do a call this way:
  
  self ffiCall: #( void fn () ) module: 'libc'.
  
  and
  
  self ffiCall: #( void fn () ) module: LibC.
  
  (but of course recomended way is to use a module, in case you need a strategy to find libraries in different platforms.",,"""I'm used when there is no defined library as a module.
  In case FFI users want to declare modules as simple strings, I'm used to model the access to that library.",,,,,,,,"I'm never used directly! Instead, users will utilize Strings that will be converted to me thru #asFFILibrary method.
  That way, is completely the same to do a call this way:
  
  self ffiCall: #( void fn () ) module: 'libc'.
  
  and
  
  self ffiCall: #( void fn () ) module: LibC.
  
  (but of course recomended way is to use a module, in case you need a strategy to find libraries in different platforms.""",,,,"I'm never used directly! Instead, users will utilize Strings that will be converted to me thru #asFFILibrary method.","(but of course recomended way is to use a module, in case you need a strategy to find libraries in different platforms.",,,,,,,,
IceTipRepairCheckoutBranch,"I will perform the chechout of an existing branch, but I will remove all changes on image.
  
  I'm active when:
  - working copy is detached
  - repository HEAD is detached",,"I will perform the chechout of an existing branch, but I will remove all changes on image.",,,,,,,,,,,,,,,,,,"I'm active when:
 - working copy is detached
 - repository HEAD is detached",,,
ClySpotterModel,"I'm a model to collect options for ""spotter navigation"" mode in a full browser.","I'm a model to collect options for ""spotter navigation"" mode in a full browser.","I'm a model to collect options for ""spotter navigation"" mode in a full browser.",,,,,,,,,,,,,,,,,,,,,
OverridesDeprecatedMethodRule,The method overrided a deprecated method. This is a sign that an API has changed in an upstream project and most likely the method should override another one,,,,,,,,,,,,,,,,,,This is a sign that an API has changed in an upstream project and most likely the method should override another one,,The method overrided a deprecated method.,,,
SpecPragmaCollector,"A SpecPragmaCollector is a specialized PragmaCollector.
  
  Sonce we just want specs defined on class side, we do not have to check the whole system, then to restrain.","A SpecPragmaCollector is a specialized PragmaCollector.
  
  Sonce we just want specs defined on class side, we do not have to check the whole system, then to restrain.",,,,,,,,,,,,,,,,,,,,,,
GRTemporaryNeitherReadNorWrittenRule,There is something wrong in the method as you have variables that are either nor read or not written (or both).,,,,,,,,,,,,,as you have variables that are either nor read or not written (or both).,,,,,,There is something wrong in the method,,,,
FFITestStructureByPlatform,A structure for test purposes,A structure for test purposes,A structure for test purposes,,,,,,,,,,,,,,,,,,,,,
EpBehaviorCommentChange,I represent a change in the comment of a class or a trait.,I represent a change in the comment of a class or a trait.,,,,,,,,,,,,,,,,,,,,,,
SDL2,A bunch of functions in a single class for accessing SDL2 interface,A bunch of functions in a single class for accessing SDL2 interface,A bunch of functions in a single class for accessing SDL2 interface,,,,,,,,,,,,,,,,,,,A bunch of functions in a single class for accessing SDL2 interface,,
RBMethodName,"I represent a method name (selector and arguments) in the refactoring framework.
  
  I am used by refactoring operations - for example RBMoveMethodRefactoring.
  
  I have a selector name and a list of arguments and I use RBScanner to validate the syntax of my selector name.
  
  In the refactory framework I am used for representing a new method name, generated by the refactoring operation or requested by the caller.
  
  You can create instances of me by
  RBMethodName selector: 'color:' arguments:{'aColor'}.
  (RBMethodName selector:'color' arguments:{}) isValid.","""I represent a method name (selector and arguments) in the refactoring framework.","I am used by refactoring operations - for example RBMoveMethodRefactoring.
  
  I have a selector name and a list of arguments and I use RBScanner to validate the syntax of my selector name.
  
  In the refactory framework I am used for representing a new method name, generated by the refactoring operation or requested by the caller.","I am used by refactoring operations - for example RBMoveMethodRefactoring.
  
  I have a selector name and a list of arguments and I use RBScanner to validate the syntax of my selector name.",,,,,,,"You can create instances of me by
  RBMethodName selector: 'color:' arguments:{'aColor'}.
  (RBMethodName selector:'color' arguments:{}) isValid.""",,,,,,,,,,,,,
HaltOnCountIconStyler,"I'm in charge to style the editor for a ""haltOnCount:"". Clicking on it resets the counter.","I'm in charge to style the editor for a ""haltOnCount:"". Clicking on it resets the counter.","I'm in charge to style the editor for a ""haltOnCount:"". Clicking on it resets the counter.","I'm in charge to style the editor for a ""haltOnCount:"".","I'm in charge to style the editor for a ""haltOnCount:"".",,,,,,,,,,,,,,,,,,,
MCWorkingHistoryBrowser,Browser for working history,Browser for working history,,,,,,,,,,,,,,,,,,,,,,
RBRemoveClassChange,"I am a class refactoring change for removing a class. On execution, my class will be removed from the system (all globals).","I am a class refactoring change for removing a class. On execution, my class will be removed from the system (all globals).","On execution, my class will be removed from the system (all globals).",,,,,,,,,,,,,,,,,,,,,
MorphicImageAdapter,I am the bridge between an ImagePresenter and a AlphaImageMorph,I am the bridge between an ImagePresenter and a AlphaImageMorph,,I am the bridge between an ImagePresenter and a AlphaImageMorph,,,,,,,,,,,,,,,,,,,,
HETrait,"I implement the custom behavior for exporting a trait.
  My header only includes the name of the trait.
  Mostly of my behavior is from HEMethodContainer.",,I implement the custom behavior for exporting a trait.,Mostly of my behavior is from HEMethodContainer.,,,,,,,,,,,,,,,,,,,,
ClyInheritedTraitScope,"I represent class scope of all inherited traits excluding basis.
  I see methods of all traits which are used by my basis classes or traits",I represent class scope of all inherited traits excluding basis.,I see methods of all traits which are used by my basis classes or traits,I represent class scope of all inherited traits excluding basis.,,,,,,,,,,,,,,,,,,,,
WidgetExamples,"This class provides examples on how different widgets can be made.
  See the methods starting with ""example"" in my class side.
  
  Examples for different widgets:
  
  WidgetExamples exampleBasicControls.
  WidgetExamples exampleOtherControls.
  WidgetExamples exampleColorControls.
  WidgetExamples exampleDialogs.
  WidgetExamples exampleGroups.
  WidgetExamples exampleTextEntryWithCompletionDialog.
  WidgetExamples exampleWindowWithToolbars.",This class provides examples on how different widgets can be made.,,,"See the methods starting with ""example"" in my class side.",,,,,,"Examples for different widgets: WidgetExamples exampleBasicControls.
 WidgetExamples exampleOtherControls.
 WidgetExamples exampleColorControls.
 WidgetExamples exampleDialogs.
 WidgetExamples exampleGroups.
 WidgetExamples exampleTextEntryWithCompletionDialog.
 WidgetExamples exampleWindowWithToolbars.",,,,,,,,,,,,,
RubSmalltalkCodeMode,I represent the mode to use for editing smalltalk code,I represent the mode to use for editing smalltalk code,,,,,,,,,,,,,,,,,,,,,,
GLMMorphicFastTreeRenderer,"I am a Morphic renderer for a GLMFastTreePresentation.
  
  Description
  --------------------
  
  I use a GLMFastTreeDataSource to manage the data of the tree.","""I am a Morphic renderer for a GLMFastTreePresentation.","I use a GLMFastTreeDataSource to manage the data of the tree.""",,,,,,,"I am a Morphic renderer for a GLMFastTreePresentation.
 
  I use a GLMFastTreeDataSource to manage the data of the tree.",,,,,,,,,,,,,,
MorphicUIBugTest,"A MorphicUIBugTest is a class for testing the shortcomings and repairs of the MorphicUI manager.
  .
  
  Instance Variables
  cases: <aCollection>
  
  cases
  - a list of morphs that may need to be deleted during teardown.
  the tests are expected to fill this list it starts out empty by default.",A MorphicUIBugTest is a class for testing the shortcomings and repairs of the MorphicUI manager.,A MorphicUIBugTest is a class for testing the shortcomings and repairs of the MorphicUI manager.,,,,"Instance Variables
 cases: <aCollection>",,,,,,,,,,,,,,,,,
DADependentPackageItemDiff,A PDDependentPackageItemDiff is a object which represent a dependent package who added/modified/removed from an old analysis.,A PDDependentPackageItemDiff is a object which represent a dependent package who added/modified/removed from an old analysis.,A PDDependentPackageItemDiff is a object which represent a dependent package who added/modified/removed from an old analysis.,A PDDependentPackageItemDiff is a object which represent a dependent package who added/modified/removed from an old analysis.,,,,,,,,,,,,,,,,,A PDDependentPackageItemDiff is a object which represent a dependent package who added/modified/removed from an old analysis.,,,
IceTipRepositoriesBrowser,"I'm a tool to show all repositories registered on this image.
  I define basic actions and an entry point to manage each repository individually.
  
  IceTipRepositoriesBrowser new openWithSpec.",I'm a tool to show all repositories registered on this image.,I'm a tool to show all repositories registered on this image.I define basic actions and an entry point to manage each repository individually.,IceTipRepositoriesBrowser new openWithSpec.,,,,,,,IceTipRepositoriesBrowser new openWithSpec.,,,,,,,,,,,,,
ClyEnvironmentPlugin,"I am a root of environment plugins hierarchy.
  My subclasses are responsible for three things:
  
  1) Extend browser items with arbitrary properties. Any plugin can compute specific properties for given item.
  For example plugin can mark class that it is abstract:
  
  MyPluginClass>>decorateBrowserItem: anItem ofClass: aClass
  aClass isAbstract ifTrue: [ anItem markWith: ClyAbstractItemTag ]
  
  Concrete decoration methods which plugin can implement are depends on the item types which plugin is going support. For another example to decorate methods plugin should implement:
  
  - decorateBrowserItem: anItem ofMethod: aMethod
  
  Normally when you develop navigation over concrete system you build some common superclass plugin which will provide stubs for all item types form your domain.
  In case of Smalltalk navigation there is ClySystemEnvironmentPlugin which implements empty methods to decorate packages, classes and methods (like in examples)
  
  2) Connect external systems to the navigation environment.
  Plugin package can provide new kind of queries and scopes which retrieves new kind of items. These items can be from systems which are external to the main navigation environment.
  Plugin should take care about external updates by subscribing to external system for the changes and by delegating them to the navigation environment.
  
  For example SUnit plugin extends Smalltalk environment with information about tests. It subscribes on SUnit events about test ran. And when it happens it delegates event to the environment which updates methods queries with new information about test result.
  
  To connect to external system plugin implements following method:
  - attatchToSystem
  Here plugin can subscribe on external events. For example SUnit plugin subscribes on ""TestCase historyAnnouncer"" to know when user run tests.
  
  And to disconnect from system should implement:
  - detatchFromSystem
  For example SUnit plugin unsubscribes from ""TestCase historyAnnouncer"".
  
  3) Collect query result metadata.
  For example SUnit plugin can collect how many success tests are retrieved by method query.
  The exact methods which plugin should implement depends on the kind of queries it is supposed to support. In case of SUnit it implements:
  - collectMetadataOfMethods: aQueryResult
  
  But decision what method to use is responsibility of queries. For example:
  
  ClyMethodQuery>>collectMetadataOf: aQueryResult by: anEnvironmentPlugin
  anEnvironmentPlugin collectMetadataOfMethods: aQueryResult
  
  As in case of items decoration the superclass of plugins can provide empty methods for metadata collection. So concrete plugin only chooses what it wants.
  
  That is all responsibility.
  
  To activate plugin it should be added to navigation environment:
  environment addPlugin: anEnvironmentPlugin
  
  Default global environment adds all plugins automatically. Only plugins marked as auto-activated are used (which is true by default):
  
  ClyEnvironmentPlugin class>>isAutoActivated
  ^isAutoActivated ifNil [true]
  
  You can disable any plugin using:
  
  ClyConcretePlugin disable
  
  But it do not affect default navigation environment. You will need recreate it.
  
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  environment: <ClyNavigationEnvironment>",I am a root of environment plugins hierarchy.,"1) Extend browser items with arbitrary properties. Any plugin can compute specific properties for given item.
  For example plugin can mark class that it is abstract:
  
  MyPluginClass>>decorateBrowserItem: anItem ofClass: aClass
  aClass isAbstract ifTrue: [ anItem markWith: ClyAbstractItemTag ]
  
  Concrete decoration methods which plugin can implement are depends on the item types which plugin is going support. For another example to decorate methods plugin should implement:
  
  - decorateBrowserItem: anItem ofMethod: aMethod
  
  Normally when you develop navigation over concrete system you build some common superclass plugin which will provide stubs for all item types form your domain.
  In case of Smalltalk navigation there is ClySystemEnvironmentPlugin which implements empty methods to decorate packages, classes and methods (like in examples)
  
  2) Connect external systems to the navigation environment.
  Plugin package can provide new kind of queries and scopes which retrieves new kind of items. These items can be from systems which are external to the main navigation environment.
  Plugin should take care about external updates by subscribing to external system for the changes and by delegating them to the navigation environment.
  
  For example SUnit plugin extends Smalltalk environment with information about tests. It subscribes on SUnit events about test ran. And when it happens it delegates event to the environment which updates methods queries with new information about test result.
  
  To connect to external system plugin implements following method:
  - attatchToSystem
  Here plugin can subscribe on external events. For example SUnit plugin subscribes on ""TestCase historyAnnouncer"" to know when user run tests.
  
  And to disconnect from system should implement:
  - detatchFromSystem
  For example SUnit plugin unsubscribes from ""TestCase historyAnnouncer"".
  
  3) Collect query result metadata.
  For example SUnit plugin can collect how many success tests are retrieved by method query.
  The exact methods which plugin should implement depends on the kind of queries it is supposed to support. In case of SUnit it implements:
  - collectMetadataOfMethods: aQueryResult
  
  But decision what method to use is responsibility of queries. For example:
  
  ClyMethodQuery>>collectMetadataOf: aQueryResult by: anEnvironmentPlugin
  anEnvironmentPlugin collectMetadataOfMethods: aQueryResult
  
  As in case of items decoration the superclass of plugins can provide empty methods for metadata collection. So concrete plugin only chooses what it wants.
  
  That is all responsibility.",,,,"Internal Representation and Key Implementation Points.
  
  Instance Variables
  environment: <ClyNavigationEnvironment>",,My subclasses are responsible for three things:,,"1) Extend browser items with arbitrary properties. Any plugin can compute specific properties for given item.
  For example plugin can mark class that it is abstract:
  
  MyPluginClass>>decorateBrowserItem: anItem ofClass: aClass
  aClass isAbstract ifTrue: [ anItem markWith: ClyAbstractItemTag ]
  
  Concrete decoration methods which plugin can implement are depends on the item types which plugin is going support. For another example to decorate methods plugin should implement:
  
  - decorateBrowserItem: anItem ofMethod: aMethod
  
  Normally when you develop navigation over concrete system you build some common superclass plugin which will provide stubs for all item types form your domain.
  In case of Smalltalk navigation there is ClySystemEnvironmentPlugin which implements empty methods to decorate packages, classes and methods (like in examples)
  
  2) Connect external systems to the navigation environment.
  Plugin package can provide new kind of queries and scopes which retrieves new kind of items. These items can be from systems which are external to the main navigation environment.
  Plugin should take care about external updates by subscribing to external system for the changes and by delegating them to the navigation environment.
  
  For example SUnit plugin extends Smalltalk environment with information about tests. It subscribes on SUnit events about test ran. And when it happens it delegates event to the environment which updates methods queries with new information about test result.
  
  To connect to external system plugin implements following method:
  - attatchToSystem
  Here plugin can subscribe on external events. For example SUnit plugin subscribes on ""TestCase historyAnnouncer"" to know when user run tests.
  
  And to disconnect from system should implement:
  - detatchFromSystem
  For example SUnit plugin unsubscribes from ""TestCase historyAnnouncer"".
  
  3) Collect query result metadata.
  For example SUnit plugin can collect how many success tests are retrieved by method query.
  The exact methods which plugin should implement depends on the kind of queries it is supposed to support. In case of SUnit it implements:
  - collectMetadataOfMethods: aQueryResult
  
  But decision what method to use is responsibility of queries. For example:
  
  ClyMethodQuery>>collectMetadataOf: aQueryResult by: anEnvironmentPlugin
  anEnvironmentPlugin collectMetadataOfMethods: aQueryResult
  
  As in case of items decoration the superclass of plugins can provide empty methods for metadata collection. So concrete plugin only chooses what it wants.
  
  That is all responsibility.
  
  To activate plugin it should be added to navigation environment:
  environment addPlugin: anEnvironmentPlugin
  
  Default global environment adds all plugins automatically. Only plugins marked as auto-activated are used (which is true by default):
  
  ClyEnvironmentPlugin class>>isAutoActivated
  ^isAutoActivated ifNil [true]
  
  You can disable any plugin using:
  
  ClyConcretePlugin disable
  
  But it do not affect default navigation environment. You will need recreate it.",,,"1) Extend browser items with arbitrary properties. Any plugin can compute specific properties for given item.
  For example plugin can mark class that it is abstract:
  
  MyPluginClass>>decorateBrowserItem: anItem ofClass: aClass
  aClass isAbstract ifTrue: [ anItem markWith: ClyAbstractItemTag ]
  
  Concrete decoration methods which plugin can implement are depends on the item types which plugin is going support. For another example to decorate methods plugin should implement:
  
  - decorateBrowserItem: anItem ofMethod: aMethod
  
  Normally when you develop navigation over concrete system you build some common superclass plugin which will provide stubs for all item types form your domain.
  In case of Smalltalk navigation there is ClySystemEnvironmentPlugin which implements empty methods to decorate packages, classes and methods (like in examples)
  
  2) Connect external systems to the navigation environment.
  Plugin package can provide new kind of queries and scopes which retrieves new kind of items. These items can be from systems which are external to the main navigation environment.
  Plugin should take care about external updates by subscribing to external system for the changes and by delegating them to the navigation environment.
  
  For example SUnit plugin extends Smalltalk environment with information about tests. It subscribes on SUnit events about test ran. And when it happens it delegates event to the environment which updates methods queries with new information about test result.
  
  To connect to external system plugin implements following method:
  - attatchToSystem
  Here plugin can subscribe on external events. For example SUnit plugin subscribes on ""TestCase historyAnnouncer"" to know when user run tests.
  
  And to disconnect from system should implement:
  - detatchFromSystem
  For example SUnit plugin unsubscribes from ""TestCase historyAnnouncer"".
  
  3) Collect query result metadata.
  For example SUnit plugin can collect how many success tests are retrieved by method query.
  The exact methods which plugin should implement depends on the kind of queries it is supposed to support. In case of SUnit it implements:
  - collectMetadataOfMethods: aQueryResult
  
  But decision what method to use is responsibility of queries. For example:
  
  ClyMethodQuery>>collectMetadataOf: aQueryResult by: anEnvironmentPlugin
  anEnvironmentPlugin collectMetadataOfMethods: aQueryResult
  
  As in case of items decoration the superclass of plugins can provide empty methods for metadata collection. So concrete plugin only chooses what it wants.
  
  That is all responsibility.",But it do not affect default navigation environment. You will need recreate it.,,,,,,,,,
AthensFontDescription,"Creates a new font description from a string representation in the form
  ""[FAMILY-LIST] [STYLE-OPTIONS] [SIZE]"",
  
  1)FAMILY-LIST is a comma separated list of families optionally terminated by a comma,
  
  2)STYLE_OPTIONS is a whitespace separated list of words where each WORD describes one of style, variant, weight, stretch, or gravity. If STYLE-OPTIONS is missing, then all style options will be set to the default values
  
  3)SIZE is a decimal number (size in points) or optionally followed by the unit modifier ""px"" for absolute size.",,Creates a new font description from a string representation in the form,,,,,,,,"""[FAMILY-LIST] [STYLE-OPTIONS] [SIZE]"", 1)FAMILY-LIST is a comma separated list of families optionally terminated by a comma, 2)STYLE_OPTIONS is a whitespace separated list of words where each WORD describes one of style, variant, weight, stretch, or gravity. If STYLE-OPTIONS is missing, then all style options will be set to the default values 3)SIZE is a decimal number (size in points) or optionally followed by the unit modifier ""px"" for absolute size.",,,,,,,,,,,,,
EpLogBrowserOperationVisitor,I am an abstract superclass useful for visitors of EpLogBrowserOperation.,I am an abstract superclass useful for visitors of EpLogBrowserOperation.,,I am an abstract superclass useful for visitors of EpLogBrowserOperation.,,,,,,I am an abstract superclass useful for visitors of EpLogBrowserOperation.,,,,,,,,,,,,,,
OSWindowMoveEvent,I am delivered when window moved by user or OS/window manager.,,,,,,,,,,,,,,,,,,,,I am delivered when window moved by user or OS/window manager.,,,
MCCodeTool,"MCCodeTool is an abstract superclass for those Monticello browsers that display code.
  It contains copies of the various CodeHolder methods that perform the various menu operations in the method list.",MCCodeTool is an abstract superclass for those Monticello browsers that display code.,MCCodeTool is an abstract superclass for those Monticello browsers that display code.,It contains copies of the various CodeHolder methods that perform the various menu operations in the method list.,,It contains copies of the various CodeHolder methods that perform the various menu operations in the method list.,,,,It contains copies of the various CodeHolder methods that perform the various menu operations in the method list.,,,,,,,,,,,,MCCodeTool is an abstract superclass for those Monticello browsers that display code.,,
IceTipCommand,"I'm a generic iceberg command.
  My children implement real functionality available through iceberg tools.",I'm a generic iceberg command.,,My children implement real functionality available through iceberg tools.,,,,,,,,,,,,,,,,,,,,
IceTipAddSSHCredentialsModel,I implement the dialog to add SSH credentials.,,I implement the dialog to add SSH credentials.,,,,,,,,,,,,,,,,,,,,,
IllegalResumeAttempt,This class is private to the EHS implementation. An instance of it is signaled whenever an attempt is made to resume from an exception which answers false to #isResumable.,,,,,,,,,,,,,,,,,,,,An instance of it is signaled whenever an attempt is made to resume from an exception which answers false to #isResumable.,This class is private to the EHS implementation.,,
GLMBrickRubricStyle,I'm a style module related to a rubric text fields and its componenets,I'm a style module related to a rubric text fields and its componenets,I'm a style module related to a rubric text fields and its componenets,I'm a style module related to a rubric text fields and its componenets,,,,,,,,,,,,,,,,,,I'm a style module related to a rubric text fields and its componenets,,
PharoSyntaxTutorialTest,SUnit tests for PharoSyntaxTutorial,SUnit tests for PharoSyntaxTutorial,SUnit tests for PharoSyntaxTutorial,,,,,,,,,,,,,,,,,,,SUnit tests for PharoSyntaxTutorial,,
ShNoChangesInClass,This notification is raised if there is no changes in a class when invoked the class builder.,This notification is raised if there is no changes in a class when invoked the class builder.,,,,,,,,,,,,,,,,,,,This notification is raised if there is no changes in a class when invoked the class builder.,,,
FFICompilerPluginTests,Tests for FFICompilerPlugin,Tests for FFICompilerPlugin,,Tests for FFICompilerPlugin,,,,,,,,,,,,,,,,,,,,
SugsDeprecateMethod,I know how to deprecate method.,,I know how to deprecate method.,,,,,,,,,,,,,,,,,,,,,
BitBlt,"I represent a block transfer (BLT) of pixels into a rectangle (destX, destY, width, height) of the destinationForm. The source of pixels may be a similar rectangle (at sourceX, sourceY) in the sourceForm, or a constant color, currently called halftoneForm. If both are specified, their pixel values are combined with a logical AND function prior to transfer. In any case, the pixels from the source are combined with those of the destination by as specified by the combinationRule.
  
  The combination rule whose value is 0 through 15 programs the transfer to produce 1 or 0 according to its 4-bit representation as follows:
  8: if source is 0 and destination is 0
  4: if source is 0 and destination is 1
  2: if source is 1 and destination is 0
  1: if source is 1 and destination is 1.
  At each pixel the corresponding bits of the source and destination pixel values determine one of these conditions; if the combination rule has a 1 in the corresponding bit position, then the new destination value will be 1, otherwise it will be zero. Forms may be of different depths, see the comment in class Form.
  
  In addition to the original 16 combination rules, this BitBlt supports
  16 fails (to simulate paint bits)
  17 fails (to simulate erase bits)
  18 sourceWord + destinationWord
  19 sourceWord - destinationWord
  20 rgbAdd: sourceWord with: destinationWord. Sum of color components
  21 rgbSub: sourceWord with: destinationWord. Difference of color components
  22 OLDrgbDiff: sourceWord with: destinationWord. Sum of abs of differences in components
  23 OLDtallyIntoMap: destinationWord. Tallies pixValues into a colorMap
  these old versions don't do bitwise dest clipping. Use 32 and 33 now.
  24 alphaBlend: sourceWord with: destinationWord. 32-bit source and dest only
  25 pixPaint: sourceWord with: destinationWord. Wherever the sourceForm is non-zero, it replaces the destination. Can be used with a 1-bit source color mapped to (0, FFFFFFFF), and a fillColor to fill the dest with that color wherever the source is 1.
  26 pixMask: sourceWord with: destinationWord. Like pixPaint, but fills with 0.
  27 rgbMax: sourceWord with: destinationWord. Max of each color component.
  28 rgbMin: sourceWord with: destinationWord. Min of each color component.
  29 rgbMin: sourceWord bitInvert32 with: destinationWord. Min with (max-source)
  30 alphaBlendConst: sourceWord with: destinationWord. alpha is an arg. works in 16 bits.
  31 alphaPaintConst: sourceWord with: destinationWord. alpha is an arg. works in 16 bits.
  32 rgbDiff: sourceWord with: destinationWord. Sum of abs of differences in components
  33 tallyIntoMap: destinationWord. Tallies pixValues into a colorMap
  34 alphaBlendScaled: srcWord with: dstWord. Alpha blend of scaled srcWord and destWord.
  
  The color specified by halftoneForm may be either a Color or a Pattern. A Color is converted to a pixelValue for the depth of the destinationForm. If a Pattern, BitBlt will simply interpret its bitmap as an array of Color pixelValues. BitBlt aligns the first element of this array with the top scanline of the destinationForm, the second with the second, and so on, cycling through the color array as necessary. Within each scan line the 32-bit value is repeated from left to right across the form. If the value repeats on pixels boudaries, the effect will be a constant color; if not, it will produce a halftone that repeats on 32-bit boundaries.
  
  Any transfer specified is further clipped by the specified rectangle (clipX, clipY, clipWidth, clipHeight), and also by the bounds of the source and destination forms.
  To make a small Form repeat and fill a big form, use an InfiniteForm as the source.
  To write on a form and leave with both transparent and opapue areas, use a MaskedForm as the source.
  
  Pixels from a source to a destination whose pixels have a different depth are converted based on the optional colorMap. If colorMap is nil, then conversion to more bits is done by filling the new high-order bits with zero, and conversion to fewer bits is done by truncating the lost high-order bits.
  
  The colorMap, if specified, must be a either word array (ie Bitmap) with 2^n elements, where n is the pixel depth of the source, or a fully specified ColorMap which may contain a lookup table (ie Bitmap) and/or four separate masks and shifts which are applied to the pixels. For every source pixel, BitBlt will first perform masking and shifting and then index the lookup table, and select the corresponding pixelValue and mask it to the destination pixel size before storing.
  When blitting from a 32 or 16 bit deep Form to one 8 bits or less, the default is truncation. This will produce very strange colors, since truncation of the high bits does not produce the nearest encoded color. Supply a 512 long colorMap, and red, green, and blue will be shifted down to 3 bits each, and mapped. The message copybits...stdColors will use the best map to the standard colors for destinations of depths 8, 4, 2 and 1. Two other sized of colorMaps are allowed, 4096 (4 bits per color) and 32786 (five bits per color).
  Normal blits between 16 and 32 bit forms truncates or pads the colors automatically to provide the best preservation of colors.
  Colors can be remapped at the same depth. Sometimes a Form is in terms of colors that are not the standard colors for this depth, for example in a GIF file. Convert the Form to a MaskedForm and send colorMap: the list of colors that the picture is in terms of. MaskedForm will use the colorMap when copying to the display or another Form. (Note also that a Form can be copied to itself, and transformed in the process, if a non-nil colorMap is supplied.)","I represent a block transfer (BLT) of pixels into a rectangle (destX, destY, width, height) of the destinationForm.",,,,"The combination rule whose value is 0 through 15 programs the transfer to produce 1 or 0 according to its 4-bit representation as follows:
  8: if source is 0 and destination is 0
  4: if source is 0 and destination is 1
  2: if source is 1 and destination is 0
  1: if source is 1 and destination is 1.
  At each pixel the corresponding bits of the source and destination pixel values determine one of these conditions; if the combination rule has a 1 in the corresponding bit position, then the new destination value will be 1, otherwise it will be zero. Forms may be of different depths, see the comment in class Form.
  
  In addition to the original 16 combination rules, this BitBlt supports
  16 fails (to simulate paint bits)
  17 fails (to simulate erase bits)
  18 sourceWord + destinationWord
  19 sourceWord - destinationWord
  20 rgbAdd: sourceWord with: destinationWord. Sum of color components
  21 rgbSub: sourceWord with: destinationWord. Difference of color components
  22 OLDrgbDiff: sourceWord with: destinationWord. Sum of abs of differences in components
  23 OLDtallyIntoMap: destinationWord. Tallies pixValues into a colorMap
  these old versions don't do bitwise dest clipping. Use 32 and 33 now.
  24 alphaBlend: sourceWord with: destinationWord. 32-bit source and dest only
  25 pixPaint: sourceWord with: destinationWord. Wherever the sourceForm is non-zero, it replaces the destination. Can be used with a 1-bit source color mapped to (0, FFFFFFFF), and a fillColor to fill the dest with that color wherever the source is 1.
  26 pixMask: sourceWord with: destinationWord. Like pixPaint, but fills with 0.
  27 rgbMax: sourceWord with: destinationWord. Max of each color component.
  28 rgbMin: sourceWord with: destinationWord. Min of each color component.
  29 rgbMin: sourceWord bitInvert32 with: destinationWord. Min with (max-source)
  30 alphaBlendConst: sourceWord with: destinationWord. alpha is an arg. works in 16 bits.
  31 alphaPaintConst: sourceWord with: destinationWord. alpha is an arg. works in 16 bits.
  32 rgbDiff: sourceWord with: destinationWord. Sum of abs of differences in components
  33 tallyIntoMap: destinationWord. Tallies pixValues into a colorMap
  34 alphaBlendScaled: srcWord with: dstWord. Alpha blend of scaled srcWord and destWord.
  
  The color specified by halftoneForm may be either a Color or a Pattern. A Color is converted to a pixelValue for the depth of the destinationForm. If a Pattern, BitBlt will simply interpret its bitmap as an array of Color pixelValues. BitBlt aligns the first element of this array with the top scanline of the destinationForm, the second with the second, and so on, cycling through the color array as necessary. Within each scan line the 32-bit value is repeated from left to right across the form. If the value repeats on pixels boudaries, the effect will be a constant color; if not, it will produce a halftone that repeats on 32-bit boundaries.
  
  Any transfer specified is further clipped by the specified rectangle (clipX, clipY, clipWidth, clipHeight), and also by the bounds of the source and destination forms.
  To make a small Form repeat and fill a big form, use an InfiniteForm as the source.
  To write on a form and leave with both transparent and opapue areas, use a MaskedForm as the source.
  
  Pixels from a source to a destination whose pixels have a different depth are converted based on the optional colorMap. If colorMap is nil, then conversion to more bits is done by filling the new high-order bits with zero, and conversion to fewer bits is done by truncating the lost high-order bits.
  
  The colorMap, if specified, must be a either word array (ie Bitmap) with 2^n elements, where n is the pixel depth of the source, or a fully specified ColorMap which may contain a lookup table (ie Bitmap) and/or four separate masks and shifts which are applied to the pixels. For every source pixel, BitBlt will first perform masking and shifting and then index the lookup table, and select the corresponding pixelValue and mask it to the destination pixel size before storing.
  When blitting from a 32 or 16 bit deep Form to one 8 bits or less, the default is truncation. This will produce very strange colors, since truncation of the high bits does not produce the nearest encoded color. Supply a 512 long colorMap, and red, green, and blue will be shifted down to 3 bits each, and mapped. The message copybits...stdColors will use the best map to the standard colors for destinations of depths 8, 4, 2 and 1. Two other sized of colorMaps are allowed, 4096 (4 bits per color) and 32786 (five bits per color).
  Normal blits between 16 and 32 bit forms truncates or pads the colors automatically to provide the best preservation of colors.
  Colors can be remapped at the same depth. Sometimes a Form is in terms of colors that are not the standard colors for this depth, for example in a GIF file. Convert the Form to a MaskedForm and send colorMap: the list of colors that the picture is in terms of. MaskedForm will use the colorMap when copying to the display or another Form.",colorMap: the list of colors that the picture is in terms of. MaskedForm will use the colorMap when copying to the display or another Form.,"Forms may be of different depths, see the comment in class Form.",,"The color specified by halftoneForm may be either a Color or a Pattern
 
 MaskedForm will use the colorMap when copying to the display or another Form.",,,,,"(Note also that a Form can be copied to itself, and transformed in the process, if a non-nil colorMap is supplied.)",,,,,,,,,
IceTipRepairFetchRemoteBranch,"I will fetch repositories to try to find the unknown commit.
  
  matches if:
  - workingCopy referenceCommit isUnknownCommit",,I will fetch repositories to try to find the unknown commit.,,,,,,,,,,,,,,,,,,,,,
SpaceTallyItem,I'm represent an entry in the spaceTally.,I'm represent an entry in the spaceTally.,,I'm represent an entry in the spaceTally.,,,,,,,,,,,,,,,,,,,,
OCASTTranslator,"I visit an abstract syntax tree and generate IR (intermediate representation) instructions for each node by sending the appropriate message to my methodBuilder (an IRBuilder). I hold onto my two subclasses
  OCASTTranslatorForValue for generating instructions for effect and value, and
  OCASTTranslatorForEffect for generating instructions for effect only.
  
  Which one to use depends on the AST nodes and whether the code will only be executed (for effect only) or if the value is used afterwards (for value).
  
  For example, when translating a return, the value to return needs to be pushed on stack, so the valueTranslator is used:
  visitReturnNode: aReturnNode
  valueTranslator visitNode: aReturnNode value.
  methodBuilder returnTop.
  
  Whereas, in #visitMethodNode:, the effectTranslator is used, because no value is pushed on stack at the end of the method body:
  ...effectTranslator visitNode: aMethodNode body..",,"""I visit an abstract syntax tree and generate IR (intermediate representation) instructions for each node by sending the appropriate message to my methodBuilder (an IRBuilder). I hold onto my two subclasses
  OCASTTranslatorForValue for generating instructions for effect and value, and
  OCASTTranslatorForEffect for generating instructions for effect only.",,"Which one to use depends on the AST nodes and whether the code will only be executed (for effect only) or if the value is used afterwards (for value).
  
  For example, when translating a return, the value to return needs to be pushed on stack, so the valueTranslator is used:
  visitReturnNode: aReturnNode
  valueTranslator visitNode: aReturnNode value.
  methodBuilder returnTop.
  
  Whereas, in #visitMethodNode:, the effectTranslator is used, because no value is pushed on stack at the end of the method body:
  ...effectTranslator visitNode: aMethodNode body..""",,,,"I hold onto my two subclasses OCASTTranslatorForValue for generating instructions for effect and value, and OCASTTranslatorForEffect for generating instructions for effect only. Which one to use depends on the AST nodes and whether the code will only be executed (for effect only) or if the value is used afterwards (for value).","I visit an abstract syntax tree and generate IR (intermediate representation) instructions for each node by sending the appropriate message to my methodBuilder (an IRBuilder). I hold onto my two subclasses OCASTTranslatorForValue for generating instructions for effect and value, and OCASTTranslatorForEffect for generating instructions for effect only.",,,,,,,,,,,,,,
LockableTabMorph,I am a tab which can be locked/unlocked with according action and icon,I am a tab which can be locked/unlocked with according action and icon,I am a tab which can be locked/unlocked with according action and icon,I am a tab which can be locked/unlocked with according action and icon,,,,,,,,,,,,,,,,,,,,
RFMethodReification,"I reify the method where the link is installed.
  
  Note: this is the *current* method, that is, the one that has the code of the link.
  
  it is the same that you would get with ""thisContext method"", without the need to access the context (which is slow)",,I reify the method where the link is installed.,,,,,,,,,,,,"Note: this is the *current* method, that is, the one that has the code of the link.","it is the same that you would get with ""thisContext method"", without the need to access the context (which is slow)",,,,,,,,
TonelCommentScanner,I scan comments.,,I scan comments.,,,,,,,,,,,,,,,,,,,,,
WeakRegistryTest,A trait for test purposes,A trait for test purposes,A trait for test purposes,,,,,,,,,,,,,,,,,,,,,
PointerLayout,I am the superclass for all layouts with Slots.,I am the superclass for all layouts with Slots.,I am the superclass for all layouts with Slots.,I am the superclass for all layouts with Slots.,,,,,,I am the superclass for all layouts with Slots.,,,,,,,,,,,,,,
ManifestSystemLocalization,Localization support,,Localization support,,,,,,,,,,,,,,,,,,,,,
StrikeFontStoredSetting,I am responsible for storing information about StrikeFont objects.,,I am responsible for storing information about StrikeFont objects.,I am responsible for storing information about StrikeFont objects.,,,,,,I am responsible for storing information about StrikeFont objects.,,,,,,,,,,,,,,
OSTouchOneFingerHoldEvent,One finger is down and has not moved on the screen,,One finger is down and has not moved on the screen,,,,,,,,,,,,,,,,,,One finger is down and has not moved on the screen,,,
MCClassDefinition,A MCClassDefinition represents a class.,A MCClassDefinition represents a class.,,,,,,,,,,,,,,,,,,,,,,
DualChangeSorterApplication,"A DualChangeSorterApplication is a dual change sorter based on spec.
  
  DualChangeSorter shares the model between its two subcomponents (ChangeSorterApplication).
  ChangeSorterModel defines the application logic.","""A DualChangeSorterApplication is a dual change sorter based on spec.","DualChangeSorter shares the model between its two subcomponents (ChangeSorterApplication).
  ChangeSorterModel defines the application logic.""","DualChangeSorter shares the model between its two subcomponents (ChangeSorterApplication).
  ChangeSorterModel defines the application logic.",,,,,,,,,,,,,,,,,,,,
ClyCritiqueMenuItemMorph,I simulate the functionality of MenuItemMorph while providing more sophisticated visualization for rubric annotations,,I simulate the functionality of MenuItemMorph while providing more sophisticated visualization for rubric annotations,,,,,,,I simulate the functionality of MenuItemMorph while providing more sophisticated visualization for rubric annotations,,,,,,,,,,,,,,
FillStyleBorder,BorderStyle supporting general (potentially composite) fillstyles.,BorderStyle supporting general (potentially composite) fillstyles,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
EncoderForV3,"I add behaviour to Encoder to size and emit bytecodes for the Squeak V3.x VM bytecode set, a close variant of the original Smalltalk-80 bytecode set defined in the Blue Book.
 
 Bytecode set specification:
 
  0-15 0000iiii Push Receiver Variable #iiii
  16-31 0001iiii Push Temporary Location #iiii
  32-63 001iiiii Push Literal Constant #iiiii
  64-95 010iiiii Push Literal Variable #iiiii
  96-103 01100iii Pop and Store Receiver Variable #iii
  104-111 01101iii Pop and Store Temporary Location #iii
  112-119 01110iii Push (receiver, true, false, nil, -1, 0, 1, 2) [iii]
  120-123 011110ii Return (receiver, true, false, nil) [ii] From Message
  124-125 0111110i Return Stack Top From (Message, Block) [i]
  (126-127 unassigned)
  128 10000000 jjkkkkkk Push (Receiver Variable, Temporary Location, Literal Constant, Literal Variable) [jj] #kkkkkk
  129 10000001 jjkkkkkk Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk
  130 10000010 jjkkkkkk Pop and Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk
  131 10000011 jjjkkkkk Send Literal Selector #kkkkk With jjj Arguments
  132 10000100 iiijjjjj kkkkkkkk (Send, Send Super, Push Receiver Variable, Push Literal Constant, Push Literal Variable, Store Receiver Variable, Store-Pop Receiver Variable, Store Literal Variable)[iii] #kkkkkkkk jjjjj (for sends jjjjj = numArgs)
  133 10000011 jjjkkkkk Send Literal Selector #kkkkk To Superclass With jjj Arguments
  134 10000011 jjjkkkkk Send Literal Selector #kkkkk With jjj Arguments
  135 10000111 Pop Stack Top
  136 10001000 Duplicate Stack Top
  137 10001001 Push Active Context
  138 10001010 jkkkkkkk Push (Array new: kkkkkkk) (j = 0)
  or Pop kkkkkkk elements into: (Array new: kkkkkkk) (j = 1)
  139 10001011 kkkkkkkk jjjjjjjj Invoke primitive number jjjjjjjjkkkkkkkk
  140 10001100 kkkkkkkk jjjjjjjj Push Temp At kkkkkkkk In Temp Vector At: jjjjjjjj
  141 10001101 kkkkkkkk jjjjjjjj Store Temp At kkkkkkkk In Temp Vector At: jjjjjjjj
  142 10001110 kkkkkkkk jjjjjjjj Pop and Store Temp At kkkkkkkk In Temp Vector At: jjjjjjjj
  143 10001111 llllkkkk jjjjjjjj iiiiiiii Push Closure Num Copied llll Num Args kkkk BlockSize jjjjjjjjiiiiiiii
  144-151 10010iii Jump iii + 1 (i.e., 1 through 8)
  152-159 10011iii Pop and Jump 0n False iii +1 (i.e., 1 through 8)
  160-167 10100iii jjjjjjjj Jump(iii - 4) *256+jjjjjjjj
  168-171 101010ii jjjjjjjj Pop and Jump On True ii *256+jjjjjjjj
  172-175 101011ii jjjjjjjj Pop and Jump On False ii *256+jjjjjjjj
  176-191 1011iiii Send Arithmetic Message #iiii
  192-207 1100iiii Send Special Message #iiii
  208-223 1101iiii Send Literal Selector #iiii With No Arguments
  224-239 1110iiii Send Literal Selector #iiii With 1 Argument
  240-255 1111iiii Send Literal Selector #iiii With 2 Arguments",,"""I add behaviour to Encoder to size and emit bytecodes for the Squeak V3.x VM bytecode set, a close variant of the original Smalltalk-80 bytecode set defined in the Blue Book.",,,"Bytecode set specification:
  
  0-15 0000iiii Push Receiver Variable #iiii
  16-31 0001iiii Push Temporary Location #iiii
  32-63 001iiiii Push Literal Constant #iiiii
  64-95 010iiiii Push Literal Variable #iiiii
  96-103 01100iii Pop and Store Receiver Variable #iii
  104-111 01101iii Pop and Store Temporary Location #iii
  112-119 01110iii Push (receiver, true, false, nil, -1, 0, 1, 2) [iii]
  120-123 011110ii Return (receiver, true, false, nil) [ii] From Message
  124-125 0111110i Return Stack Top From (Message, Block) [i]
  (126-127 unassigned)
  128 10000000 jjkkkkkk Push (Receiver Variable, Temporary Location, Literal Constant, Literal Variable) [jj] #kkkkkk
  129 10000001 jjkkkkkk Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk
  130 10000010 jjkkkkkk Pop and Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk
  131 10000011 jjjkkkkk Send Literal Selector #kkkkk With jjj Arguments
  132 10000100 iiijjjjj kkkkkkkk (Send, Send Super, Push Receiver Variable, Push Literal Constant, Push Literal Variable, Store Receiver Variable, Store-Pop Receiver Variable, Store Literal Variable)[iii] #kkkkkkkk jjjjj (for sends jjjjj = numArgs)
  133 10000011 jjjkkkkk Send Literal Selector #kkkkk To Superclass With jjj Arguments
  134 10000011 jjjkkkkk Send Literal Selector #kkkkk With jjj Arguments
  135 10000111 Pop Stack Top
  136 10001000 Duplicate Stack Top
  137 10001001 Push Active Context
  138 10001010 jkkkkkkk Push (Array new: kkkkkkk) (j = 0)
  or Pop kkkkkkk elements into: (Array new: kkkkkkk) (j = 1)
  139 10001011 kkkkkkkk jjjjjjjj Invoke primitive number jjjjjjjjkkkkkkkk
  140 10001100 kkkkkkkk jjjjjjjj Push Temp At kkkkkkkk In Temp Vector At: jjjjjjjj
  141 10001101 kkkkkkkk jjjjjjjj Store Temp At kkkkkkkk In Temp Vector At: jjjjjjjj
  142 10001110 kkkkkkkk jjjjjjjj Pop and Store Temp At kkkkkkkk In Temp Vector At: jjjjjjjj
  143 10001111 llllkkkk jjjjjjjj iiiiiiii Push Closure Num Copied llll Num Args kkkk BlockSize jjjjjjjjiiiiiiii
  144-151 10010iii Jump iii + 1 (i.e., 1 through 8)
  152-159 10011iii Pop and Jump 0n False iii +1 (i.e., 1 through 8)
  160-167 10100iii jjjjjjjj Jump(iii - 4) *256+jjjjjjjj
  168-171 101010ii jjjjjjjj Pop and Jump On True ii *256+jjjjjjjj
  172-175 101011ii jjjjjjjj Pop and Jump On False ii *256+jjjjjjjj
  176-191 1011iiii Send Arithmetic Message #iiii
  192-207 1100iiii Send Special Message #iiii
  208-223 1101iiii Send Literal Selector #iiii With No Arguments
  224-239 1110iiii Send Literal Selector #iiii With 1 Argument
  240-255 1111iiii Send Literal Selector #iiii With 2 Arguments""",,,,,,,,,,,,,,,,,,
IceTipGitHubRepositoryPanel,I'm a presenter to define a new remote repository from a github repository (owner/project).,I'm a presenter to define a new remote repository from a github repository (owner/project).,I'm a presenter to define a new remote repository from a github repository (owner/project).,,,,,,,,,,,,,,,,,,,,,
OSTouchActionPointerEvent,"Superclass of all the pointer Event
  Can be a finger or something else.",Superclass of all the pointer Event Can be a finger or something else.,,Superclass of all the pointer Event,,,,,,,,,,,,,,,,,,,,
ExpanderMorphContracted,"I am an Announcement that occurs when an ExpanderMorph is contracted (rolled-up).
  
  Example where visibility of another UI component depends on the expanded/contracted state of Expander 2
  
  |builder expanders ex1 ex2 text list row|
  builder := UITheme builder.
  expanders := builder newColumn: {
  ex1 := builder newExpander: 'Expander 1'.
  ex2 := builder newExpander: 'Expander 2'}.
  expanders
  width: 100;
  hResizing: #rigid.
  text := builder
  newTextEditorFor: (ValueHolder new contents: 'Some text')
  getText: #contents setText: #contents:.
  list := (builder
  newListFor: (ListModel new list: #('One' 'Two' 'Three' 'Four'); selectionIndex: 3)
  list: #list selected: #selectionIndex changeSelected: #selectionIndex:
  help: 'This is a list')
  minWidth: 120;
  visible: false;
  disableTableLayout: true.
  ex2 announcer
  when: ExpanderMorphContracted do: [list hide; disableTableLayout: true];
  when: ExpanderMorphExpanded do: [list show; disableTableLayout: false].
  row := builder newRow: {
  expanders.
  (builder newRow: {text. list})
  vResizing: #spaceFill}.",I am an Announcement that occurs when an ExpanderMorph is contracted (rolled-up).,,I am an Announcement that occurs when an ExpanderMorph is contracted (rolled-up).,,,,,,,"Example where visibility of another UI component depends on the expanded/contracted state of Expander 2
  
  |builder expanders ex1 ex2 text list row|
  builder := UITheme builder.
  expanders := builder newColumn: {
  ex1 := builder newExpander: 'Expander 1'.
  ex2 := builder newExpander: 'Expander 2'}.
  expanders
  width: 100;
  hResizing: #rigid.
  text := builder
  newTextEditorFor: (ValueHolder new contents: 'Some text')
  getText: #contents setText: #contents:.
  list := (builder
  newListFor: (ListModel new list: #('One' 'Two' 'Three' 'Four'); selectionIndex: 3)
  list: #list selected: #selectionIndex changeSelected: #selectionIndex:
  help: 'This is a list')
  minWidth: 120;
  visible: false;
  disableTableLayout: true.
  ex2 announcer
  when: ExpanderMorphContracted do: [list hide; disableTableLayout: true];
  when: ExpanderMorphExpanded do: [list show; disableTableLayout: false].
  row := builder newRow: {
  expanders.
  (builder newRow: {text. list})
  vResizing: #spaceFill}.",,,,,,,,,,,,,
ClyInheritedMethodGroup,"I am group of inherited methods.
  Depending on my query I include methods from on or all traits and superclasses which are inherited by given classes.
  
  I can be expanded by subgroups of each inherited class. It will be also my instances but they will be configured by single class scope method query.
  
  In the browser I provide few checkboxes to switch method visibility. It is based on my visibilityLevels, collection of ClyMethodVisibilityLevel instances.
  They are extended by plugins. For example Traits plugin adds local trait visibility level.
  
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  visibilityLevels: <Collection of<ClyMethodVisibilityLevel>>","""I am group of inherited methods.","Depending on my query I include methods from on or all traits and superclasses which are inherited by given classes.
  
  I can be expanded by subgroups of each inherited class. It will be also my instances but they will be configured by single class scope method query.
  
  In the browser I provide few checkboxes to switch method visibility. It is based on my visibilityLevels, collection of ClyMethodVisibilityLevel instances.
  They are extended by plugins. For example Traits plugin adds local trait visibility level.","It is based on my visibilityLevels, collection of ClyMethodVisibilityLevel instances.",,,"Instance Variables
  visibilityLevels: <Collection of<ClyMethodVisibilityLevel>>",,,,,,,,,,,They are extended by plugins. For example Traits plugin adds local trait visibility level.,,,,,,
TextDoIt,A doIt action on a text. When the text is clicked the text is seen as source code and evaluated,A doIt action on a text.,When the text is clicked the text is seen as source code and evaluated,,,,,,,,,,,,,,,,,,,,,
ModificationForbidden,"This exception is raised when mutating a read-only object.
  
  My instances have 4 fields to be able to reproduce the modification through retryModification method.
  
  object <Object> read-only object that the code attempted to mutate
  index <SmallInteger> index of the field in the object mutated, relevant for the corresponding selector
  value <Object> value that was attempted to be stored into the read-only object
  selector <Symbol> selector that can be used to reproduce the mutation (typically, #at:put:, #instVarAt:put:, etc.)","""This exception is raised when mutating a read-only object.","My instances have 4 fields to be able to reproduce the modification through retryModification method.
  
  object <Object> read-only object that the code attempted to mutate
  index <SmallInteger> index of the field in the object mutated, relevant for the corresponding selector
  value <Object> value that was attempted to be stored into the read-only object
  selector <Symbol> selector that can be used to reproduce the mutation (typically, #at:put:, #instVarAt:put:, etc.)",,,"My instances have 4 fields to be able to reproduce the modification through retryModification method.
  
  object <Object> read-only object that the code attempted to mutate
  index <SmallInteger> index of the field in the object mutated, relevant for the corresponding selector
  value <Object> value that was attempted to be stored into the read-only object
  selector <Symbol> selector that can be used to reproduce the mutation (typically, #at:put:, #instVarAt:put:, etc.)","object <Object> read-only object that the code attempted to mutate
  index <SmallInteger> index of the field in the object mutated, relevant for the corresponding selector
  value <Object> value that was attempted to be stored into the read-only object
  selector <Symbol> selector that can be used to reproduce the mutation (typically, #at:put:, #instVarAt:put:, etc.)",,,,,,,,,,,,,,,,,
ManifestCollectionsStrings,"Contains String, ByteString, Symbol, ByteSymbol, WideSymbol and WideString",,"Contains String, ByteString, Symbol, ByteSymbol, WideSymbol and WideString","Contains String, ByteString, Symbol, ByteSymbol, WideSymbol and WideString",,,,,,"Contains String, ByteString, Symbol, ByteSymbol, WideSymbol and WideString",,,,,,,,,,,,,,
MetacelloCommandLineHandler,"Command line handler for dealing with Metacello from the command line.
  
  Usage:
  metacello --help
  metacello install <repository url> (<baseline>|<configuration>) [--version=<version>] [--groups=<group name>,...] [--no-quit] [--no-save]
  <repository url> A Monticello repository name
  <baseline> A valid Metacello Baseline name
  <configuration> A valid Metacello Configuration name
  <version> A valid version for the given Configuration (incompatible with Baseline)
  <group name> A valid Metacello group name(s)
  --help Show this help message
  --no-quit Keep the image running after Baseline/Configuration install
  --no-save Don't save the image after Baseline/Configuration install
  
  Examples:
  # Display this help message
  pharo Pharo.image metacello OR pharo Pharo.image metacello --help
  
  # Install group 'Core' and 'Tests' of latest version
  pharo Pharo.image metacello install $REPOS_URL BaselineOfFoo --groups=Core,Tests
  
  # Install a specific version '1.5' and only a specific group 'Tests'
  pharo Pharo.image metacello install $REPOS_URL ConfigurationOfFoo --version=1.5 --groups=Tests",Command line handler for dealing with Metacello from the command line.,for dealing with Metacello from the command line.,,,,,,,,"Usage:
  metacello --help
  metacello install <repository url> (<baseline>|<configuration>) [--version=<version>] [--groups=<group name>,...] [--no-quit] [--no-save]
  <repository url> A Monticello repository name
  <baseline> A valid Metacello Baseline name
  <configuration> A valid Metacello Configuration name
  <version> A valid version for the given Configuration (incompatible with Baseline)
  <group name> A valid Metacello group name(s)
  --help Show this help message
  --no-quit Keep the image running after Baseline/Configuration install
  --no-save Don't save the image after Baseline/Configuration install
  
  Examples:
  # Display this help message
  pharo Pharo.image metacello OR pharo Pharo.image metacello --help
  
  # Install group 'Core' and 'Tests' of latest version
  pharo Pharo.image metacello install $REPOS_URL BaselineOfFoo --groups=Core,Tests
  
  # Install a specific version '1.5' and only a specific group 'Tests'
  pharo Pharo.image metacello install $REPOS_URL ConfigurationOfFoo --version=1.5 --groups=Tests",,,,,,,,,,,,,
Integer,"I am a common abstract superclass for all Integer implementations. My implementation subclasses are SmallInteger, LargePositiveInteger, and LargeNegativeInteger.
  
  Integer division consists of:
  / exact division, answers a fraction if result is not a whole integer
  // answers an Integer, rounded towards negative infinity
  \\ is modulo rounded towards negative infinity
  quo: truncated division, rounded towards zero","""I am a common abstract superclass for all Integer implementations.",,,"/ exact division, answers a fraction if result is not a whole integer
  // answers an Integer, rounded towards negative infinity
  \\ is modulo rounded towards negative infinity
  quo: truncated division, rounded towards zero","Integer division consists of: / exact division, answers a fraction if result is not a whole integer // answers an Integer, rounded towards negative infinity \\ is modulo rounded towards negative infinity quo: truncated division, rounded towards zero""",,,"My implementation subclasses are SmallInteger, LargePositiveInteger, and LargeNegativeInteger.",,,,,,,,,,,,,,,
RBIfTrueReturnsRule,Checks for common ifTrue: returns that could be simplified using a boolean expression.,,Checks for common ifTrue: returns that could be simplified using a boolean expression.,,,,,,,,,,,,,,,,,,,,,
CannotDecompileNativeBoostCalls,Notify that a method can not be decompiled because of a native boost call,,Notify that a method can not be decompiled because of a native boost call,,,,,,,,,,,,,,,,,,,,,
KMKeymapTest,SUnit tests for the key map,SUnit tests,,for the key map,,,,,,,,,,,,,,,,,,SUnit tests for the key map,,
BISettingPreviewer,"Preview to see the effect of a setting on the behavior of the pretty printer.
  
  self new openWithSpec","Preview to see the effect of a setting on the behavior of the pretty printer.
  
  self new openWithSpec","Preview to see the effect of a setting on the behavior of the pretty printer.
  
  self new openWithSpec",,,,,,,,,,,,,,,,,,,,,
SparseLargeArray,A version of SparseLargeTable that does not populate its bins until a value other than the default is stored.!,A version of SparseLargeTable that does not populate its bins until a value other than the default is stored.!,A version of SparseLargeTable that does not populate its bins until a value other than the default is stored.!,,,,,,,A version of SparseLargeTable that does not populate its bins until a value other than the default is stored.!,,,,,,,,,,,,,,
TraitAlias,"It is kept for compatibility with extension methods
  Check the class TaAbstractComposition for the new implementation.",,It is kept for compatibility with extension methods Check the class TaAbstractComposition for the new implementation.,,It is kept for compatibility with extension methods Check the class TaAbstractComposition for the new implementation.,,,Check the class TaAbstractComposition for the new implementation.,,,,,,,,,,,,,,,,
ClyOldMessageBrowserQuery,"I am a special query which is based on constant list of methods or class comments.
  
  I am introduced to support old (current) approach for system queries which is based on SystemNavigation collecting list of methods.
  
  I am used by ClyOldMessageBrowserAdapter which is installed as default as part of Calypso toolset.
  
  I implement semantics of old MessageBrowser.
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  criteriaBlock: <BlockClosure>
  criteriaString: <String>
  extraMethods: <Collection of<CompiledMethod>>","""I am a special query which is based on constant list of methods or class comments.",I am introduced to support old (current) approach for system queries which is based on SystemNavigation collecting list of methods.,"I am used by ClyOldMessageBrowserAdapter which is installed as default as part of Calypso toolset.
  
  I implement semantics of old MessageBrowser.",,,"Internal Representation and Key Implementation Points.
  
  Instance Variables
  criteriaBlock: <BlockClosure>
  criteriaString: <String>
  extraMethods: <Collection of<CompiledMethod>>""",,,"I am used by ClyOldMessageBrowserAdapter which is installed as default as part of Calypso toolset.
  
  I implement semantics of old MessageBrowser.",,,,,,,,,,,,,,
EpBehaviorNameChange,I represent a rename of a class or a trait.,I represent a rename of a class or a trait.,,,,,,,,,,,,,,,,,,,,,,
BalloonMorph,"A balloon with text used for the display of explanatory information.
  
  Balloon help is integrated into Morphic as follows:
  If a Morph has the property #balloonText, then it will respond to #showBalloon by adding a text balloon to the world, and to #deleteBalloon by removing the balloon.
  
  Moreover, if mouseOverEnabled is true (see class msg), then the Hand will arrange to cause display of the balloon after the mouse has lingered over the morph for a while, and removal of the balloon when the mouse leaves the bounds of that morph. In any case, the Hand will attempt to remove any such balloons before handling mouseDown events, or displaying other balloons.
  
  Balloons should not be duplicated with veryDeepCopy unless their target is also duplicated at the same time.","""A balloon with text used for the display of explanatory information.","""A balloon with text used for the display of explanatory information.",,"If a Morph has the property #balloonText, then it will respond to #showBalloon by adding a text balloon to the world, and to #deleteBalloon by removing the balloon.","Balloon help is integrated into Morphic as follows: If a Morph has the property #balloonText, then it will respond to #showBalloon by adding a text balloon to the world, and to #deleteBalloon by removing the balloon. Moreover, if mouseOverEnabled is true (see class msg), then the Hand will arrange to cause display of the balloon after the mouse has lingered over the morph for a while, and removal of the balloon when the mouse leaves the bounds of that morph. In any case, the Hand will attempt to remove any such balloons before handling mouseDown events, or displaying other balloons. Balloons should not be duplicated with veryDeepCopy unless their target is also duplicated at the same time.""",,"(see class msg),",,,,,,,Balloons should not be duplicated with veryDeepCopy unless their target is also duplicated at the same time.,,,,,,,,,
ShiftClassInstaller,"I am the responsible of installing a class in the system.
  
  I interact with the ShiftClassBuilder to generate the classes.
  You can use me as in:
  
  Smalltalk classInstaller make: [ :aBuilder |
  aBuilder
  superclass: Object;
  name: #MyClass;
  slots: #(varA varB);
  category: 'My-Category' ].
  
  See that I should never be referenced directly, only through the accesor
  in Smalltalk or in any class in the system.
  
  The block passed is used to configure the builder. Check ShiftClassBuilder to see the available messages.
  
  I have a subclass to anonymous generate classes, without registering in the environment.","""I am the responsible of installing a class in the system.",I interact with the ShiftClassBuilder to generate the classes.,I interact with the ShiftClassBuilder to generate the classes.,,,,Check ShiftClassBuilder to see the available messages.,"I have a subclass to anonymous generate classes, without registering in the environment.""",I interact with the ShiftClassBuilder to generate the classes.,"You can use me as in:
  
  Smalltalk classInstaller make: [ :aBuilder |
  aBuilder
  superclass: Object;
  name: #MyClass;
  slots: #(varA varB);
  category: 'My-Category' ].
  
  See that I should never be referenced directly, only through the accesor
  in Smalltalk or in any class in the system.
  
  The block passed is used to configure the builder. Check ShiftClassBuilder to see the available messages.",,,,"See that I should never be referenced directly, only through the accesor in Smalltalk or in any class in the system.",,,,,,,,,
TickingWindowModel,This is deprecated class because the original class TickingWindowModel was renamed to TickingWindowPresenter. You should stop to use this class and modify your code to use TickingWindowPresenter.,,,,,,,,,,,,,,,,,,,,,,,This is deprecated class because the original class TickingWindowModel was renamed to TickingWindowPresenter. You should stop to use this class and modify your code to use TickingWindowPresenter.
GLMMorphicPagerRenderer,A GLMMorphicPagerRenderer is xxxxxxxxx.,,,,,,,,,,,,,,,,,,,,,,,
ClyClassContextOfFullBrowser,I am a context of selected classes in full browser,I am a context of selected classes in full browser,,,,,,,,,,,,,,,,,,,,,,
OmSessionStoreUpdated,I am announced when a OmSessionStore updated its current #store.,,I am announced when a OmSessionStore updated its current #store.,I am announced when a OmSessionStore updated its current #store.,,,I am announced when a OmSessionStore updated its current #store.,,,I am announced when a OmSessionStore updated its current #store.,,,,,,,,,,,I am announced when a OmSessionStore updated its current #store.,,,
CNGBTextConverter,"Text converter for Simplified Chinese variation of EUC. (Even though the name doesn't look so, it is what it is.)",Text converter for Simplified Chinese variation of EUC.,,,,,,,,,,,Text converter for Simplified Chinese variation of EUC.,,,"(Even though the name doesn't look so, it is what it is.)",,,,,,,,
VTermTestRunner,"I am command line test runner.
  I run a TestSuite and outpout the progress in a terminal friendly way with XTerm characters.","""I am command line test runner.","I run a TestSuite and outpout the progress in a terminal friendly way with XTerm characters.""",I run a TestSuite,,,,,,,,,,,,,,,,,,,,
ShAbstractClassBuilderTest,Abstract Test class for the Shift Class Builder tests,Abstract Test class for the Shift Class Builder tests,Abstract Test class for the Shift Class Builder tests,Abstract Test class for the Shift Class Builder tests,,,,,,,,,,,,,,,,,,,,
OCThisContextVariable,I model thisContext variables,,I model thisContext variables,,,,,,,,,,,,,,,,,,,,,
ReAbstractRule,"I an the root of all quality rules rules.
  
  If you want to learn about the features of rules or how to create your own, please read:
  
  RenrakuRuleHelp readInHelpBrowser","""I an the root of all quality rules rules.",,,,,,"If you want to learn about the features of rules or how to create your own, please read:
  
  RenrakuRuleHelp readInHelpBrowser""",,,,,,,,,,,,,,,,
ClyFindMethodInBrowserCommand,"I am a command to find method in methodView of full browser.
  I request user with search dialog using method view query.
  So dialog shows all methods from method view panel.
  
  By default I am activated by cmd+f.",I am a command to find method in methodView of full browser.,"I am a command to find method in methodView of full browser.
  I request user with search dialog using method view query.
  So dialog shows all methods from method view panel.",,,,,,,,By default I am activated by cmd+f.,,,,,,,,,,,,,
EmptyLayout,Empty top-level layout used to delimit the layout chains.,Empty top-level layout used to delimit the layout chains.,Empty top-level layout used to delimit the layout chains.,,,,,,,,,,,,,,,,,,,,,
ReTestClassNotInPackageWithTestEndingName,A subclass of TestCase should be in package which name is ending with '-Tests',,,A subclass of TestCase should be in package which name is ending with '-Tests',,A subclass of TestCase should be in package which name is ending with '-Tests',,,,A subclass of TestCase should be in package which name is ending with '-Tests',,,,,,,,,,,,,,
OCCompilerNotifyingTest,"A CompilerNotifyingTest is a TestCase for checking that Compiler/Parser notifications are inserted at the right place in a TextEditor.
  
  Instance Variables
  expectedErrorPositions: <Array of: Integer>
  expectedErrors: <Array of: String>
  failure: <Object>
  morph: <TextMorph>
  text: <String>
  
  errorPositions
  - the position where error text should be inserted for each chunk of text evaluated
  
  errors
  - the error text that should be inserted on evaluation of each chunk of text evaluated
  
  failure
  - an object returned in case of evaluation error and whose identity can be uniquely recognized as a failure
  
  morph
  - the Morph holding the text
  
  text
  - the string containing all the chunks to be evaluated (separated by %)
  and the expected error messages (`enclosed in back quotes`)
  this text will be stripped of the error messages before being evaluated.",A CompilerNotifyingTest is a TestCase for checking that Compiler/Parser notifications are inserted at the right place in a TextEditor.,for checking that Compiler/Parser notifications are inserted at the right place in a TextEditor.,,,,"Instance Variables
 expectedErrorPositions: <Array of: Integer>
 expectedErrors: <Array of: String>
 failure: <Object>
 morph: <TextMorph>
 text: <String>",,,,,,,,,,,,,,,,,
ClyMethodVisibilityLevel,"I am a root of hierarchy of different kind of method visibilities.
  Instances are created with currently visible class scope and extra scope which can be activated.
  
  Activation/decactivation methods returns new scope which represent result method visibility:
  
  - activateExtraScope
  - deactivateExtraScope
  
  My instances are used by browser to switch method visibility of inherited classes. They use simple method #toggleScope which also returns result method scope.
  To represent current state of visible scope I compute #isActive flag:
  If any of classes from extra scope is included in the visible scope then my instance is considered active
  
  My instances are created on currently visible class scope. And subclasses create extra scope according to their logic.
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  visibleClassScope: <ClyClassScope>
  extraClassScope: <ClyAbstractClassScope>
  isActive: <Boolean>
  
  
  
  Implementation Points",I am a root of hierarchy of different kind of method visibilities.,,,"Activation/decactivation methods returns new scope which represent result method visibility: 
 
 - activateExtraScope 
 - deactivateExtraScope 
 
 My instances are used by browser to switch method visibility of inherited classes. They use simple method #toggleScope which also returns result method scope.
 To represent current state of visible scope I compute #isActive flag:",,"Instance Variables
  visibleClassScope: <ClyClassScope>
  extraClassScope: <ClyAbstractClassScope>
  isActive: <Boolean>",,,,,,,,,,,,,,"Instances are created with currently visible class scope and extra scope which can be activated. 
 
 f any of classes from extra scope is included in the visible scope then my instance is considered active",,,
IceUnbornProjectReader,I create unborn projects from a commitish if it is HEAD and it does not have a '.project' file.,,I create unborn projects from a commitish if it is HEAD and it does not have a '.project' file.,,,,,,,,,,,,,,,,,,,,,
ZipDirectoryMember,"ZipFileMember instances represent directories inside ZipArchives.
  They don't do much other than hold names and permissions (and extra fields).
  
  You can add files in subdirectories to a ZipArchive without using any ZipDirectoryMembers.","""ZipFileMember instances represent directories inside ZipArchives.","They don't do much other than hold names and permissions (and extra fields). You can add files in subdirectories to a ZipArchive without using any ZipDirectoryMembers.""","You can add files in subdirectories to a ZipArchive without using any ZipDirectoryMembers.""",,,,,,,,,,,,,,,,,,,,
GLMPopupBrick,I am a popup with an action button hint text,I am a popup with an action button hint text,,,,,,,,,,,,,,,,,,,,,,
GTBytecodeDebuggerSession,"I provide debugging actions at the level of the bytecode.
  I also make sure that step over only goes over one single bytecode instruction.",,"I provide debugging actions at the level of the bytecode.
  I also make sure that step over only goes over one single bytecode instruction.",,,,,,,,,,,,,,,,,,,,,
ImageMorph,"ImageMorph is a morph that displays a picture (Form). My extent is determined by the extent of my form.
  
  Use #image: to set my picture.
  
  Structure:
  instance var Type Description
  image Form The Form to use when drawing
  
  Code examples:
  ImageMorph new openInWorld; grabFromScreen
  
  (Form fromFileNamed: 'myGraphicsFileName') asMorph openInWorld
  
  Relationship to SketchMorph: ImageMorph should be favored over SketchMorph, a parallel, legacy class -- see the Swiki FAQ for details ( http://minnow.cc.gatech.edu/squeak/1372 ).",ImageMorph is a morph that displays a picture (Form).,ImageMorph is a morph that displays a picture (Form).,ImageMorph is a morph that displays a picture (Form).,Use #image: to set my picture.,My extent is determined by the extent of my form.,"Structure:
  instance var Type Description
  image Form The Form to use when drawing","Relationship to SketchMorph: ImageMorph should be favored over SketchMorph, a parallel, legacy class -- see the Swiki FAQ for details ( http://minnow.cc.gatech.edu/squeak/1372 ).",,"Relationship to SketchMorph: ImageMorph should be favored over SketchMorph, a parallel, legacy class -- see the Swiki FAQ for details ( http://minnow.cc.gatech.edu/squeak/1372 ).","Code examples:
  ImageMorph new openInWorld; grabFromScreen
  
  (Form fromFileNamed: 'myGraphicsFileName') asMorph openInWorld",,,,"Relationship to SketchMorph: ImageMorph should be favored over SketchMorph, a parallel, legacy class -- see the Swiki FAQ for details ( http://minnow.cc.gatech.edu/squeak/1372 ).",,"Relationship to SketchMorph: ImageMorph should be favored over SketchMorph, a parallel, legacy class -- see the Swiki FAQ for details ( http://minnow.cc.gatech.edu/squeak/1372 ).",,,,,,,
FormCanvas,"Note that when shadowDrawing is true, shadowStipple may be either a color, for a solid shadow of the given color, or it may be a stipple used to simulate gray shading when the display cannot support alpha blending.",,,,,"Note that when shadowDrawing is true, shadowStipple may be either a color, for a solid shadow of the given color, or it may be a stipple used to simulate gray shading when the display cannot support alpha blending.","Note that when shadowDrawing is true, shadowStipple may be either a color, for a solid shadow of the given color, or it may be a stipple used to simulate gray shading when the display cannot support alpha blending.",,,,"Note that when shadowDrawing is true, shadowStipple may be either a color, for a solid shadow of the given color, or it may be a stipple used to simulate gray shading when the display cannot support alpha blending.",,,,"Note that when shadowDrawing is true, shadowStipple may be either a color, for a solid shadow of the given color, or it may be a stipple used to simulate gray shading when the display cannot support alpha blending.",,,,,,,,,
GLMLipsumWithSegmentsExample,self new open,,,,self new open,,,,,,self new open,,,,,,,,,,,,,
SDL_MouseButtonEvent,SDL2 library structure,SDL2 library structure,,,,,,,,,,,,,,,,,,,,SDL2 library structure,,
AnnouncementSetWithExclusions,"I am an AnnouncementSet that explicitely does not handle a number of exclusion Announcements.
  
  You could define me by #- message:
  
  announcer when: Announcement - ValueChanged do: [...].
  announcer when: Announcement - ValueChanged - ValueAdded do: [...].
  announcer when: ValueAdded, ValueRemoved - ValueAdded
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  exclusions: <OrderedCollection>",I am an AnnouncementSet,that explicitely does not handle a number of exclusion Announcements.,,,,"Instance Variables
  exclusions: <OrderedCollection>",,,,"You could define me by #- message:
  
  announcer when: Announcement - ValueChanged do: [...].
  announcer when: Announcement - ValueChanged - ValueAdded do: [...].
  announcer when: ValueAdded, ValueRemoved - ValueAdded",,,,,,,,,,,,,
DADependencyFromClass,A PDDependencyFromClass is a dependency from the class. The source class is stored in the inst var.,A PDDependencyFromClass is a dependency from the class.,,,,The source class is stored in the inst var.,,,,,,,,,,,,,,,,,,
TextModel,This is deprecated class because the original class TextModel was renamed to TextPresenter. You should stop to use this class and modify your code to use TextPresenter.,,,,,,,,,,,,,,You should stop to use this class and modify your code to use TextPresenter.,,,,,,,,,
EyeMethodContextInspector,I am an eye inspector specified for MethodContext,I am an eye inspector specified for MethodContext,I am an eye inspector specified for MethodContext,I am an eye inspector specified for MethodContext,,,,,,I am an eye inspector specified for MethodContext,,,,,,,,,,,,,,
IceSemanticVersion,"I represent the semver (http://semver.org) of libgit2.
  Since I exist just to be able to compare versions, I'm limited (reason why I'm not promoted to a more general package).",I represent the semver (http://semver.org) of libgit2.,"Since I exist just to be able to compare versions, I'm limited (reason why I'm not promoted to a more general package)",,,,,,,,,,,,,"Since I exist just to be able to compare versions, I'm limited (reason why I'm not promoted to a more general package)",I represent the semver (http://semver.org) of libgit2.,,,,,I represent the semver (http://semver.org) of libgit2.,,
ClyTraitMethodDecorator,"I decorate table with special icon for methods which are defined in traits.
  Notice that I only apply decoration when selected class is different than method defining trait",,I decorate table with special icon for methods which are defined in traits.,,,,,,,,,,,,Notice that I only apply decoration when selected class is different than method defining trait,,,,,,,,,
BehaviorTest,SUnit tests for Behavior,SUnit tests for Behavior,SUnit tests for Behavior,SUnit tests for Behavior,,,,,,SUnit tests for Behavior,,,,,,,,,,,,SUnit tests for Behavior,,
ShSmalltalkGlobalsEnvironment,"I represent the Smalltalk globals environment.
  I am used to generate the classes by the ShiftClassBuilder when it is using directly the Smalltalk environment.",I represent the Smalltalk globals environment.,I am used to generate the classes by the ShiftClassBuilder when it is using directly the Smalltalk environment.,,,,,,,I represent the Smalltalk globals environment. I am used to generate the classes by the ShiftClassBuilder when it is using directly the Smalltalk environment.,,,,,,,,,,,I am used to generate the classes by the ShiftClassBuilder when it is using directly the Smalltalk environment.,,,
CannotDeleteFileException,Notfify when not able to delete,,Notfify when not able to delete,,,,,,,,,,,,,,,,,,Notfify when not able to delete,,,
GLMWindowRequest,"I indicate to the renderer to execute a message on the window that rendered this presentation. It will only execute if the presentation is directly rendered in a window (i.e., if this is the presentation to which #openWith: was sent)",,I indicate to the renderer to execute a message on the window that rendered this presentation.,,,,,,,,,,,,"It will only execute if the presentation is directly rendered in a window (i.e., if this is the presentation to which #openWith: was sent)",,,,,,"It will only execute if the presentation is directly rendered in a window (i.e., if this is the presentation to which #openWith: was sent)",,,
RBRefactoryTyper,"I am a type guesser used by refactoring operations.
  
  I try to determine the types used for variables in a class.
  
  Refactoring operations are using me to provide a possible list of classes that are affected by a refactoring.
  For example, for moving or delegating a method implementation to an instance variable, it might be necessary to add this implementation to multiple classes.
  
  I analyze message sends to the instance variables and try to guess the type by looking at implementors of that messages.
  (If a method sends ifTrue:ifFalse: to an instance variable I can guess that the instance variable may be a Boolean object).
  
  If I can guess the type to be a collection, I'll try to investigate the types of the possible contained elements as well.
  You can ask for the guessed type of the variable:
  typer guessTypeFor: 'variablename'
  and the contained elements:
  typer guessTypeFor: '-variablename-'
  
  Example usage:
  | typer |
  ""create and initialize for a class to analyze""
  typer := (RBRefactoryTyper new runOn: RBMessageNode).
  
  ""guess types for RBMessageNodes instane var 'arguments' ""
  typer guessTypesFor:'arguments'. ""a Set(SequenceableCollection)""
  
  ""guess types for objects that may be put into 'arguments' collection ""
  typer guessTypesFor:'-arguments-' ""a Set(RBBlockNode RBMethodNode)""
  
  
  You can print a full report on all results with #printString.
  
  (RBRefactoryTyper new runOn: Point ) printString.
  ""'Point
  x <Integer>
  y <Integer>
  '""
  
  There are two class side methods, one for creating an instance and setting the environment used to resolve names - a RBNamespace.
  
  And another one for guessing types in a parseTree:
  
  RBRefactoryTyper typesFor: 'var' in: (RBParser parseExpression: 'var squared') model: RBNamespace new ""a Set(Number Collection)""
  (Here, I can guess the types Number and Collections as these are the classes implementing the message #squared)",I am a type guesser used by refactoring operations.,"I try to determine the types used for variables in a class.
  
  Refactoring operations are using me to provide a possible list of classes that are affected by a refactoring.
  For example, for moving or delegating a method implementation to an instance variable, it might be necessary to add this implementation to multiple classes.
  
  I analyze message sends to the instance variables and try to guess the type by looking at implementors of that messages.
  (If a method sends ifTrue:ifFalse: to an instance variable I can guess that the instance variable may be a Boolean object).
  
  If I can guess the type to be a collection, I'll try to investigate the types of the possible contained elements as well.
  You can ask for the guessed type of the variable:
  typer guessTypeFor: 'variablename'
  and the contained elements:
  typer guessTypeFor: '-variablename-'","There are two class side methods, one for creating an instance and setting the environment used to resolve names - a RBNamespace.",,,,,,"There are two class side methods, one for creating an instance and setting the environment used to resolve names - a RBNamespace.","Example usage:
  | typer |
  ""create and initialize for a class to analyze""
  typer := (RBRefactoryTyper new runOn: RBMessageNode).
  
  ""guess types for RBMessageNodes instane var 'arguments' ""
  typer guessTypesFor:'arguments'. ""a Set(SequenceableCollection)""
  
  ""guess types for objects that may be put into 'arguments' collection ""
  typer guessTypesFor:'-arguments-' ""a Set(RBBlockNode RBMethodNode)""
  
  
  You can print a full report on all results with #printString.
  
  (RBRefactoryTyper new runOn: Point ) printString.
  ""'Point
  x <Integer>
  y <Integer>
  '""
 
  And another one for guessing types in a parseTree:
  
  RBRefactoryTyper typesFor: 'var' in: (RBParser parseExpression: 'var squared') model: RBNamespace new ""a Set(Number Collection)""
  (Here, I can guess the types Number and Collections as these are the classes implementing the message #squared)",,,,,,,,,,,,,
EpHelp,Help for Epicea project.,Help for Epicea project.,,,,,,,,,,,,,,,,,,,,,,
FLPointCluster,"FLPointCluster is an optional class that optimizes Point instances, since there are a lot of instances in the system, it makes sense to optimize them. We take advantage of bytecode optimizations done by Pharo for messages like #@, #x and #y. In addition, we avoid the overhead of class reshape, etc.","FLPointCluster is an optional class that optimizes Point instances, since there are a lot of instances in the system, it makes sense to optimize them.","FLPointCluster is an optional class that optimizes Point instances, since there are a lot of instances in the system, it makes sense to optimize them.","FLPointCluster is an optional class that optimizes Point instances, since there are a lot of instances in the system, it makes sense to optimize them.",,"We take advantage of bytecode optimizations done by Pharo for messages like #@, #x and #y. In addition, we avoid the overhead of class reshape, etc.",,,,"FLPointCluster is an optional class that optimizes Point instances, since there are a lot of instances in the system, it makes sense to optimize them.",,,,,,"FLPointCluster is an optional class that optimizes Point instances, since there are a lot of instances in the system, it makes sense to optimize them.",,,,,,,,
BottomBorder,"Description
  --------------------
  
  BottomBorder is a border style that will fill only the bottom of the rectangle.
  
  Public API and Key Messages
  --------------------
  
  - #trimSize: This option allow to trim the bottom border
  
  Examples
  --------------------
  
  BottomBorder new
  width: 1;
  baseColor: Color white;
  trimSize: 2;
  yourself
  
  Internal Representation and Key Implementation Points.
  --------------------
  
  Instance Variables
  trimSize: <anInteger> An amount of pixel to trim from both side of the bottom border",BottomBorder is a border style that will fill only the bottom of the rectangle.,BottomBorder is a border style that will fill only the bottom of the rectangle.,,- #trimSize: This option allow to trim the bottom border,,trimSize: <anInteger> An amount of pixel to trim from both side of the bottom border,,,,"BottomBorder new
 width: 1;
 baseColor: Color white;
 trimSize: 2;
 yourself",,,,,,,,,,,,,
NNavDirectionParent,I'm the one who knows how to navigate going to the parent node.,,I'm the one who knows how to navigate going to the parent node.,,,,,,,,,,,,,,,,,,,,,
RBSendsMethodDictRule,Nobody should directly access the method dictionary. It is purely an implementation artefact that we use one dictionary and it might change in the future.,,,,,,,,,,,,,,Nobody should directly access the method dictionary. It is purely an implementation artefact that we use one dictionary and it might change in the future.,,,,,Nobody should directly access the method dictionary. It is purely an implementation artefact that we use one dictionary and it might change in the future.,,,,
RBLiteralArrayContainsSuspiciousTrueFalseOrNilRule,"Some times ago, arrays were not allowed to contain true false and nil objects. They only contain their symbol representation: evaluating #(true false nil) returns #(#true #false #nil).
  
  Nowadays, #(true false nil) is equivalent to {true . false . nil }, i.e., it returns an array with the objects true, false, and nil.
  
  This smells checks methods having #(#true #false #nil) in their literal frame since it can be the source of potential bugs.",,,,,"Nowadays, #(true false nil) is equivalent to {true . false . nil }, i.e., it returns an array with the objects true, false, and nil.",,,,,,,,,,"Some times ago, arrays were not allowed to contain true false and nil objects.",,,,,,,,
RussianEnvironment,"EncodedCharSet initialize.
  LanguageEnvironment resetKnownEnvironments.
  Locale switchToID: (LocaleID isoLanguage: 'ru').",,,,,,,,,"EncodedCharSet initialize.
  LanguageEnvironment resetKnownEnvironments.
  Locale switchToID: (LocaleID isoLanguage: 'ru').","EncodedCharSet initialize.
  LanguageEnvironment resetKnownEnvironments.
  Locale switchToID: (LocaleID isoLanguage: 'ru').",,,,,,,,,,,,,
RGNamespace,"A namespace is a container that in addition to managing classes and methods, it also knows how to treat pools and global variables",A namespace is a container,"that in addition to managing classes and methods, it also knows how to treat pools and global variables",,,,,,,,,,,,,,,,,,,,,
ClyOverriddenMethodTag,I mark overridden methods which are overridden by any of subclasses,,I mark overridden methods which are overridden by any of subclasses,,,,,,,,,,,,,,,,,,,,,
ClyItemStringFilter,"I am a root of hierarchy of filters which use string pattern to filter objects.
  Concrete filter function is still responsibility of subclasses.
  
  I only define correct comparison with other filters and suitable constructors:
  
  StringFilterClass regexPattern: aRegexString.
  StringFilterClass substringPattern: aSubString
  StringFilterClass pattern: aStringPattern
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  pattern: <ClyStringPattern>",I am a root of hierarchy of filters which use string pattern to filter objects.,I only define correct comparison with other filters and suitable constructors:,StringFilterClass regexPattern: aRegexString.,,,"Instance Variables
 pattern: <ClyStringPattern>",,,,"StringFilterClass regexPattern: aRegexString.
 StringFilterClass substringPattern: aSubString
 StringFilterClass pattern: aStringPattern",,,,,,,,,,,,,
RubFloatingEditorBuilder,"I provide the capability to open a floating editor to edit something on the fly.
  The user is responsible for deciding on how to open the editor. See #exampleEditableStringMorph class side as an example on how to do it with #on:send:to.
  
  One opened:
  - if the escape character is pressed or if the keyboard focus is lost or in case of a mouse down anywhere else than inside the editor then the editing is aborted.
  - the Enter key or Cmd+s save the contents in the Morph, then an announcement of class RubMorphEdited is sent so that the user can take desired action (checking the input, definitively accept it or reject it).
  
  see #exampleEditableStringMorph class side
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  announcer: <Announcer>
  editor: <RubScrolledTextMorph>
  acceptOnCR: <Boolean>
  initialContents: <String>
  font: <LogicalFont>
  customizeValuable: <Valuable>
  
  Implementation notes",,I provide the capability to open a floating editor to edit something on the fly.,See #exampleEditableStringMorph class side as an example on how to do it with #on:send:to.,,"One opened:
 - if the escape character is pressed or if the keyboard focus is lost or in case of a mouse down anywhere else than inside the editor then the editing is aborted.
 - the Enter key or Cmd+s save the contents in the Morph, then an announcement of class RubMorphEdited is sent so that the user can take desired action (checking the input, definitively accept it or reject it).","Instance Variables
 announcer: <Announcer>
 editor: <RubScrolledTextMorph>
 acceptOnCR: <Boolean>
 initialContents: <String>
 font: <LogicalFont>
 customizeValuable: <Valuable>",see #exampleEditableStringMorph class side,,,,,,,,,,,,,,,,
FTPClient,"A minimal FTP client program. Could store all state in inst vars, and use an instance to represent the full state of a connection in progress. But simpler to do all that in one method and have it be a complete transaction.
  
  Always operates in passive mode (PASV). All connections are initiated from client in order to get through firewalls.
  
  See ServerDirectory openFTP, ServerDirectory getFileNamed:, ServerDirectory putFile:named: for examples of use.
  
  See TCP/IP, second edition, by Dr. Sidnie Feit, McGraw-Hill, 1997, Chapter 14, p311.",A minimal FTP client program.,Always operates in passive mode (PASV). All connections are initiated from client in order to get through firewalls.,,,"Could store all state in inst vars, and use an instance to represent the full state of a connection in progress. But simpler to do all that in one method and have it be a complete transaction.",,"See TCP/IP, second edition, by Dr. Sidnie Feit, McGraw-Hill, 1997, Chapter 14, p311.",,,"See ServerDirectory openFTP, ServerDirectory getFileNamed:, ServerDirectory putFile:named: for examples of use.",,,,,,,,,,,,,
RBNullFormatter,"A simple null formatter that just delegates to source code and is not good when nodes are reflectively built.
  
  Will be replaced by RBSimpleFormatter",A simple null formatter that just delegates to source code and is not good when nodes are reflectively built.,A simple null formatter that just delegates to source code and is not good when nodes are reflectively built.,,,,,,,Will be replaced by RBSimpleFormatter,,,,,,Will be replaced by RBSimpleFormatter,,,,,,,,
RBCompositeRefactoryChange,"I am a composition of RBRefactoryChanges. I hold a list of changes.
  I implement many ""environment change"" operation like renameClass/removeClass/ rename instance variable that are
  actually called on the name space by a refactoring operation and my responsibilty is to create a appropriate refactoring change
  and save it in my list of changes.","""I am a composition of RBRefactoryChanges. I hold a list of changes.","I implement many """"environment change"""" operation like renameClass/removeClass/ rename instance variable that are
  actually called on the name space by a refactoring operation and my responsibilty is to create a appropriate refactoring change
  and save it in my list of changes.""",I am a composition of RBRefactoryChanges.,,,,,,,,,,,,,,,,,,,,
ImageModel,This is deprecated class because the original class ImageModel was renamed to ImagePresenter. You should stop to use this class and modify your code to use ImagePresenter.,,,This is deprecated class because the original class ImageModel was renamed to ImagePresenter.,,,,,,This is deprecated class because the original class ImageModel was renamed to ImagePresenter.,,,,,You should stop to use this class and modify your code to use ImagePresenter.,,,,,,,,,
SugsStoresIntoInstVar,I know how to find stores into for an instance var,,I know how to find stores into for an instance var,,,,,,,,,,,,,,,,,,,,,
ClyPackageScope,"I am a scope of packages.
  So I see all objects which are defined by given packages:
  - packages
  - classes
  - methods",I am a scope of packages.,,,,,,,,,,,,,,,,,,,,,,
PrivacyChangedAnnoucement,I announce changes on Privacy settings in SystemAnnouncer uniqueInstance.,,I announce changes on Privacy settings in SystemAnnouncer uniqueInstance.,,,,,,,I announce changes on Privacy settings in SystemAnnouncer uniqueInstance.,,,,,,,,,,,,,,
FinderClassNode,A FinderClassNode is a node used by the FinderUI's tree representing a Class,A FinderClassNode is a node used by the FinderUI's tree representing a Class,A FinderClassNode is a node used by the FinderUI's tree representing a Class,A FinderClassNode is a node used by the FinderUI's tree representing a Class,,,,,,,,,,,,,,,,,,A FinderClassNode is a node used by the FinderUI's tree representing a Class,,
GTFilter,"I am the root class of the hierarchy of filter objects that can be used by Spotter.
  
  The main entry point is the #value method that performs and returns the list of filtered items.
  Subclasses should return the list of filtered elements in sorted order based on the filtering criteria.",I am the root class of the hierarchy of filter objects that can be used by Spotter.,,,,,,,,,,,,,Subclasses should return the list of filtered elements in sorted order based on the filtering criteria.,,,,,,,,,
ClySortMethodByPackageFunction,See comment of my collate:with: method,,,,See comment of my collate:with: method,,,See comment of my collate:with: method,,,,,,,,,,,,,,,,
ClyAbstractClassExample,I am example of class with abstract methods,I am example of class with abstract methods,I am example of class with abstract methods,I am example of class with abstract methods,,,,,,,,,,,,,,,,,,,,
FFIExternalEnumerationTests,Tests for external enumerations,Tests for external enumerations,,,,,,,,,,,,,,,,,,,,,,
FLPrimitiveCluster,I am a cluster that serializes and materializes interacting directly with the stream.,I am a cluster that serializes and materializes interacting directly with the stream.,,,,,,,,,,,,,,,,,,,,,,
IceTipPullCommand,"I'm a command to perform a pull of incomming commits.
  I open a pull view window.",I'm a command to perform a pull of incomming commits.,"I'm a command to perform a pull of incomming commits.
  I open a pull view window.",,,,,,,,,,,,,,,,,,,,,
TApplyingOnClassSide,Kernel trait for applying on the class side,Kernel trait for applying on the class side,,,,,,,,,,,,,,,,,,,,,,
TickSelectionCheckboxButtonMorph,A TickSelectionCheckboxButtonMorph is the button hidden into the TickSelectionCheckboxMorph,A TickSelectionCheckboxButtonMorph is the button hidden into the TickSelectionCheckboxMorph,,,,,,,,,,,,,,,,,,,,,,
ClyGroupedCritiqueResult,"I am critique query result which group given critiques by group name.
  I represent these groups with ClyConcreteCritiqueMethodGroup instances","""I am critique query result which group given critiques by group name.
  I represent these groups with ClyConcreteCritiqueMethodGroup instances""","I am critique query result which group given critiques by group name.
  I represent these groups with ClyConcreteCritiqueMethodGroup instances",,,,,,,,,,,,,,,,,,,,,
TIndexAccess,A trait for test purposes,A trait for test purposes,,,,,,,,,,,,,,,,,,,,,,
ZdcByteArrayManager,"I manage the allocation and recycling of ByteArrays.
  
  For each size, I maintain up to limit instances, configurable using #limit:
  
  I never preallocate.
  
  I am threadsafe.
  
  My public API consists of just 2 messages: #byteArrayOfSize:zero: and #recyle:
  
  There is one global current instance for me, but I can be used as needed.
  
  ZdcByteArrayManager current limit: 4.
  
  ZdcByteArrayManager current limit: 0.",,"I manage the allocation and recycling of ByteArrays.
  
  For each size, I maintain up to limit instances, configurable using #limit:
  
  I never preallocate.
  
  I am threadsafe.",,"For each size, I maintain up to limit instances, configurable using #limit:
 
  My public API consists of just 2 messages: #byteArrayOfSize:zero: and #recyle:",,,,,I manage the allocation and recycling of ByteArrays.,"There is one global current instance for me, but I can be used as needed.",,,,I never preallocate.,,,,,,,,,
RGSlice,"A slice is an arbitrary container of elements (working unit)
  By inheritance it knows how to treat classes and methods",A slice is an arbitrary container of elements,By inheritance it knows how to treat classes and methods,,,,,,,,,,,,,,,,,,,,,
RFReceiverReification,I reify the receiver of a Message or a method,,I reify the receiver of a Message or a method,,,,,,,,,,,,,,,,,,,,,
ProtocolAdded,"This class is not used, but should be used when we hook into the addition and removal of protocols. Right now, we only get ClassReorganizedAnnouncement",,,"Right now, we only get ClassReorganizedAnnouncement",,"This class is not used, but should be used when we hook into the addition and removal of protocols. Right now, we only get ClassReorganizedAnnouncement",,,,,,,,,,,,,,,,,,
IceTipEditCredentialCommand,"I open the edit dialog on the credential.
  I colaborate with the credential to know the specific class of the dialog model.
  Check #editModelClass in IceSshCredentials and IcePlaintextCredentials",,"I open the edit dialog on the credential.
  Check #editModelClass in IceSshCredentials and IcePlaintextCredentials",I colaborate with the credential to know the specific class of the dialog model.,,,,Check #editModelClass in IceSshCredentials and IcePlaintextCredentials,,,,,,,,,,,,,,,,
RBAddClassTraitChange,"I am a refactoring change for a class trait addition, the meta side of a trait definition.","I am a refactoring change for a class trait addition, the meta side of a trait definition.",,,,,,,,,,,,,,,,,,,,,,
SmallDictionaryTest,SUnit tests for small dictionaries,SUnit tests,,for small dictionaries,,,,,,,,,,,,,,,,,,SUnit tests for small dictionaries,,
StoredSettingsMergerTest,A StoredSettingsMergerTest is a test class for testing the behavior of StoredSettingsMerger,A StoredSettingsMergerTest is a test class for testing the behavior of StoredSettingsMerger,A StoredSettingsMergerTest is a test class for testing the behavior of StoredSettingsMerger,A StoredSettingsMergerTest is a test class for testing the behavior of StoredSettingsMerger,,,,,,A StoredSettingsMergerTest is a test class for testing the behavior of StoredSettingsMerger,,,,,,,,,,,,,,
SpecExamples,"A SpecExamples is the first sub-book of SpecHelpTopics. It contains examples of using Spec.
  See class side for selectors.",A SpecExamples is the first sub-book of SpecHelpTopics.,It contains examples of using Spec.,A SpecExamples is the first sub-book of SpecHelpTopics.,,,,See class side for selectors.,,A SpecExamples is the first sub-book of SpecHelpTopics.,,,,,,,,,,,,It contains examples of using Spec.,,
RBAddProtocolChange,RBRefactoryProtocolChange is responsible for adding a protocol in classes in a RB model,RBRefactoryProtocolChange is responsible for adding a protocol in classes in a RB model,RBRefactoryProtocolChange is responsible for adding a protocol in classes in a RB model,RBRefactoryProtocolChange is responsible for adding a protocol in classes in a RB model,,,,,,,,,,,,,,,,,,,,
ReSettings,i have settings for QA recording functions,,i have settings for QA recording functions,,,,,,,,,,i have settings for QA recording functions,,,,,,,,,i have settings for QA recording functions,,
MCSubDirectoryRepositoryTest,I am not a subclass of MCRepositoryTest because my purpose was to show that a bug had been fixed and my author didn't feel like implementing all the reuirements of MCRepositoryTests,I am not a subclass of MCRepositoryTest because my purpose was to show that a bug had been fixed and my author didn't feel like implementing all the reuirements of MCRepositoryTests,I am not a subclass of MCRepositoryTest because my purpose was to show that a bug had been fixed and my author didn't feel like implementing all the reuirements of MCRepositoryTests,I am not a subclass of MCRepositoryTest because my purpose was to show that a bug had been fixed and my author didn't feel like implementing all the reuirements of MCRepositoryTests,,,,,,I am not a subclass of MCRepositoryTest because my purpose was to show that a bug had been fixed and my author didn't feel like implementing all the reuirements of MCRepositoryTests,,,,,,I am not a subclass of MCRepositoryTest because my purpose was to show that a bug had been fixed and my author didn't feel like implementing all the reuirements of MCRepositoryTests,,,,,,,,
NOCModel,"I keep the state of the ocompletion algorithm.
  See comments of my parents for details.","""I keep the state of the ocompletion algorithm.",,,,,,"See comments of my parents for details.""",,,,,,,,,,,,,,,,
RubHoverHighlightSegmentMorph,"I am a text segment morph used for highlighting a text segment on mouse over.
  My default color are the text secondary (light) color.
  And my default behavior is to delete myself when the mouse focus leaves me.","""I am a text segment morph used for highlighting a text segment on mouse over.
  My default color are the text secondary (light) color.","And my default behavior is to delete myself when the mouse focus leaves me.""",,,,,,,,,,,,,,,,,,,,,
OSTouchGestureNeedingThresholdDetector,I am a gesture detector for gestures who has to travel a certain distance before being detected,I am a gesture detector for gestures who has to travel a certain distance before being detected,I am a gesture detector for gestures who has to travel a certain distance before being detected,,,,,,,,,,,,,,,,,,I am a gesture detector for gestures who has to travel a certain distance before being detected,,,
InlineTextDiffBuilder,Line based Text diff builder,Line based Text diff builder,,,,,,,,,,,,,,,,,,,,,,
AthensPathConverter,"i am a base class for path conversion.
  i take a path as input and producing a path commands as output.
  
  My default implementation just passing all path commands without changes to destination without any conversion
  
  Example of use:
  
  
  converter := AthensXYZConverter dest: (AthensPolygonPath new).
  convertedPath := converter convert: sourcePath.
  
  You can chain multiple converters:
  
  basicConverter := AthensZYXConv dest: AthensPolygonPath new.
  compoundConverter := AthensABCConverter dest: basicConverter.
  
  compoundConverter convert: somePath
  
  in this case, an initial conversion is performed by instance of AthensABCConverter, and then conversion results are passed down to AthensZYXConv,
  and then finally to instance of AthensPolygonPath.",i am a base class for path conversion.,"""i am a base class for path conversion.
  i take a path as input and producing a path commands as output.",,,My default implementation just passing all path commands without changes to destination without any conversion,,,,,"Example of use:
  
  
  converter := AthensXYZConverter dest: (AthensPolygonPath new).
  convertedPath := converter convert: sourcePath.
  
  You can chain multiple converters:
  
  basicConverter := AthensZYXConv dest: AthensPolygonPath new.
  compoundConverter := AthensABCConverter dest: basicConverter.
  
  compoundConverter convert: somePath
  
  in this case, an initial conversion is performed by instance of AthensABCConverter, and then conversion results are passed down to AthensZYXConv,
  and then finally to instance of AthensPolygonPath.""",,,,,,,,,,,,,
OSTouchThreeFingersScrollEndEvent,Three fingers finished to scroll,,Three fingers finished to scroll,,,,,,,,,,,,,,,,,,Three fingers finished to scroll,,,
RBAddMetaclassChange,I am a refactoring change for the class side of a class addition.,I am a refactoring change for the class side of a class addition.,I am a refactoring change for the class side of a class addition.,,,,,,,,,,,,,,,,,,,,,
LGitDiffDelta,"I represent the difference between two entities (e.g. two files). If one of the entities is new or deleted the ""nfiles"" field will hold be set to 1, otherwise it will be set to 2.",I represent the difference between two entities (e.g. two files).,,,,"If one of the entities is new or deleted the ""nfiles"" field will hold be set to 1, otherwise it will be set to 2.",,,,,,,,,,,,,,,,,,
ClySystemEnvironment,"I represent environment of Pharo system. I incapsulate globals (Smalltalk globals), packageOrganizer (RPackageOrganizer default) and changesAnnouncer (SystemAnnouncer uniqueInstance). I have class side #currentImage instance created with all corresponding globals of current image.
  
  I am used to navigate over system by ClyNavigationEnvironment.
  
  Public API and Key Messages
  
  - packages
  - createPackageNamed: aString
  - removePackage: aPackage
  - includesClassNamed: aString
  - defaultClassCompiler
  - subscribe: aNavigationEnvironment
  - unsubscribe: aNavigationEnvironment
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  changesAnnouncer: <SystemAnnouncer>
  globals: <SmalltalkDictionary> ""Smalltalk globals class""
  name: <String>
  packageOrganizer: <RPackageOrganizer>
  projectManager: <ClyProjectManager>",I represent environment of Pharo system.,"I incapsulate globals (Smalltalk globals), packageOrganizer (RPackageOrganizer default) and changesAnnouncer (SystemAnnouncer uniqueInstance). I have class side #currentImage instance created with all corresponding globals of current image.
  
  I am used to navigate over system by ClyNavigationEnvironment.","I incapsulate globals (Smalltalk globals), packageOrganizer (RPackageOrganizer default) and changesAnnouncer (SystemAnnouncer uniqueInstance). I have class side #currentImage instance created with all corresponding globals of current image.
  
  I am used to navigate over system by ClyNavigationEnvironment.","Public API and Key Messages
  
  - packages
  - createPackageNamed: aString
  - removePackage: aPackage
  - includesClassNamed: aString
  - defaultClassCompiler
  - subscribe: aNavigationEnvironment
  - unsubscribe: aNavigationEnvironment",,"Internal Representation and Key Implementation Points.
  
  Instance Variables
  changesAnnouncer: <SystemAnnouncer>
  globals: <SmalltalkDictionary> ""Smalltalk globals class""
  name: <String>
  packageOrganizer: <RPackageOrganizer>
  projectManager: <ClyProjectManager>",,,I am used to navigate over system by ClyNavigationEnvironment.,,,,,,,,,,,,,,
EUCTextConverter,Text converter for Extended Unix Character. This is an abstract class. The CJK variations are implemented as subclasses.,Text converter for Extended Unix Character,,,,,,,,,,,The CJK variations are implemented as subclasses.,,,,,,,,,,,
ZnServerSession,"I am ZnServerSession.
  I represent an HTTP session in the context of a ZnServer.
  
  To get a reference to the current session, send #session to a ZnMessage (request or response).
  
  Part of Zinc HTTP Components.","I am ZnServerSession.
  I represent an HTTP session in the context of a ZnServer.",,"I represent an HTTP session in the context of a ZnServer.
  To get a reference to the current session, send #session to a ZnMessage (request or response).","To get a reference to the current session, send #session to a ZnMessage (request or response).",,,,,I represent an HTTP session in the context of a ZnServer.,,,,,,,,,,,,Part of Zinc HTTP Components.,,
ManifestFiles,Includes file and directory handling as well as file streams,,Includes file and directory handling as well as file streams,,,,,,,,,,,,,,,,,,,,,
GTBrowseMethodDebuggerAction,I am a debugging action for browsing the currently selected class.,I am a debugging action,for browsing the currently selected class.,,,,,,,,,,,,,,,,,,,,,
GTSpotterEventCollectorTest,A GTSpotterEventCollectorTest is a test class for testing the behavior of GTSpotterEventCollector,A GTSpotterEventCollectorTest is a test class for testing the behavior of GTSpotterEventCollector,A GTSpotterEventCollectorTest is a test class for testing the behavior of GTSpotterEventCollector,A GTSpotterEventCollectorTest is a test class for testing the behavior of GTSpotterEventCollector,,,,,,A GTSpotterEventCollectorTest is a test class for testing the behavior of GTSpotterEventCollector,,,,,,,,,,,,,,
IceTipCommitDiffModel,"I'm a ""static"" diff.
  I represent a diff between two concrete commits.","I'm a ""static"" diff.
  I represent a diff between two concrete commits.",,,,,,,,,,,,,,,,,,,,,,
OSTouchRotationEvent,Superclass of all rotation events,Superclass of all rotation events,,,,,,,,,,,,,,,,,,,,,,
PharoDocCommentNode,"I represent a example expression (expression and value) within a method
  comment (RBCommentNode). Every pair of Pharo expression and a separator (default "">>>"") can be styled as Pharo code and the editor iconstyler can highlight the code and evaluate the expression.
  
  Example, within a method comment:
  
  "" 3 + 4 >>> 7""
  
  The example code should show an expression 3 + 4 and the expected value 7.
  
  See setting on ""Code Browsing"" to enable / disable this doc comment style.","""I represent a example expression (expression and value) within a method
  comment (RBCommentNode).","Every pair of Pharo expression and a separator (default """">>>"""") can be styled as Pharo code and the editor iconstyler can highlight the code and evaluate the expression.","""I represent a example expression (expression and value) within a method
  comment (RBCommentNode).",,,,,,,"Example, within a method comment: """" 3 + 4 >>> 7"""" The example code should show an expression 3 + 4 and the expected value 7.
  See setting on ""Code Browsing"" to enable / disable this doc comment style.",,,,,,,,,,,,,
MD5Test,SUnit tests for MD5,SUnit tests,,for MD5,,,,,,,,,,,,,,,,,,SUnit tests for MD5,,
ClyTypedQuery,"My subclasses represent queries which retrieve particular kind of objects.
  Subclasses should return class of items from class side method #resultItemsType.
  
  I implement many required methods of superclass.
  The rest is responsibility of subclasses:
  
  - buildResult: aQueryResult
  It is the method where query retrieves items from the scope and fill given result with them. Look at implementors.
  
  - checkEmptyResult
  Subclasses should be able detect that result will be empty without execution.
  
  -isResult: aQueryResult affectedBy: aSystemAnnouncement
  Any query can be affected by system changes. Subclasses should implement what change affects their results.
  
  - retrivesItem: anObject
  Subclasses should check that given item can be retrieved independently on scope.
  
  -collectMetadataOf: aQueryResult by: anEnvironmentPlugin
  Subclasses should dispatch metadata collection to the given environment plugin.
  
  I provide many instance creation methods. For example you can execute any typed query with sorted result:
  
  ClyAllClasses sortedFrom: ClyNavigationEnvironment currentImageScope.
  
  And I provide union query support. Typed queries can be concatinated using command message:
  aClassQuery, aMethodQuery
  
  Look at class side for more options",My subclasses represent queries which retrieve particular kind of objects.,I implement many required methods of superclass.,,"I implement many required methods of superclass.
  The rest is responsibility of subclasses:
  
  - buildResult: aQueryResult
  It is the method where query retrieves items from the scope and fill given result with them. Look at implementors.
  
  - checkEmptyResult
  Subclasses should be able detect that result will be empty without execution.
  
  -isResult: aQueryResult affectedBy: aSystemAnnouncement
  Any query can be affected by system changes. Subclasses should implement what change affects their results.
  
  - retrivesItem: anObject
  Subclasses should check that given item can be retrieved independently on scope.
  
  -collectMetadataOf: aQueryResult by: anEnvironmentPlugin
  Subclasses should dispatch metadata collection to the given environment plugin.","I implement many required methods of superclass.
  The rest is responsibility of subclasses:
  
  - buildResult: aQueryResult
  It is the method where query retrieves items from the scope and fill given result with them. Look at implementors.
  
  - checkEmptyResult
  Subclasses should be able detect that result will be empty without execution.
  
  -isResult: aQueryResult affectedBy: aSystemAnnouncement
  Any query can be affected by system changes. Subclasses should implement what change affects their results.
  
  - retrivesItem: anObject
  Subclasses should check that given item can be retrieved independently on scope.
  
  -collectMetadataOf: aQueryResult by: anEnvironmentPlugin
  Subclasses should dispatch metadata collection to the given environment plugin.
  
  I provide many instance creation methods. For example you can execute any typed query with sorted result:
  
  ClyAllClasses sortedFrom: ClyNavigationEnvironment currentImageScope.
  
  And I provide union query support. Typed queries can be concatinated using command message:
  aClassQuery, aMethodQuery",,,,,,,,,,,,,Subclasses should implement what change affects their results.,,,,,
ManifestRingCoreKernel,Manifest for DEPRECATED package of Ring,Manifest for DEPRECATED package of Ring,,,,,,,,,,,,,,,,,,,,,,
SycInspectVariableCommand,"I am a command to inspect given variable.
  For live variables lile globals or class variables I open inspector on variable value.
  Also I open inspector on instance variable of class side because they also have live values.
  For instance side instance variable I inspect slot definition instance.",I am a command to inspect given variable.,"For live variables lile globals or class variables I open inspector on variable value.
  Also I open inspector on instance variable of class side because they also have live values.
  For instance side instance variable I inspect slot definition instance.",,,,,,,,,,,,,,,,,,,,,
RBAddReturnStatementTransformation,"I am responsible for adding a return statement inside a method. In this implementation, all the return value (including the '^') shall be described.
  
  Usage:
  | transformation |
  transformation := (RBAddReturnStatementTransformation
  return: '^ variable'
  inMethod: #methodBefore
  inClass: #RBAddReturnStatementTransformationTest)
  transform.
  (ChangesBrowser changes: transformation model changes changes) open
  
  Preconditions:
  - the method does not have a return statement
  
  Observations about the transformation:
  - The transformation is straightforward: parse the return value and add the resulting node to the end of the method",,"""I am responsible for adding a return statement inside a method. In this implementation, all the return value (including the '^') shall be described.",,,,,,,,"Usage:
 | transformation |
  transformation := (RBAddReturnStatementTransformation
  return: '^ variable'
  inMethod: #methodBefore
  inClass: #RBAddReturnStatementTransformationTest)
  transform.
  (ChangesBrowser changes: transformation model changes changes) open",,,,,,,,,"Observations about the transformation:
  - The transformation is straightforward: parse the return value and add the resulting node to the end of the method""",Preconditions: - the method does not have a return statement,,,
RFASTTranslator,subclass of Opal that takes links into account,subclass of Opal that takes links into account,,,,,,,,,,,,,,,,,,,,,,
Class,"I add a number of facilities to those in ClassDescription:
  A set of all my subclasses (defined in ClassDescription, but only used here and below)
  A name by which I can be found in a SystemDictionary
  A classPool for class variables shared between this class and its metaclass
  A list of sharedPools which probably should be supplanted by some better mechanism.
  
  My instances describe the representation and behavior of objects. I add more comprehensive programming support facilities to the basic attributes of Behavior and the descriptive facilities of ClassDescription.
  
  The slot 'subclasses' is a redundant structure. It is never used during execution, but is used by the development system to simplify or speed certain operations.",,"I add a number of facilities to those in ClassDescription: A set of all my subclasses (defined in ClassDescription, but only used here and below) A name by which I can be found in a SystemDictionary A classPool for class variables shared between this class and its metaclass A list of sharedPools which probably should be supplanted by some better mechanism.","I add a number of facilities to those in ClassDescription: A set of all my subclasses (defined in ClassDescription, but only used here and below) A name by which I can be found in a SystemDictionary A classPool for class variables shared between this class and its metaclass A list of sharedPools which probably should be supplanted by some better mechanism.
  My instances describe the representation and behavior of objects. I add more comprehensive programming support facilities to the basic attributes of Behavior and the descriptive facilities of ClassDescription.",,"I add a number of facilities to those in ClassDescription:
  A set of all my subclasses (defined in ClassDescription, but only used here and below)
  A name by which I can be found in a SystemDictionary
  A classPool for class variables shared between this class and its metaclass
  A list of sharedPools which probably should be supplanted by some better mechanism.
 
 The slot 'subclasses' is a redundant structure. It is never used during execution, but is used by the development system to simplify or speed certain operations.",,,,,,,,,,,,,,,,,,
SycMessageOriginHack,"I represent class of message implementor for method refactorings.
  Implementing class is required for current method refactorings but it should be removed in future because it should be always message refactoring. For example RBRenameMethodRefactoring renames any selectors in image which is not restrited by any existing method. Probably reason of such restriction was how browser implements rename of methods when user activated it on selected methods.
  Same is valid for add/remove method parameter.
  So now these refactorings check that given class defines given selector which is not needed actually because we modify message.
  I used in place of class for all such refactorings to allow them work on messages","""I represent class of message implementor for method refactorings.","I represent class of message implementor for method refactorings.
  Implementing class is required for current method refactorings but it should be removed in future because it should be always message refactoring.",For example RBRenameMethodRefactoring renames any selectors in image which is not restrited by any existing method.,,"Probably reason of such restriction was how browser implements rename of methods when user activated it on selected methods.
  Same is valid for add/remove method parameter.
  So now these refactorings check that given class defines given selector which is not needed actually because we modify message.
  I used in place of class for all such refactorings to allow them work on messages""",,,,,,,,,,,,,Implementing class is required for current method refactorings but it should be removed in future because it should be always message refactoring.,,,,,
IceBasicProjectReader,"I am a basic project reader that is used by default in case no other project reader was found.
  I create an IceBasicProject in case a .project file is found, or an IceUnbornProject otherwise.",I am a basic project reader that is used by default in case no other project reader was found.,"I create an IceBasicProject in case a .project file is found, or an IceUnbornProject otherwise.","I create an IceBasicProject in case a .project file is found, or an IceUnbornProject otherwise.",,,,,,"I create an IceBasicProject in case a .project file is found, or an IceUnbornProject otherwise.",,,,,,,,,,,,,,
AdditionalMethodStateTest,SUnit tests for AdditionalMethodState,SUnit tests for AdditionalMethodState,SUnit tests for AdditionalMethodState,SUnit tests for AdditionalMethodState,,,,,,SUnit tests for AdditionalMethodState,,,,,,,,,,,,SUnit tests for AdditionalMethodState,,
BalloonEngine,BalloonEngine is the representative for the Balloon engine inside Squeak. For most purposes it should not be used directly but via BalloonCanvas since this ensures proper initialization and is polymorphic with other canvas uses.,BalloonEngine is the representative for the Balloon engine inside Squeak.,this ensures proper initialization and is polymorphic with other canvas uses.,,,,,,,,,,,,,,,,For most purposes it should not be used directly but via BalloonCanvas since this ensures proper initialization and is polymorphic with other canvas uses.,,,,,
GLMOSWindowWorldMorph,"I am an OSWindow world morph that is used by Glamour to display its content in a external OSWindow.
  
  Usage examples:
  
  GTInspector new openInExternalWindowOn: 3.
  
  3 inspectInExternalWindow.",I am an OSWindow world morph that is used by Glamour to display its content in a external OSWindow.,I am an OSWindow world morph that is used by Glamour to display its content in a external OSWindow.,I am an OSWindow world morph that is used by Glamour to display its content in a external OSWindow.,,,,,,I am an OSWindow world morph that is used by Glamour to display its content in a external OSWindow.,"Usage examples:
  
  GTInspector new openInExternalWindowOn: 3.
  
  3 inspectInExternalWindow.",,,,,,,,,,,I am an OSWindow world morph that is used by Glamour to display its content in a external OSWindow.,,
AnimationSettings,Animation settings,Animation settings,,,,,,,,,,,,,,,,,,,,,,
FTExampleMethodTableDataSource,"I'm an example of fast table, who will use a list of methods as data source elements.
  
  self example1.
  self example2.","I'm an example of fast table, who will use a list of methods as data source elements.",,"I'm an example of fast table, who will use a list of methods as data source elements.",,,,,,,"self example1.
  self example2.",,,,,,,,,,,,,
ClyExplicitAbstractClassExample,I am example of a class which is explicitly definined as abstract by overrideing class side method #isAbstract,I am example of a class which is explicitly definined as abstract by overrideing class side method #isAbstract,,,I am example of a class which is explicitly definined as abstract by overrideing class side method #isAbstract,,,,,,I am example of a class which is explicitly definined as abstract by overrideing class side method #isAbstract,,,,,,,,,,,,,
IceGitHubBranchSelectCommand,This command represent the commands with submenus to select remotes,This command represent the commands,with submenus to select remotes,,,,,,,,,,,,,,,,,,,,,
RBPharoBootstrapRule,I check that packages constituing the Pharo Bootstrap do not depend on any other package.,,I check that packages constituing the Pharo Bootstrap do not depend on any other package.,I check that packages constituing the Pharo Bootstrap do not depend on any other package.,,,,,,,,,,,,,,,,,,,,
RbScriptingSetBeforeModel,You have to call scripting methods after #model: or it will not work,,,,You have to call scripting methods after #model,,,,,,You have to call scripting methods after #model: or it will not work,,,,,,,,,,,,,
ProcessList,"I am a VM Special class! Do not break me!
  
  I am a linked list that contains processes as Nodes. My implementation is tied to the VM:
  - every node I contain should have as first instance variable the next node in the list.
  
  My main user is ProcessScheduler, which contains an array with instances of myself. Each entry in that array a priority for processes. Processes are queues in each process list by the VM automatically.",I am a VM Special class! I am a linked list that contains processes as Nodes,I am a linked list that contains processes as Nodes,"My main user is ProcessScheduler, which contains an array with instances of myself.",,My implementation is tied to the VM: - every node I contain should have as first instance variable the next node in the list.,,"My main user is ProcessScheduler, which contains an array with instances of myself. Each entry in that array a priority for processes. Processes are queues in each process list by the VM automatically.",,,,,,,"Do not break me!
 every node I contain should have as first instance variable the next node in the list.",,,,,,,,,
IdentityTransform,Identity transformation,Identity transformation,,,,,,,,,,,,,,,,,,,,,,
ClyClassSideBoldTableDecorator,I decorate table with bold font for method groups and methods when full browser shows the class side,,I decorate table with bold font,for method groups and methods,,,,,,,,,,,,,,,,,when full browser shows the class side,,,
FFICallbackReturnValue,"Obsolete support for old-style callbacks. An instance of FFICallbackReturnValue specifies a return value to be passed to a callback callee. It is intended to have overlaid the following struct:
  /*
  * Returning values from callbacks is done through a CallBackReturnSpec
  * which contains a type tag and values. It is designed to be overlaid upon
  * an FFICallbackReturnProxy created at the Smalltalk level to return values.
  */
  typedef struct {
  long type;
  # define retint32 0
  # define retint64 1
  # define retdouble 2
  # define retstruct 3
  long _pad; /* so no doubt that valflt64 & valint32 et al are at byte 8 */
  union {
  long valint32;
  struct { long low, high; } valint64;
  double valflt64;
  struct { void *addr; long size; } valstruct;
  } rvs;
  } CallBackReturnSpec;",Obsolete support for old-style callbacks.,An instance of FFICallbackReturnValue specifies a return value to be passed to a callback callee. It is intended to have overlaid the following struct:,,,,,,,,"typedef struct {
  long type;
 # define retint32 0 
 # define retint64 1
 # define retdouble 2
 # define retstruct 3
  long _pad; /* so no doubt that valflt64 & valint32 et al are at byte 8 */
  union {
  long valint32;
  struct { long low, high; } valint64;
  double valflt64;
  struct { void *addr; long size; } valstruct;
  } rvs;
 } CallBackReturnSpec;",,,,,,,,,,,,,"/*
  * Returning values from callbacks is done through a CallBackReturnSpec
  * which contains a type tag and values. It is designed to be overlaid upon
  * an FFICallbackReturnProxy created at the Smalltalk level to return values.
  */"
FTAllItemsStrategy,"I am a Strategy that will use the function on all the tree.
  BE CAREFUL, do NOT use me if you are not sur that your tree is finish. If a branch is infinite I will go in an infinite loop.
  If you are sure about it, use this otherwise use other search strategies.
  
  Description
  -----------------------
  
  I will search in every item of the tree and I needed I will expand the items to show the results of the function.
  As said in my superclass I am use by a FTTreeDataSource to help with a FTFunction.
  
  Public API and Key Messages
  -----------------------
  
  - #realSearch is the method that will launch the search.
  
  Example
  -----------------------
  
  | ds |
  ds := FTTreeDataSource
  roots:
  ((ProtoObject allSubclasses sort: [ :a :b | a asString < b asString ])
  reject: [ :e | e asString endsWith: 'class' ])
  children: [ :item | item subclasses sort: [ :a :b | a asString < b asString ] ].
  ds searchStrategy: #allItems. ""This will say to the FTTreeDataSource to use me.""
  FTTableMorph new
  extent: 200 @ 400;
  dataSource: ds;
  explicitFunction;
  openInWindow
  
  Internal Representation and Key Implementation Points.
  -----------------------
  
  Instance Variables
  index: I am the index of tfe elements I am testing now.
  result: I am a collection of index that is the result of the search.",I am a Strategy that will use the function on all the tree.,"Description
  -----------------------
  
  I will search in every item of the tree and I needed I will expand the items to show the results of the function.",As said in my superclass I am use by a FTTreeDataSource to help with a FTFunction.,"Public API and Key Messages
  -----------------------
  
  - #realSearch is the method that will launch the search.",,"Internal Representation and Key Implementation Points.
  -----------------------
  
  Instance Variables
  index: I am the index of tfe elements I am testing now.
  result: I am a collection of index that is the result of the search.",,,,"Example
  -----------------------
  
  | ds |
  ds := FTTreeDataSource
  roots:
  ((ProtoObject allSubclasses sort: [ :a :b | a asString < b asString ])
  reject: [ :e | e asString endsWith: 'class' ])
  children: [ :item | item subclasses sort: [ :a :b | a asString < b asString ] ].
  ds searchStrategy: #allItems. ""This will say to the FTTreeDataSource to use me.""
  FTTableMorph new
  extent: 200 @ 400;
  dataSource: ds;
  explicitFunction;
  openInWindow",,,,"BE CAREFUL, do NOT use me if you are not sur that your tree is finish. If a branch is infinite I will go in an infinite loop.
  If you are sure about it, use this otherwise use other search strategies.",,,,,,,,,
ClySugsMethodContext,I provide compatibility of ClyMethodEditor with suggestions menu,,I provide compatibility of ClyMethodEditor with suggestions menu,I provide compatibility of ClyMethodEditor with suggestions menu,,,,,,,,,,,,,,,,,,,,
IceTipAbstractCredentialCommand,I am the common class of all the commands over an specific credential.,I am the common class of all the commands over an specific credential.,,,,,,,,,,,,,,,,,,,,,,
FLTraitSerializationTest,I have the common behavior for testing trait serialization.,I have the common behavior for testing trait serialization.,I have the common behavior for testing trait serialization.,,,,,,,,,,,,,,,,,,,,,
ClyItemCellMorph,"I represent simple label based cell in QueryView table.
  You can decorate this lable using special color or font styles:
  cellMorph label emphasis: TextEmphasis italic emphasisCode.
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  label: <Morph>",I represent simple label based cell in QueryView table.,,I represent simple label based cell in QueryView table.,,,"Internal Representation and Key Implementation Points.
  
  Instance Variables
  label: <Morph>",,,I represent simple label based cell in QueryView table.,"You can decorate this lable using special color or font styles:
  cellMorph label emphasis: TextEmphasis italic emphasisCode.",,,,,,,,,,,,,
SycMoveMethodsToPackageCommand,"I am a command to move method to another package.
  
  I am used to convert method to extension.
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  package: <RPackage>",I am a command to move method to another package.,I am used to convert method to extension.,,,,"Instance Variables
  package: <RPackage>",,,,,,,,,,,,,,,,,
IRMethod,I am a method in the IR (intermediate representation) language consisting of IRInstructions grouped by IRSequence (basic block). The IRSequences form a control graph (therefore I only have to hold onto the starting sequence). #compiledMethod will convert me to a CompiledMethod. #methodNode will convert me back to a parse tree.,I am a method in the IR (intermediate representation) language consisting of IRInstructions grouped by IRSequence (basic block).,The IRSequences form a control graph (therefore I only have to hold onto the starting sequence). #compiledMethod will convert me to a CompiledMethod. #methodNode will convert me back to a parse tree.,,#compiledMethod will convert me to a CompiledMethod. #methodNode will convert me back to a parse tree.,,,,,I am a method in the IR (intermediate representation) language consisting of IRInstructions grouped by IRSequence (basic block).,,,,,,,,,,,,,,
RBMoveClassTransformation,"Moves a class to a new category or package
  
  Usage:
  | transformation |
  transformation := (RBMoveClassTransformation
  move: #RBMoveClassTransformation
  to: #'Refactoring2-Refactorings-Tests')
  transform.
  (ChangesBrowser changes: transformation model changes changes) open
  
  Preconditions:
  - the class must exist
  - the category or package must exist",Moves a class to a new category or package,,,,,,,,,"| transformation |
 transformation := (RBMoveClassTransformation
  move: #RBMoveClassTransformation
  to: #'Refactoring2-Refactorings-Tests')
  transform.
 (ChangesBrowser changes: transformation model changes changes) open",,,,,,,,,,"Preconditions:
 - the class must exist
 - the category or package must exist",,,
MorphTreeColumn,A column in a morphic based tree,A column in a morphic based tree,,A column in a morphic based tree,,,,,,,,,,,,,,,,,,,,
HEExtendedEnvironment,"I wrap the target environment.
  I provide access to all the elements in the environment and also to:
  
  - The class being deserialized
  - The method being deserialized
  - The selector of the method being deserialized.","""I wrap the target environment.","I provide access to all the elements in the environment and also to:
  
  - The class being deserialized
  - The method being deserialized
  - The selector of the method being deserialized.""",,,,,,,,,,,,,,,,,,,,,
FinderPragmaMethodNode,"A FinderPragmaMethodNode is a method node for a selector name found by the pragma collector. Unlike a FinderMethod node, this node is not bound to unique compiled method, it is just the selector.",A FinderPragmaMethodNode is a method node for a selector name found by the pragma collector.,A FinderPragmaMethodNode is a method node for a selector name found by the pragma collector.,"Unlike a FinderMethod node, this node is not bound to unique compiled method, it is just the selector.",,"Unlike a FinderMethod node, this node is not bound to unique compiled method, it is just the selector.",,,,"Unlike a FinderMethod node, this node is not bound to unique compiled method, it is just the selector.",,,,,,,,,,,,,,
SycMethodCommand,"I am a base class for commands which perform operations with collection of methods.
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  methods: <Colletion of<CompiledMethod>>",I am a base class for commands which perform operations with collection of methods.,I am a base class for commands which perform operations with collection of methods.,,,,"Instance Variables
  methods: <Colletion of<CompiledMethod>>",,,,,,,,,,,,,,,,,
ProportionalLayout,I represent a layout that places all children of some morph in their given LayoutFrame.,I represent a layout that places all children of some morph in their given LayoutFrame.,I represent a layout that places all children of some morph in their given LayoutFrame.,I represent a layout that places all children of some morph in their given LayoutFrame.,,,,,,I represent a layout that places all children of some morph in their given LayoutFrame.,,,,,,,,,,,,,,
RBRemoveParameterRefactoring,"I am a refactoring for removing (unused) arguments.
  
  My preconditions verify that the argument to be removed is not referenced by the methods and that the new method name isn't alread used.
  Any sender of the prior selector will be changed to the new.
  
  If the method contains more than one argument, I request the user to choose one of the arguments.",I am a refactoring for removing (unused) arguments.,,,,"My preconditions verify that the argument to be removed is not referenced by the methods and that the new method name isn't alread used.
 
 If the method contains more than one argument, I request the user to choose one of the arguments.",,,,,,,,,Any sender of the prior selector will be changed to the new.,,,,,,,,,
ListPresenter,"A ListPresenter is an applicative presenter which handle a basic list.
  See AbstractWidgetPresenter
  
  self example
  self example2
  self example3
  
  You can also have a look at ExampleListPresenter >> exampleRegisteredColor and ListSelectionPresenter for more examples.
  
  I provide the following variables and their accessors
  - backgroundColorBlock should convert an item in the color in the background in the line of this item.
  - displayBlock should convert an item in something that can be displayed in a list, use asStringOrText by default.
  - filteringBlock should convert an item in a boolean representing if the item will be displayed, initialize with self defaultFilteringBlock.
  - multiSelection is a boolean representing if several items can be selected in the same time, it have shortcut beMultipleSelection and beSingleSelection.
  - sortingBlock should convert two items in a boolean representing if the first item must be place before the second, initialize with self defaultSortingBlock.
  
  Blocks should be set before items.
  
  I provide the following methods
  - items: to set the list with the elements of the collection in parameter
  - getIndex is the getter of the index of the selected item or the last selected item.
  - getList is the getter of the list.
  - listSize is the number of items.
  
  
  todo
  - allowToSelect
  - autoDeselect
  - menu
  - listItems
  - clickOnSelectedItem
  - getSelectionStateFor:
  - listElementAt:ifAbsent:
  - refresh ...
  - select ... , setSelected ...
  - updateList",A ListPresenter is an applicative presenter which handle a basic list.,,You can also have a look at ExampleListPresenter >> exampleRegisteredColor and ListSelectionPresenter for more examples.,"- items: to set the list with the elements of the collection in parameter
 - getIndex is the getter of the index of the selected item or the last selected item.
 - getList is the getter of the list.
 - listSize is the number of items.",,"- backgroundColorBlock should convert an item in the color in the background in the line of this item.
 - displayBlock should convert an item in something that can be displayed in a list, use asStringOrText by default.
 - filteringBlock should convert an item in a boolean representing if the item will be displayed, initialize with self defaultFilteringBlock.
 - multiSelection is a boolean representing if several items can be selected in the same time, it have shortcut beMultipleSelection and beSingleSelection.
 - sortingBlock should convert two items in a boolean representing if the first item must be place before the second, initialize with self defaultSortingBlock.","See AbstractWidgetPresenter.
  
 You can also have a look at ExampleListPresenter >> exampleRegisteredColor and ListSelectionPresenter for more examples.",,,,"todo
 - allowToSelect
 - autoDeselect
 - menu
 - listItems
 - clickOnSelectedItem
 - getSelectionStateFor:
 - listElementAt:ifAbsent:
 - refresh ...
 - select ... , setSelected ...
 - updateList",,,Blocks should be set before items.,,,,,,,,,
HECharacter,"I represent a character.
  I serialize myself as a String of a single character.
  When I am readed back I just read the first character of the value.
  My value is always a String",I represent a character.,I serialize myself as a String of a single character.,,,,,,,I serialize myself as a String of a single character.,,,,,"When I am readed back I just read the first character of the value.
 My value is always a String",,,,,,,,,
EpMethodRemoval,I represent a removal of a method in a class or a trait.,I represent a removal of a method in a class or a trait.,,,,,,,,,,,,,,,,,,,,,,
Notification,"A Notification is an indication that something interesting has occurred. If it is not handled, it will pass by without effect.","A Notification is an indication that something interesting has occurred. If it is not handled, it will pass by without effect.",,,,,,,,,,,,,"A Notification is an indication that something interesting has occurred. If it is not handled, it will pass by without effect.",,,,,,,,,
RubPrimarySelectionUpdatedInModel,I am raised when the selection changes in the model side,,,,,,,,,,,,,,,,,,,,I am raised when the selection changes in the model side,,,
RBPackageEnvironment,"I am a RBBrowserEnvironment on a set of packages or package names.
  I containt all entities are defined in this packages.
  (classes and class that have extensions from this packages)
  
  Example:
  (RBBrowserEnvironment new) forPackageNames:{ 'Morphic-Base'}.","""I am a RBBrowserEnvironment on a set of packages or package names.","I containt all entities are defined in this packages.
  (classes and class that have extensions from this packages)",,,,,,,"""I am a RBBrowserEnvironment on a set of packages or package names.","Example:
  (RBBrowserEnvironment new) forPackageNames:{ 'Morphic-Base'}.""",,,,,,,,,,,,,
HelpBrowserTest,SUnit tests for the help browser,SUnit tests for the help browser,SUnit tests for the help browser,,,,,,,,,,,,,,,,,,,SUnit tests for the help browser,,
FBDLoopScanner,"I scan compiled method to detect loops. I answer an array or the size of the compiled method I scanned, which holds a FBDLoop at the pc where a loop starts and nil for any other pc. The FBDLoop describes the loop.
  
  instructionStream <InstructionStream> allows me to decode the method's bytecode
  branchTargets <Array of (Smi | nil)> at any pc where a conditional jump goes, I put an annotation in this array. This is used to know if a loop is conditional or unconditional.
  loops <Array of (FBDLoop | nil)> array answered by the scanner. it holds a FBDLoop at the pc where a loop starts and nil for any other pc.
  currentPC <Smi> by opposition to self pc which holds the pc just *after* the instruction being decoded, currentPC holds the pc of the instruction being decoded. This is useful as you can't read the bytecode backward due to multiple bytecodes instructions.",,"I scan compiled method to detect loops.I answer an array or the size of the compiled method I scanned, which holds a FBDLoop at the pc where a loop starts and nil for any other pc. The FBDLoop describes the loop.",,,it would just #new.,"instructionStream <InstructionStream> allows me to decode the method's bytecode
 branchTargets <Array of (Smi | nil)> at any pc where a conditional jump goes, I put an annotation in this array. This is used to know if a loop is conditional or unconditional.
 loops <Array of (FBDLoop | nil)> array answered by the scanner. it holds a FBDLoop at the pc where a loop starts and nil for any other pc.
 currentPC <Smi> by opposition to self pc which holds the pc just *after* the instruction being decoded, currentPC holds the pc of the instruction being decoded. This is useful as you can't read the bytecode backward due to multiple bytecodes instructions.",,,,,,,,,,,,,,,,,
AndreasSystemProfilerTest,SUnit tests for AndreasSystemProfiler,SUnit tests for AndreasSystemProfiler,,for AndreasSystemProfiler,,,,,,,,,,,,,,,,,,,,
ClassTagAdded,I am announced when new class tag is added into package,,I am announced when new class tag is added into package,,,,,,,,,,,,,,,,,,I am announced when new class tag is added into package,,,
MethodAdded,"This announcement is emited when we add a method to a class or a trait using:
  => Behavior >> compile: or TraitBehavior >> compile:",,,This announcement is emited when we add a method to a class or a trait using:,,,,,,,:=> Behavior >> compile: or TraitBehavior >> compile:,,,,,,,,,,This announcement is emited when we add a method to a class or a trait using:,,,
TOccurrencesTest,A trait for test purposes,A trait for test purposes,A trait for test purposes,,,,,,,,,,,,,,,,,,,,,
TraitedClass,"I contain the methods that are included in a TraitedClass.
  The Traits are also TraitedClass, as they share the same behavior.
  These methods override the implementation in Class
  I am added during the creation of the class, if the superclass does not have them.
  
  Check
  
  TraitedMetaclass >> #initializeBasicMethods
  
  This method is invoked during the construction of the class, and flattens my methods in the new traited class.",,I contain the methods that are included in a TraitedClass.,These methods override the implementation in Class,,"Check
  
  TraitedMetaclass >> #initializeBasicMethods
  
  This method is invoked during the construction of the class, and flattens my methods in the new traited class.",,,"The Traits are also TraitedClass, as they share the same behavior.",,TraitedMetaclass >> #initializeBasicMethods,,,,"Check
 TraitedMetaclass >> #initializeBasicMethods",,,,,,,,,
EpBehaviorChange,I represent a change in a class or a trait.,I represent a change in a class or a trait.,,,,,,,,,,,,,,,,,,,,,,
FloatingPointException,"I am FloatingPointException, an ArithmeticError indicating a problem in a floating point calculation.
  
  Precision underflow or overflow could be considered FloatingPointExceptions.
  
  ZeroDivide, DomainError and NaNException are examples of more specific ArithmeticErrors that can be signaled before an operation is actually attempted.","I am FloatingPointException, an ArithmeticError indicating a problem in a floating point calculation.",,,,,,,,,"ZeroDivide, DomainError and NaNException are examples of more specific ArithmeticErrors that can be signaled before an operation is actually attempted.",,,,,,,,,,,,,
PermaLink,"I specify a kind of persistence for links to be put on a slot, a temporary variable or a class variable.
  
  I can be of kind:
  - #read only read nodes
  - #write only assignment nodes
  - #all both
  
  I know the class of the slot/var the link will be put on. I also know my link, although several versions of me can exist for the same link, but with different targets (slots/var).
  
  The isInstanceSpecific inst var seems to be needed to keep track that the metalink is installed on an object, because this information is lost after the link is installed through the API. It could be done better perhaps.",,"I know the class of the slot/var the link will be put on. I also know my link, although several versions of me can exist for the same link, but with different targets (slots/var).",,,"I can be of kind:
  - #read only read nodes
  - #write only assignment nodes
  - #all both","The isInstanceSpecific inst var seems to be needed to keep track that the metalink is installed on an object, because this information is lost after the link is installed through the API.",,,,,,,,,It could be done better perhaps.,,,,,,,,
ClyClassWithFlags,I am example class which has methods with flag,I am example class which has methods with flag,,,,,,,,,,,,,,,,,,,,,,
TAddForUniquenessTest,A trait for test purposes,A trait for test purposes,for test purposes,,,,,,,,,,,,,,,,,,,,,
AthensSurface,"I representing a surface, where all drawing operations will happen.
  
  I also having a number of factory methods to create paints, paths and other objects involved in drawing.
  
  AthensSurface is an abstract, while subclasses implement a specific kind of surface for one or another backend.
  
  The primary role of AthensSurface class is to define a public protocol for all Athens surfaces, which can be used by applications which using Athens framework.
  
  To get a new surface, use:
  
  <one of my subclasses> extent: x@y
  
  for surfaces which don't need to have dimensions specified,
  it would just #new.","I representing a surface, where all drawing operations will happen.","I also having a number of factory methods to create paints, paths and other objects involved in drawing.",,,"for surfaces which don't need to have dimensions specified,",,,,,<one of my subclasses> extent: x@y,,,,,,,,,,,,,
SDL_Version,A structure that contains information about the version of SDL in use.,A structure,that contains information about the version of SDL in use.,,,,,,,,,,,,,,,,,,,,,
ReEntityCriticized,I am an event of an entity being criticized by the rules. Happens when #critics is called,I am an event of an entity being criticized by the rules.,,,,,,,,,,,,,,,,,,,Happens when #critics is called,,,
FindReplaceService,Model for a find and replace service in editors,Model for a find and replace service in editors,,,,,,,,,,,,,,,,,,,,,,
ReSourceAnchor,"A source anchor has a refference to the actual class, method, or other entity that is criticized. An anchor also has a #providesInterval method that returns a boolean indicating if the anchor provides a selection interval to the actual source of the critique. The interval can be accessed through the #interval method",,"A source anchor has a refference to the actual class, method, or other entity that is criticized.","A source anchor has a refference to the actual class, method, or other entity that is criticized.
 An anchor also has a #providesInterval method that returns a boolean indicating if the anchor provides a selection interval to the actual source of the critique. The interval can be accessed through the #interval method",An anchor also has a #providesInterval method that returns a boolean indicating if the anchor provides a selection interval to the actual source of the critique. The interval can be accessed through the #interval method,,,,,,,,,,,,,,,,,,,
SortFunctionTest,Unit test for sort functions,Unit test for sort functions,Unit test for sort functions,,,,,,,,,,,,,,,,,,,,,
PreorderGuideTest,SUnit tests for class PreorderGuide,SUnit tests for class PreorderGuide,,,,,,,,SUnit tests for class PreorderGuide,,,,,,,,,,,,SUnit tests for class PreorderGuide,,
FTOutline,I am the FT_Outline mapping.,I am the FT_Outline mapping.,,,,,,,,,,,,,,,,,,,,,,
MCMockAPoolDictionary,Mocking a pool,,Mocking a pool,,,,,,,,,,,,,,,,,,,,,
ClyAllClassGroupsQuery,"I am a query of all class groups from given scope.
  
  Scope should support #classGroupsDo:.
  Currently it is only ClyPackageScope.
  
  The scope delegates class group building to the environment plugins.
  It asks each plugin to collect class group providers using:
  
  plugin collectClassGroupProviders
  
  And then each provider creates set of class groups using method:
  
  groupProvider classGroupsIn: aPackageScope do: aBlockWithGroup
  
  Look at ClyClassGroupProvider for details",I am a query of all class groups from given scope.,,,,The scope delegates class group building to the environment plugins. It asks each plugin to collect class group providers using: plugin collectClassGroupProviders And then each provider creates set of class groups using method: groupProvider classGroupsIn: aPackageScope do: aBlockWithGroup,,Look at ClyClassGroupProvider for details,,"Look at ClyClassGroupProvider for details
 
 Currently it is only ClyPackageScope.",,,,,Scope should support #classGroupsDo:. Currently it is only ClyPackageScope.,,,,,,,,,
IceNothingToCommit,I indicate when there is nothing to commit (and you tried to do it),,I indicate when there is nothing to commit (and you tried to do it),,,,,,,,,,,,,and you tried to do it,,,,,I indicate when there is nothing to commit (and you tried to do it),,,
RBAddPoolVariableChange,I am a refactoring for a pool variable addition. My changes are executed on the instance side.,I am a refactoring for a pool variable addition.,,,,My changes are executed on the instance side.,,,,,,,,,,,,,,,,,,
NECVarTypeGuesser,I'm an InstructionClient that tries to guess the type of a given instance variable name of a class.,I'm an InstructionClient,tries to guess the type of a given instance variable name of a class.,,,,,,,,,,,,,,,,,,,,,
GLMAnnouncer,This is a specialization of the Announcer. The main added functionality is the ability to suspend the announcements from this announcer.,This is a specialization of the Announcer.,The main added functionality is the ability to suspend the announcements from this announcer.,,,,,,,,,,,,,,,,,,,,,
LayoutFrame,"I define a transformation frame relative to some rectangle. I'm basic data structure used for graphics.
  
  Do not use fractions: fractionsOrNil offsets: offsetsOrNil or frations: fractionsOrNil if you do not have already the rectangles that should be passed as arguments.
  
  If you are creating the rectangles representing the numbers you need, better use the accessors. For example like this.
  
  (LayoutFrame identity
  topOffset: topHeight;
  bottomFraction: 0;
  bottomOffset: self buttonsBarHeight;
  leftOffset: -1;
  rightOffset: 1)
  
  
  
  
  
  
  Instance variables:
  leftFraction
  topFraction
  rightFraction
  bottomFraction <Float> The fractional distance (between 0 and 1) to place the morph in its owner's bounds
  leftOffset
  topOffset
  rightOffset
  bottomOffset <Integer> Fixed pixel offset to apply after fractional positioning (e.g., ""10 pixel right of the center of the owner"")",I'm basic data structure used for graphics.,I define a transformation frame relative to some rectangle.,,,,"Instance variables:
 leftFraction 
 topFraction 
 rightFraction 
 bottomFraction <Float> The fractional distance (between 0 and 1) to place the morph in its owner's bounds
 leftOffset 
 topOffset 
 rightOffset 
 bottomOffset <Integer> Fixed pixel offset to apply after fractional positioning (e.g., ""10 pixel right of the center of the owner"")",,,,"(LayoutFrame identity
 topOffset: topHeight;
 bottomFraction: 0;
 bottomOffset: self buttonsBarHeight;
 leftOffset: -1;
 rightOffset: 1)",,,,Do not use fractions: fractionsOrNil offsets: offsetsOrNil or frations: fractionsOrNil if you do not have already the rectangles that should be passed as arguments.,,,,"If you are creating the rectangles representing the numbers you need, better use the accessors",,,,,
IceGitHubPullRequestDataSource,"I'm a datasource for pull request status, to be used when showing pull requests details.
  
  See IceGitHubPullRequestDetailModel","I'm a datasource for pull request status, to be used when showing pull requests details.","I'm a datasource for pull request status, to be used when showing pull requests details.",,,,,See IceGitHubPullRequestDetailModel,,See IceGitHubPullRequestDetailModel,,,,,,,,,See IceGitHubPullRequestDetailModel,,,,,
FFIExternalStructurePlatformTests,Tests for external structures on platform,Tests for external structures on platform,Tests for external structures on platform,Tests for external structures on platform,,,,,,,,,,,,,,,,,,,,
Point,"I represent an x-y pair of numbers usually designating a location on the screen.
  
  My instances are created either using the message @ or x:y: or r:degrees: as follows:
  
  [[[
  | pt |
  pt := 10@20.
  pt x
  > 10
  pt y
  > 20
  ]]]
  
  [[[
  | pt |
  pt := Point x: 10 y: 20.
  pt x
  > 10
  pt y
  > 20
  ]]]
  
  I define many nice messages that deal with point such as:
  - arithmetic such as +, *, reciprocal, min, abs,
  - comparison <, <=, =, >, >=, closeTo:
  - geometry such as sideOf:, to:intersects:to:,
  - polar coordinates,
  - extent such as scaleTo:
  - transformation such as negated, translatedBy:, scaleBy:
  - rounding with roundTo:, roundUpTo:, truncateTo:, truncated","""I represent an x-y pair of numbers usually designating a location on the screen.","]]]
  
  I define many nice messages that deal with point such as:
  - arithmetic such as +, *, reciprocal, min, abs,
  - comparison <, <=, =, >, >=, closeTo:
  - geometry such as sideOf:, to:intersects:to:,
  - polar coordinates,
  - extent such as scaleTo:
  - transformation such as negated, translatedBy:, scaleBy:
  - rounding with roundTo:, roundUpTo:, truncateTo:, truncated""",,"- arithmetic such as +, *, reciprocal, min, abs,
  - comparison <, <=, =, >, >=, closeTo:
  - geometry such as sideOf:, to:intersects:to:,
  - polar coordinates,
  - extent such as scaleTo:
  - transformation such as negated, translatedBy:, scaleBy:
  - rounding with roundTo:, roundUpTo:, truncateTo:, truncated",,,,,,My instances are created either using the message @ or x:y: or r:degrees: as follows: [[[ | pt | pt := 10@20. pt x > 10 pt y > 20 ]]] [[[ | pt | pt := Point x: 10 y: 20. pt x > 10 pt y > 20,,,,,,,,,,,,,
TreeNodeModel,This is deprecated class because the original class TreeNodeModel was renamed to TreeNodePresenter. You should stop to use this class and modify your code to use TreeNodePresenter.,,,,,,,,,,,,,This is deprecated class because the original class TreeNodeModel was renamed to TreeNodePresenter. You should stop to use this class and modify your code to use TreeNodePresenter.,You should stop to use this class and modify your code to use TreeNodePresenter.,,,,,This is deprecated class because the original class TreeNodeModel was renamed to TreeNodePresenter. You should stop to use this class and modify your code to use TreeNodePresenter.,,,,
RBRefersToClassRule,"This smell arises when a class has its class name directly in the source instead of ""self class"" (or just ""self"" when on the class side). The self class / self variant allows you to create subclasses without needing to redefine that method.
  However we cannot systematically replace Class reference by self class or self because a Class reference is static and a self expression is dynamic. So the programmer may want to send messages to root of an hierarchy and not to the leaf classes. Therefore this rule generates false positives, please double check when fixing!","This smell arises when a class has its class name directly in the source instead of ""self class"" (or just ""self"" when on the class side).",The self class / self variant allows you to create subclasses without needing to redefine that method.,,,"However we cannot systematically replace Class reference by self class or self because a Class reference is static and a self expression is dynamic. So the programmer may want to send messages to root of an hierarchy and not to the leaf classes. Therefore this rule generates false positives, please double check when fixing!",,,,,,,,,,,,,,,,,,
FBDASTBuilder,"I am used to create AST nodes. This class is reserved for the RBAST.
  
  methodClass <Behavior> behavior where the compiled method is installed.","""I am used to create AST nodes.","methodClass <Behavior> behavior where the compiled method is installed.""","""
  
  methodClass <Behavior> behavior where the compiled method is installed.This class is reserved for the RBAST.",,,,,,,,,,,,,,,,,,,,
DateAndTimeTest,SUnit tests for date and time,SUnit tests,,for date and time,,,,,,,,,,,,,,,,,,,,
FastTablePresenter,An FastTablePresenter is a spec presenter for a FastTable,An FastTablePresenter is a spec presenter for a FastTable,,An FastTablePresenter is a spec presenter for a FastTable,,,,,,An FastTablePresenter is a spec presenter for a FastTable,,,,,,,,,,,,,,
RBMetaclass2,"I represent the class side of a class in a refactoring namespace.
  
  I shouldn't be created directly, but always be part of a refactoring namespace.
  My namespace usally knows me and my non meta class.",I represent the class side of a class in a refactoring namespace.,,"I represent the class side of a class in a refactoring namespace.
  My namespace usally knows me and my non meta class.",,,,,,,,,,,"I shouldn't be created directly, but always be part of a refactoring namespace.",,,,,,,,,
FIFOQueueTests,SUnit tests for FIFO queues,SUnit tests,,for FIFO queues,,,,,,,,,,,,,,,,,,SUnit tests for FIFO queues,,
GLMDropDownListPresentation,"A GLMDropDownListPresentation is takes a list of objects and displays them in a drop down view.
  
  For an example see GLMBasicExamples>>#dropDownList",,A GLMDropDownListPresentation is takes a list of objects and displays them in a drop down view.,,,,,,,For an example see GLMBasicExamples>>#dropDownList,For an example see GLMBasicExamples>>#dropDownList,,,,,,,,,,,,,
RBDefineBasicCheckRule,"Each rule should define a #basicCheck: method which accepts an entity to be validated by the rule.
  
  If the entity violates the rule, method should ruturn ""true"", otherwise - ""false"".
  
  It is recommended to reuse #basicCheck: functionality in #checkClass: and #checkMethod:",,"""Each rule should define a #basicCheck: method which accepts an entity to be validated by the rule.
  
  If the entity violates the rule, method should ruturn """"true"""", otherwise - """"false"""".",,"""Each rule should define a #basicCheck: method which accepts an entity to be validated by the rule.","If the entity violates the rule, method should ruturn ""true"", otherwise - ""false"".
  
  It is recommended to reuse #basicCheck: functionality in #checkClass: and #checkMethod:",,,,,,,,,,,,,It is recommended to reuse #basicCheck: functionality in #checkClass: and #checkMethod:,,,,,
FT2BitmapSize,"""Do not rearrange these fields!
 
 This structure models the size of a bitmap strike (i.e., a bitmap
 instance of the font for a given resolution) in a fixed-size font
 face. It is used for the `availableSizes' field of the
 FT2Face structure.
 
 <Fields>
 height :: The (vertical) baseline-to-baseline distance in pixels.
 It makes most sense to define the height of a bitmap
 font in this way.
 
 width :: The average width of the font (in pixels). Since the
 algorithms to compute this value are different for the
 various bitmap formats, it can only give an additional
 hint if the `height' value isn't sufficient to select
 the proper font. For monospaced fonts the average width
 is the same as the maximum width.
 
 size :: The point size in 26.6 fractional format this font shall
 represent (for a given vertical resolution).
 
 x_ppem :: The horizontal ppem value (in 26.6 fractional format).
 
 y_ppem :: The vertical ppem value (in 26.6 fractional format).
 Usually, this is the `nominal' pixel height of the font.
 
 <Note>
 The values in this structure are taken from the bitmap font. If
 the font doesn't provide a parameter it is set to zero to indicate
 that the information is not available.
 
 The following formula converts from dpi to ppem:
 
 ppem = size * dpi / 72
 
 where `size' is in points.
 
 Windows FNT:
 The `size' parameter is not reliable: There exist fonts (e.g.,
 app850.fon) which have a wrong size for some subfonts; x_ppem
 and y_ppem are thus set equal to pixel width and height given in
 in the Windows FNT header.
 
 TrueType embedded bitmaps:
 `size', `width', and `height' values are not contained in the
 bitmap strike itself. They are computed from the global font
 parameters.
 ""","This structure models the size of a bitmap strike (i.e., a bitmap
  instance of the font for a given resolution) in a fixed-size font
  face. It is used for the `availableSizes' field of the
  FT2Face structure.","This structure models the size of a bitmap strike (i.e., a bitmap
  instance of the font for a given resolution) in a fixed-size font
  face. It is used for the `availableSizes' field of the
  FT2Face structure.",,,"The following formula converts from dpi to ppem:
 
 ppem = size * dpi / 72
 
 where `size' is in points.
  
 Windows FNT:
 The `size' parameter is not reliable: There exist fonts (e.g.,
 app850.fon) which have a wrong size for some subfonts; x_ppem
 and y_ppem are thus set equal to pixel width and height given in
 in the Windows FNT header.","<Fields>
 height :: The (vertical) baseline-to-baseline distance in pixels.
 It makes most sense to define the height of a bitmap
 font in this way.
 
 width :: The average width of the font (in pixels). Since the
 algorithms to compute this value are different for the
 various bitmap formats, it can only give an additional
 hint if the `height' value isn't sufficient to select
 the proper font. For monospaced fonts the average width
 is the same as the maximum width.
 
 size :: The point size in 26.6 fractional format this font shall
 represent (for a given vertical resolution).
 
 x_ppem :: The horizontal ppem value (in 26.6 fractional format).
 
 y_ppem :: The vertical ppem value (in 26.6 fractional format).
 Usually, this is the `nominal' pixel height of the font.",,,,,,,,"""Do not rearrange these fields!
  
 <Note>
 The values in this structure are taken from the bitmap font. If
 the font doesn't provide a parameter it is set to zero to indicate
 that the information is not available.",,,,,,,,,
GTRawObjectVariablesBrowser,This is a helper browser for the Raw view in the GTInspector. It provides an overview of the slots and it offers an evaluator.,This is a helper browser for the Raw view in the GTInspector.,"This is a helper browser for the Raw view in the GTInspector.
  It provides an overview of the slots and it offers an evaluator.",This is a helper browser for the Raw view in the GTInspector.,,,,,,This is a helper browser for the Raw view in the GTInspector.,,,,,,,,,,,,,,
TraitMethodDescription,"Used by Trait to encapsulates a collection of methods for one particular selector when querying for changes. According to the number and kind of those methods a provided method exists, there is a conflict or there are no provided nor conflicting methods at all. I provide the interface to query for those situations, e.g., effectiveMethod returns the provided method or the conflict marker method.",,I provide the interface to query for those situations,Used by Trait to encapsulates a collection of methods for one particular selector when querying for changes,"I provide the interface to query for those situations, e.g., effectiveMethod returns the provided method or the conflict marker method.","According to the number and kind of those methods a provided method exists, there is a conflict or there are no provided nor conflicting methods at all.",,,,Used by Trait to encapsulates a collection of methods for one particular selector when querying for changes,,,,,,,,,,,Used by Trait to encapsulates a collection of methods for one particular selector when querying for changes.,,,
FailingTestResourceTestCase,SUnit tests for failing test resources,SUnit tests for failing test resources,,,,,,,,,,,,,,,,,,,,,,
FT2Constants,"The various flags from the Freetype/2 header.
  
  The LoadXXXX flags can be used with primitiveLoadGlyph:flags: or with the Cairo primCairoFtFontCreateForFtFace:flags:scale: primitives.
  
  FT_LOAD_DEFAULT ::
  Corresponding to 0, this value is used a default glyph load. In this
  case, the following will happen:
  
  1. FreeType looks for a bitmap for the glyph corresponding to the
  face's current size. If one is found, the function returns. The
  bitmap data can be accessed from the glyph slot (see note below).
  
  2. If no embedded bitmap is searched or found, FreeType looks for a
  scalable outline. If one is found, it is loaded from the font
  file, scaled to device pixels, then ""hinted"" to the pixel grid in
  order to optimize it. The outline data can be accessed from the
  glyph slot (see note below).
  
  Note that by default, the glyph loader doesn't render outlines into
  bitmaps. The following flags are used to modify this default
  behaviour to more specific and useful cases.
  
  FT_LOAD_NO_SCALE ::
  Don't scale the vector outline being loaded to 26.6 fractional
  pixels, but kept in font units. Note that this also disables
  hinting and the loading of embedded bitmaps. You should only use it
  when you want to retrieve the original glyph outlines in font units.
  
  FT_LOAD_NO_HINTING ::
  Don't hint glyph outlines after their scaling to device pixels.
  This generally generates ""blurrier"" glyphs in anti-aliased modes.
  
  This flag is ignored if @FT_LOAD_NO_SCALE is set.
  
  FT_LOAD_RENDER ::
  Render the glyph outline immediately into a bitmap before the glyph
  loader returns. By default, the glyph is rendered for the
  @FT_RENDER_MODE_NORMAL mode, which corresponds to 8-bit anti-aliased
  bitmaps using 256 opacity levels. You can use either
  @FT_LOAD_TARGET_MONO or @FT_LOAD_MONOCHROME to render 1-bit
  monochrome bitmaps.
  
  This flag is ignored if @FT_LOAD_NO_SCALE is set.
  
  FT_LOAD_NO_BITMAP ::
  Don't look for bitmaps when loading the glyph. Only scalable
  outlines will be loaded when available, and scaled, hinted, or
  rendered depending on other bit flags.
  
  This does not prevent you from rendering outlines to bitmaps
  with @FT_LOAD_RENDER, however.
  
  FT_LOAD_VERTICAL_LAYOUT ::
  Prepare the glyph image for vertical text layout. This basically
  means that `face.glyph.advance' will correspond to the vertical
  advance height (instead of the default horizontal advance width),
  and that the glyph image will be translated to match the vertical
  bearings positions.
  
  FT_LOAD_FORCE_AUTOHINT ::
  Force the use of the FreeType auto-hinter when a glyph outline is
  loaded. You shouldn't need this in a typical application, since it
  is mostly used to experiment with its algorithm.
  
  FT_LOAD_CROP_BITMAP ::
  Indicates that the glyph loader should try to crop the bitmap (i.e.,
  remove all space around its black bits) when loading it. This is
  only useful when loading embedded bitmaps in certain fonts, since
  bitmaps rendered with @FT_LOAD_RENDER are always cropped by default.
  
  FT_LOAD_PEDANTIC ::
  Indicates that the glyph loader should perform pedantic
  verifications during glyph loading, rejecting invalid fonts. This
  is mostly used to detect broken glyphs in fonts. By default,
  FreeType tries to handle broken fonts also.
  
  FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH ::
  Indicates that the glyph loader should ignore the global advance
  width defined in the font. As far as we know, this is only used by
  the X-TrueType font server, in order to deal correctly with the
  incorrect metrics contained in DynaLab's TrueType CJK fonts.
  
  FT_LOAD_NO_RECURSE ::
  This flag is only used internally. It merely indicates that the
  glyph loader should not load composite glyphs recursively. Instead,
  it should set the `num_subglyph' and `subglyphs' values of the glyph
  slot accordingly, and set ""glyph->format"" to
  @FT_GLYPH_FORMAT_COMPOSITE.
  
  The description of sub-glyphs is not available to client
  applications for now.
  
  FT_LOAD_IGNORE_TRANSFORM ::
  Indicates that the glyph loader should not try to transform the
  loaded glyph image. This doesn't prevent scaling, hinting, or
  rendering.
  
  FT_LOAD_MONOCHROME ::
  This flag is used with @FT_LOAD_RENDER to indicate that you want
  to render a 1-bit monochrome glyph bitmap from a vectorial outline.
  
  Note that this has no effect on the hinting algorithm used by the
  glyph loader. You should better use @FT_LOAD_TARGET_MONO if you
  want to render monochrome-optimized glyph images instead.
  
  FT_LOAD_LINEAR_DESIGN ::
  Return the linearly scaled metrics expressed in original font units
  instead of the default 16.16 pixel values.
  
  FT_LOAD_NO_AUTOHINT ::
  Indicates that the auto-hinter should never be used to hint glyph
  outlines. This doesn't prevent native format-specific hinters from
  being used. This can be important for certain fonts where unhinted
  output is better than auto-hinted one.
  
  One of following flags (as LoadTargetXXX) can be used to further specify the result.
  
  FT_RENDER_MODE_NORMAL ::
  This is the default render mode; it corresponds to 8-bit
  anti-aliased bitmaps, using 256 levels of opacity.
  
  FT_RENDER_MODE_LIGHT ::
  This is similar to @FT_RENDER_MODE_NORMAL, except that this
  changes the hinting to prevent stem width quantization. This
  results in glyph shapes that are more similar to the original,
  while being a bit more fuzzy (""better shapes"", instead of
  ""better contrast"" if you want :-).
  
  FT_RENDER_MODE_MONO ::
  This mode corresponds to 1-bit bitmaps.
  
  FT_RENDER_MODE_LCD ::
  This mode corresponds to horizontal RGB/BGR sub-pixel displays,
  like LCD-screens. It produces 8-bit bitmaps that are 3 times
  the width of the original glyph outline in pixels, and which use
  the @FT_PIXEL_MODE_LCD mode.
  
  FT_RENDER_MODE_LCD_V ::
  This mode corresponds to vertical RGB/BGR sub-pixel displays
  (like PDA screens, rotated LCD displays, etc.). It produces
  8-bit bitmaps that are 3 times the height of the original
  glyph outline in pixels and use the @FT_PIXEL_MODE_LCD_V mode.
  
  <Note>
  The LCD-optimized glyph bitmaps produced by FT_Render_Glyph are
  _not filtered_ to reduce color-fringes. It is up to the caller to
  perform this pass.",,,"The various flags from the Freetype/2 header.
 he LoadXXXX flags can be used with primitiveLoadGlyph:flags: or with the Cairo primCairoFtFontCreateForFtFace:flags:scale: primitives.",,,"The LoadXXXX flags can be used with primitiveLoadGlyph:flags: or with the Cairo primCairoFtFontCreateForFtFace:flags:scale: primitives.
 
 FT_LOAD_DEFAULT ::
  Corresponding to 0, this value is used a default glyph load. In this
  case, the following will happen:
  
  1. FreeType looks for a bitmap for the glyph corresponding to the
  face's current size. If one is found, the function returns. The
  bitmap data can be accessed from the glyph slot (see note below).
  
  2. If no embedded bitmap is searched or found, FreeType looks for a
  scalable outline. If one is found, it is loaded from the font
  file, scaled to device pixels, then ""hinted"" to the pixel grid in
  order to optimize it. The outline data can be accessed from the
  glyph slot (see note below).
  
  Note that by default, the glyph loader doesn't render outlines into
  bitmaps. The following flags are used to modify this default
  behaviour to more specific and useful cases.
  
 FT_LOAD_NO_SCALE ::
  Don't scale the vector outline being loaded to 26.6 fractional
  pixels, but kept in font units. Note that this also disables
  hinting and the loading of embedded bitmaps. You should only use it
  when you want to retrieve the original glyph outlines in font units.
  
 FT_LOAD_NO_HINTING ::
  Don't hint glyph outlines after their scaling to device pixels.
  This generally generates ""blurrier"" glyphs in anti-aliased modes.
  
  This flag is ignored if @FT_LOAD_NO_SCALE is set.
  
 FT_LOAD_RENDER ::
  Render the glyph outline immediately into a bitmap before the glyph
  loader returns. By default, the glyph is rendered for the
  @FT_RENDER_MODE_NORMAL mode, which corresponds to 8-bit anti-aliased
  bitmaps using 256 opacity levels. You can use either
  @FT_LOAD_TARGET_MONO or @FT_LOAD_MONOCHROME to render 1-bit
  monochrome bitmaps.
  
  This flag is ignored if @FT_LOAD_NO_SCALE is set.
  
 FT_LOAD_NO_BITMAP ::
  Don't look for bitmaps when loading the glyph. Only scalable
  outlines will be loaded when available, and scaled, hinted, or
  rendered depending on other bit flags.
  
  This does not prevent you from rendering outlines to bitmaps
  with @FT_LOAD_RENDER, however.
  
 FT_LOAD_VERTICAL_LAYOUT ::
  Prepare the glyph image for vertical text layout. This basically
  means that `face.glyph.advance' will correspond to the vertical
  advance height (instead of the default horizontal advance width),
  and that the glyph image will be translated to match the vertical
  bearings positions.
  
 FT_LOAD_FORCE_AUTOHINT ::
  Force the use of the FreeType auto-hinter when a glyph outline is
  loaded. You shouldn't need this in a typical application, since it
  is mostly used to experiment with its algorithm.
  
 FT_LOAD_CROP_BITMAP ::
  Indicates that the glyph loader should try to crop the bitmap (i.e.,
  remove all space around its black bits) when loading it. This is
  only useful when loading embedded bitmaps in certain fonts, since
  bitmaps rendered with @FT_LOAD_RENDER are always cropped by default.
  
 FT_LOAD_PEDANTIC ::
  Indicates that the glyph loader should perform pedantic
  verifications during glyph loading, rejecting invalid fonts. This
  is mostly used to detect broken glyphs in fonts. By default,
  FreeType tries to handle broken fonts also.
  
 FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH ::
  Indicates that the glyph loader should ignore the global advance
  width defined in the font. As far as we know, this is only used by
  the X-TrueType font server, in order to deal correctly with the
  incorrect metrics contained in DynaLab's TrueType CJK fonts.
  
 FT_LOAD_NO_RECURSE ::
  This flag is only used internally. It merely indicates that the
  glyph loader should not load composite glyphs recursively. Instead,
  it should set the `num_subglyph' and `subglyphs' values of the glyph
  slot accordingly, and set ""glyph->format"" to
  @FT_GLYPH_FORMAT_COMPOSITE.
  
  The description of sub-glyphs is not available to client
  applications for now.
  
 FT_LOAD_IGNORE_TRANSFORM ::
  Indicates that the glyph loader should not try to transform the
  loaded glyph image. This doesn't prevent scaling, hinting, or
  rendering.
  
 FT_LOAD_MONOCHROME ::
  This flag is used with @FT_LOAD_RENDER to indicate that you want
  to render a 1-bit monochrome glyph bitmap from a vectorial outline.
  
  Note that this has no effect on the hinting algorithm used by the
  glyph loader. You should better use @FT_LOAD_TARGET_MONO if you
  want to render monochrome-optimized glyph images instead.
  
 FT_LOAD_LINEAR_DESIGN ::
  Return the linearly scaled metrics expressed in original font units
  instead of the default 16.16 pixel values.
  
 FT_LOAD_NO_AUTOHINT ::
  Indicates that the auto-hinter should never be used to hint glyph
  outlines. This doesn't prevent native format-specific hinters from
  being used. This can be important for certain fonts where unhinted
  output is better than auto-hinted one.
 
 One of following flags (as LoadTargetXXX) can be used to further specify the result.
 
  FT_RENDER_MODE_NORMAL :: 
  This is the default render mode; it corresponds to 8-bit 
  anti-aliased bitmaps, using 256 levels of opacity. 
  
  FT_RENDER_MODE_LIGHT :: 
  This is similar to @FT_RENDER_MODE_NORMAL, except that this 
  changes the hinting to prevent stem width quantization. This 
  results in glyph shapes that are more similar to the original, 
  while being a bit more fuzzy (""better shapes"", instead of 
  ""better contrast"" if you want :-). 
  
  FT_RENDER_MODE_MONO :: 
  This mode corresponds to 1-bit bitmaps. 
  
  FT_RENDER_MODE_LCD :: 
  This mode corresponds to horizontal RGB/BGR sub-pixel displays, 
  like LCD-screens. It produces 8-bit bitmaps that are 3 times 
  the width of the original glyph outline in pixels, and which use
  the @FT_PIXEL_MODE_LCD mode. 
  
  FT_RENDER_MODE_LCD_V :: 
  This mode corresponds to vertical RGB/BGR sub-pixel displays 
  (like PDA screens, rotated LCD displays, etc.). It produces 
  8-bit bitmaps that are 3 times the height of the original 
  glyph outline in pixels and use the @FT_PIXEL_MODE_LCD_V mode.",,,,,,,,"Note that by default, the glyph loader doesn't render outlines into
  bitmaps. The following flags are used to modify this default
  behaviour to more specific and useful cases.
 
  This does not prevent you from rendering outlines to bitmaps
  with @FT_LOAD_RENDER, however.
  
  Note that this has no effect on the hinting algorithm used by the
  glyph loader. You should better use @FT_LOAD_TARGET_MONO if you
  want to render monochrome-optimized glyph images instead.
 
 
 <Note> 
  The LCD-optimized glyph bitmaps produced by FT_Render_Glyph are 
  _not filtered_ to reduce color-fringes. It is up to the caller to 
  perform this pass.",,,,,,,,,
CallbackForWin64X64,A CallbackForWin64X64 is a callback for platforms with x64/x86_64 processors using the Win64 ABI.,A CallbackForWin64X64 is a callback for platforms with x64/x86_64 processors using the Win64 ABI.,A CallbackForWin64X64 is a callback for platforms with x64/x86_64 processors using the Win64 ABI.,,,,,,,,,,A CallbackForWin64X64 is a callback for platforms with x64/x86_64 processors using the Win64 ABI.,,,,,,,,A CallbackForWin64X64 is a callback for platforms with x64/x86_64 processors using the Win64 ABI.,A CallbackForWin64X64 is a callback for platforms with x64/x86_64 processors using the Win64 ABI.,,
TDictionaryImplementationTest,A trait for test purposes,A trait for test purposes,A trait for test purposes,,,,,,,,,,,,,,,,,,,,,
EpClassChange,I represent a change in the definition of a class.,I represent a change in the definition of a class.,,,,,,,,,,,,,,,,,,,,,,
KeyNotFound,"I am KeyNotFound, an exception indicating that a key was not found in a Dictionary.","I am KeyNotFound, an exception indicating that a key was not found in a Dictionary.",,,,,,,,"I am KeyNotFound, an exception indicating that a key was not found in a Dictionary.",,,,,"I am KeyNotFound, an exception indicating that a key was not found in a Dictionary.",,,,,,,,,
MCVersionLoaderStopped,Announcement sent when a Version has finished loading,,,,,,,,,,,,,,,,,,,,Announcement sent when a Version has finished loading,,,
GoferMerge,Merge work,,Merge work,,,,,,,,,,,,,,,,,,,,,
Abort,Notify to abort a task,,Notify to abort a task,Notify to abort a task,,,,,,,,,,,,,,,,,Notify to abort a task,,,
FLGlobalCluster,I am a cluster for objects that are reachables from Smalltalk global dictionary.,I am a cluster for objects that are reachables from Smalltalk global dictionary.,I am a cluster for objects that are reachables from Smalltalk global dictionary.,,,,,,,I am a cluster for objects that are reachables from Smalltalk global dictionary.,I am a cluster for objects that are reachables from Smalltalk global dictionary.,,,,,,,,,,,,,
HermesCommandLineHandler,"This is the command line handler to load Hermes files in the image.
  The format is intented to export any of the objects. However, the command line expects to have a package as its root element.
  It loads the hermes files passed as parameter.
  They are loaded in the order of the parameters.
  
  Usage: loadHermes [--save] [extendedOptions] [<hermesFiles> ...]
  --save save after loading the packages if there is no error
  <hermesFiles> a list of .hermes files to load in the image.
  extendedOptions read the extension section.
  
  Examples:
  #Load the package Test-Package
  pharo Pharo.image loadHermes Test-Package.hermes
  
  #Load the package Test-Package and saving
  pharo Pharo.image loadHermes --save Test-Package.hermes
  
  
  Extensions
  =========
  
  When Hermes-Extensions is loaded additional options are present:
  no-fail-on-undeclared It does not fail the loading if there are new undeclared variables. By default it fails.
  on-duplication=action When there is a duplication in the loading package what is the action to take:
  fail (default) Fail on a duplication
  ignore Ignore the error and do not do nothing. Keeping the image version
  replace Replace the image version with the one in the Hermes Package.
  
  Examples
  
  #Load the package Test-Package without failing on new undeclared variables.
  pharo Pharo.image loadHermes --save --no-fail-on-undeclared Test-Package.hermes
  
  #Load the package Test-Package replacing the image version with the ones in the hermes file.
  pharo Pharo.image loadHermes --save --on-duplication=replace Test-Package.hermes",This is the command line handler to load Hermes files in the image.,"The format is intented to export any of the objects. However, the command line expects to have a package as its root element.
  It loads the hermes files passed as parameter.
  They are loaded in the order of the parameters.",,,,,,,,"Usage: loadHermes [--save] [extendedOptions] [<hermesFiles> ...]
  --save save after loading the packages if there is no error
  <hermesFiles> a list of .hermes files to load in the image.
  extendedOptions read the extension section.
  
  Examples:
  #Load the package Test-Package
  pharo Pharo.image loadHermes Test-Package.hermes
  
  #Load the package Test-Package and saving
  pharo Pharo.image loadHermes --save Test-Package.hermes",,,,,,,"Extensions
  =========
  
  When Hermes-Extensions is loaded additional options are present:
  no-fail-on-undeclared It does not fail the loading if there are new undeclared variables. By default it fails.
  on-duplication=action When there is a duplication in the loading package what is the action to take:
  fail (default) Fail on a duplication
  ignore Ignore the error and do not do nothing. Keeping the image version
  replace Replace the image version with the one in the Hermes Package.",,,,This is the command line handler to load Hermes files in the image.,,
OSWindowExposeEvent,I am delivered when part (or whole) window are exposed on the desktop and needs refreshing.,,,,,,,,,,,,,,,,,,,,I am delivered when part (or whole) window are exposed on the desktop and needs refreshing.,,,
RGContainerTest,SUnit tests for container,SUnit tests for container,SUnit tests for container,for container,,,,,,,,,,,,,,,,,,SUnit tests for container,,
GLMPortReference,A PortReference is used in Transmissions to bahavior that is specific to a Transmission instance.,A PortReference is used in Transmissions to bahavior that is specific to a Transmission instance.,A PortReference is used in Transmissions to bahavior that is specific to a Transmission instance.,,,,,,,,,,,,,,,,,,,,,
FLPositive64SmallIntegerCluster,"unsigned, 64-bit integer","unsigned, 64-bit integer",,,,,,,,,,,,,,,,,,,,,,
RPackageTestCase,Common superclass for RPackage related tests,Common superclass for RPackage related tests,,for RPackage related tests,,,,,,,,,,,,,,,,,,,,
DateParser,"Read a Date from the stream based on the pattern which can include the tokens:
  
  y = A year with 1 to n digits (after 2000)
  yy = A year with 2 digits (after 2000)
  yyyy = A year with 4 digits
  m = A month with 1 or 2 digits
  mm = A month with 2 digits
  d = A day with 1 or 2 digits
  dd = A day with 2 digits
  
  ...and any other Strings inbetween. Representing $y, $m and $d is done using
  \y, \m and \d and slash itself with \\. Simple example patterns:
  
  'yyyy-mm-dd'
  'yyyymmdd'
  'yy.mm.dd'
  'y-m-d'",,Read a Date from the stream based on the pattern which can include the tokens:,,,"Representing $y, $m and $d is done using
  \y, \m and \d and slash itself with \\",,,,,"Read a Date from the stream based on the pattern which can include the tokens:
  
  y = A year with 1 to n digits (after 2000)
  yy = A year with 2 digits (after 2000)
  yyyy = A year with 4 digits
  m = A month with 1 or 2 digits
  mm = A month with 2 digits
  d = A day with 1 or 2 digits
  dd = A day with 2 digits
  
  ...and any other Strings inbetween. Representing $y, $m and $d is done using
  \y, \m and \d and slash itself with \\. Simple example patterns:
  
  'yyyy-mm-dd'
  'yyyymmdd'
  'yy.mm.dd'
  'y-m-d'",,,,,,,,,,,,,
LargeNegativeInteger,"Just like LargePositiveInteger, but represents a negative number.","Just like LargePositiveInteger, but represents a negative number.",,,,,,,,"Just like LargePositiveInteger, but represents a negative number.",,,,,,,,,,,,,,
RBClassModelFactory,"None of the classes inside this package should be directly accessed. They should be accessed via myself. I'm a class factory.
  
  I'm an important design point: I will let future evolution of the system to be experimented without the needs to change all the users. Then once the experiments and a good solution is found it may be the time to remove me and to think that I'm an overengineered solution. Right now I'm a change enabler. For example people can try to use Ring models to model RBmodel.",I'm a class factory.,"""None of the classes inside this package should be directly accessed. They should be accessed via myself. 
  Right now I'm a change enabler.","For example people can try to use Ring models to model RBmodel.""",,I'm an important design point: I will let future evolution of the system to be experimented without the needs to change all the users. Then once the experiments and a good solution is found it may be the time to remove me and to think that I'm an overengineered solution.,,,,,For example people can try to use Ring models to model RBmodel.,,,,None of the classes inside this package should be directly accessed. They should be accessed via myself. I'm a class factory.,,,,Then once the experiments and a good solution is found it may be the time to remove me and to think that I'm an overengineered solution.,,,,,
RPackageRenamed,I am a public announcement sent when a new RPackage is renamed,I am a public announcement sent when a new RPackage is renamed,,,,,,,,I am a public announcement sent when a new RPackage is renamed,,,,,,,,,,,I am a public announcement sent when a new RPackage is renamed,,,
SHStyleElement,A Shout style element,A Shout style element,,,,,,,,,,,,,,,,,,,,,,
ExternalData,"Instances of ExternalData explicitly describe objects with associated type. They can be used for describing atomic C types like arrays of atomic types (e.g., 'int[]') or pointer to atomic types (e.g., 'int *').
  
  Instance variables:
  type <Integer | Behavior> The basic type of the receiver.
  
  The encoding of type is equivalent to that of the basic type in class ExternalType. The interpretation of whether the receiver describes an array of data or a pointer to data depends on the contents of the instance variable 'handle'. If handle contains an ExternalAddress the receiver is treated as pointer to type. If the handle contains a ByteArray the receiver is interpreted as describing an array of type. Note that both interpretations are treated equivalent in external calls, e.g., if one describes an argument to an external call as taking 'int*' then, depending on the type of handle either the actual contents (if ExternalAddress) or a pointer to the contents (if ByteArray) is passed.","""Instances of ExternalData explicitly describe objects with associated type.","They can be used for describing atomic C types like arrays of atomic types (e.g., 'int[]') or pointer to atomic types (e.g., 'int *').",,,The encoding of type is equivalent to that of the basic type in class ExternalType. The interpretation of whether the receiver describes an array of data or a pointer to data depends on the contents of the instance variable 'handle'. If handle contains an ExternalAddress the receiver is treated as pointer to type. If the handle contains a ByteArray the receiver is interpreted as describing an array of type.,"Instance variables:
  type <Integer | Behavior> The basic type of the receiver.",,,"The interpretation of whether the receiver describes an array of data or a pointer to data depends on the contents of the instance variable 'handle'. If handle contains an ExternalAddress the receiver is treated as pointer to type. If the handle contains a ByteArray the receiver is interpreted as describing an array of type. Note that both interpretations are treated equivalent in external calls, e.g., if one describes an argument to an external call as taking 'int*' then, depending on the type of handle either the actual contents (if ExternalAddress) or a pointer to the contents (if ByteArray) is passed.""",,,,,"Note that both interpretations are treated equivalent in external calls, e.g., if one describes an argument to an external call as taking 'int*' then, depending on the type of handle either the actual contents (if ExternalAddress) or a pointer to the contents (if ByteArray) is passed.",,,,,,,,,
OSWindowEventVisitor,"i am a abstract visitor for handling events..
  serving just to cover complete protocol, which user(s) will need to implement in order to act as an OSWindow event handler.",i am a abstract visitor for handling events..,"serving just to cover complete protocol,",,,,,,,,,,,,,,,,,,"serving just to cover complete protocol, which user(s) will need to implement in order to act as an OSWindow event handler.",,,
KMPragmaKeymapBuilder,"I am a singleton object, subscribed to system events, to listen to the creation of methods marked with the <keymap> and keymap:> pragmas.
  
  When I listen one of those events, I reinitialize the KMRepository default instance and reload it with all declared keymaps.","I am a singleton object, subscribed to system events, to listen to the creation of methods marked with the <keymap> and keymap:> pragmas",,"I am a singleton object, subscribed to system events. When I listen one of those events, I reinitialize the KMRepository default instance and reload it with all declared keymaps.",,,,,,,,,,,,,,,,,,,,
IceTipInstallVersionCommand,"Command used in the version browser, inside the code browser.
  This command takes the selected version and installs it (also called revert).","Command used in the version browser, inside the code browser.",This command takes the selected version and installs it (also called revert).,"Command used in the version browser, inside the code browser.",,,,,,,This command takes the selected version and installs it (also called revert).,,,,,,,,,,,,,
LGitSafeFFICalloutMethodBuilder,I'm a variant of FFICalloutMethodBuilder that adds a call to #signalIfNotReady before the actual ffi call.,I'm a variant of FFICalloutMethodBuilder that adds a call to #signalIfNotReady before the actual ffi call.,I'm a variant of FFICalloutMethodBuilder that adds a call to #signalIfNotReady before the actual ffi call.,,I'm a variant of FFICalloutMethodBuilder that adds a call to #signalIfNotReady before the actual ffi call.,I'm a variant of FFICalloutMethodBuilder that adds a call to #signalIfNotReady before the actual ffi call.,,,,,,,,,,,,,,,,,,
AthensCubicBezier,"Cubic bezier with 4 control points encapsulation.
  
  Main purpose of this class is to keep subdivision logic in clean and separate place",Cubic bezier with 4 control points encapsulation.,Main purpose of this class is to keep subdivision logic in clean and separate place,,,,,,,,,,,,,,,,,,,,,
MCReader,Common superclass for Monticello readers,Common superclass for Monticello readers,,,,,,,,,,,,,,,,,,,,Common superclass for Monticello readers,,
TabManagerModel,This is deprecated class because the original class TabManagerModel was renamed to TabManagerPresenter. You should stop to use this class and modify your code to use TabManagerPresenter.,,,,,,,,,,,,,,You should stop to use this class and modify your code to use TabManagerPresenter.,,,,,,,,,
GTEventRecorderSettings,"I represents Privacy settings. You can open Settings Browser and see Privacy group.
  
  Execute: SettingBrowser open",I represents Privacy settings.,,,,,,You can open Settings Browser and see Privacy group.,,,You can open Settings Browser and see Privacy group. Execute: SettingBrowser open,,,,,,,,,,,,,
AbstractEnumerationVisitorTest,SUnit tests for AbstractEnumerationVisitor,SUnit tests for AbstractEnumerationVisitor,,SUnit tests for AbstractEnumerationVisitor,,,,,,SUnit tests for AbstractEnumerationVisitor,,,,,,,,,,,,SUnit tests for AbstractEnumerationVisitor,,
PreDebugResumeDebugAction,"A PreDebugResumeDebugAction adds the ResumeDebugAction to the pre debug window.
  
  Instance Variables
  preDebugWindow: <Object>
  
  preDebugWindow
  - xxxxx",,A PreDebugResumeDebugAction adds the ResumeDebugAction to the pre debug window.,A PreDebugResumeDebugAction adds the ResumeDebugAction to the pre debug window.,,,Instance Variables preDebugWindow: <Object> preDebugWindow - xxxxx,,,A PreDebugResumeDebugAction adds the ResumeDebugAction to the pre debug window.,,,,,,,,,,,,,,
RxsPredicate,"-- Regular Expression Matcher v 1.1 (C) 1996, 1999 Vassili Bykov
  --
  This represents a character that satisfies a certain predicate.
  
  Instance Variables:
  
  predicate <BlockClosure> A one-argument block. If it evaluates to the value defined by <negated> when it is passed a character, the predicate is considered to match.
  negation <BlockClosure> A one-argument block that is a negation of <predicate>.","--
  This represents a character that satisfies a certain predicate.","predicate <BlockClosure> A one-argument block. If it evaluates to the value defined by <negated> when it is passed a character, the predicate is considered to match.
  negation <BlockClosure> A one-argument block that is a negation of <predicate>.""",,,,"Instance Variables:
  
  predicate <BlockClosure> A one-argument block. If it evaluates to the value defined by <negated> when it is passed a character, the predicate is considered to match.
  negation <BlockClosure> A one-argument block that is a negation of <predicate>.",,,,,,,,,,,,,,,,,
SycNewClassCreationCommand,"I am a base class for commands which create new class.
  They all needs new class name
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  newClassName: <String>",I am a base class for commands which create new class.,,,,They all needs new class name,"Instance Variables
  newClassName: <String>",,,,,,,,,,,,,,,,,
Privacy,"I represent basic privacy question about collecting user activities and other data that helps to improve Pharo and related tools.
  
  Responsibility:
  I keep information about sending diagnostic and usage data.
  
  Collaborators:
  I only keep the privacy information. All services that collects diagnostic and usage data should do it only if #sendDiagnosticsAndUsageData is true.
  
  If you want to add more specific settings related to privacy, you can put it to the privacy group.
  
  Public API and Key Messages
  
  - sendDiagnosticsAndUsageData",I represent basic privacy question about collecting user activities and other data that helps to improve Pharo and related tools.,"Responsibility: 
 I keep information about sending diagnostic and usage data.","Collaborators:
 I only keep the privacy information. All services that collects diagnostic and usage data should do it only if #sendDiagnosticsAndUsageData is true.",- sendDiagnosticsAndUsageData,,,,,,,,,,,,,,"If you want to add more specific settings related to privacy, you can put it to the privacy group.",,,,,
RubCancelEditRequested,I am raised when edits are cancelled in the text area,I am raised when edits are cancelled in the text area,I am raised when edits are cancelled in the text area,I am raised when edits are cancelled in the text area,,,,,,,,,,,,,,,,,I am raised when edits are cancelled in the text area,,,
WeakKeyAssociation,I am an association holding only weakly on my key.,I am an association holding only weakly on my key.,I am an association holding only weakly on my key.,,,,,,,,,,,,,,,,,,,,,
MD5NonPrimitive,"This class implements the MD5 128-bit one-way hash function. It relies on
  the ThirtyTwoBitRegister class supplied as part of the ""Digital Signatures""
  functionality included in Squeak 2.7. As of this date (1/20/2000), the
  U.S. Government has lifted many of the previous restrictions on the export
  of encryption software, but you should check before exporting anything
  including this code. MD5 is commonly used for some secure Internet
  protocols, including authentication in HTTP, which is why I wrote it.
  
  Submitted by Duane Maxwell",This class implements the MD5 128-bit one-way hash function.,,"It relies on the ThirtyTwoBitRegister class supplied as part of the ""Digital Signatures"" functionality included in Squeak 2.7.",,"MD5 is commonly used for some secure Internet
  protocols, including authentication in HTTP, which is why I wrote it.",,,,,,,,,"As of this date (1/20/2000), the U.S. Government has lifted many of the previous restrictions on the export of encryption software, but you should check before exporting anything including this code.",,,,,,,"It relies on the ThirtyTwoBitRegister class supplied as part of the ""Digital Signatures"" functionality included in Squeak 2.7.",Submitted by Duane Maxwell,
SimpleSwitchMorph,"I represent a switch that can be either on or off. I chnage my state in response to a mouse click. When clicked, I also send my actionSelector to my target, just like a SimpleButtonMorph.
  
  SimpleSwitchMorph new openInWorld",I represent a switch that can be either on or off.,"I chnage my state in response to a mouse click. When clicked, I also send my actionSelector to my target, just like a SimpleButtonMorph.",,,"When clicked, I also send my actionSelector to my target, just like a SimpleButtonMorph.",,,,"When clicked, I also send my actionSelector to my target, just like a SimpleButtonMorph.",SimpleSwitchMorph new openInWorld,,,,,,,,,,"When clicked, I also send my actionSelector to my target, just like a SimpleButtonMorph.",,,
Color,"This class represents abstract color, regardless of the depth of bitmap it will be shown in. At the very last moment a Color is converted to a pixelValue that depends on the depth of the actual Bitmap inside the Form it will be used with. The supported depths (in bits) are 1, 2, 4, 8, 16, and 32. The number of actual colors at these depths are: 2, 4, 16, 256, 32768, and 16 million. (See comment in BitBlt.) To change the depth of the Display and set how many colors you can see, execute: (Display newDepth: 8). (See comment in DisplayMedium)
  
  Color is represented as the amount of light in red, green, and blue. White is (1.0, 1.0, 1.0) and black is (0, 0, 0). Pure red is (1.0, 0, 0). These colors are ""additive"". Think of Color's instance variables as:
  r amount of red, a Float between 0.0 and 1.0.
  g amount of green, a Float between 0.0 and 1.0.
  b amount of blue, a Float between 0.0 and 1.0.
  (But, in fact, the three are encoded as values from 0 to 1023 and combined in a single integer, rgb. The user does not need to know this.)
  
  Many colors are named. You find a color by name by sending a message to class Color, for example (Color lightBlue). Also, (Color red: 0.2 green: 0.6 blue: 1.0) or (Color r: 0.2 g: 0.6 b: 1.0) creates a color. (see below)
  A color is essentially immutable. Once you set red, green, and blue, you cannot change them. Instead, create a new Color and use it.
  
  Applications such as contour maps and bar graphs will want to display one of a set of shades based on a number. Convert the range of this number to an integer from 1 to N. Then call (Color green lightShades: N) to get an Array of colors from white to green. Use the Array messages at:, atPin:, or atWrap: to pull out the correct color from the array. atPin: gives the first (or last) color if the index is out of range. atWrap: wraps around to the other end if the index is out of range.
  
  Messages:
  mixed: proportion with: aColor Answer this color mixed with the given color additively. The proportion, a number between 0.0 and 1.0, determines what what fraction of the receiver to use in the mix.
  
  + add two colors
  - subtract two colors
  * multiply the values of r, g, b by a number or an Array of factors. ((Color named: #white) * 0.3) gives a darkish gray. (aColor * #(0 0 0.9)) gives a color with slightly less blue.
  / divide a color by a factor or an array of three factors.
  
  errorForDepth: d How close the nearest color at this depth is to this abstract color. Sum of the squares of the RGB differences, square rooted and normalized to 1.0. Multiply by 100 to get percent.
  
  hue Returns the hue of the color. On a wheel from 0 to 360 with pure red at 0 and again at 360.
  saturation Returns the saturation of the color. 0.0 to 1.0
  brightness Returns the brightness of the color. 0.0 to 1.0
  
  name Look to see if this Color has a name.
  
  lightShades: thisMany An array of thisMany colors from white to the receiver.
  darkShades: thisMany An array of thisMany colors from black to the receiver. Array is of length num.
  mix: color2 shades: thisMany An array of thisMany colors from the receiver to color2.
  wheel: thisMany An array of thisMany colors around the color wheel starting and ending at the receiver.
  
  pixelValueForDepth: d Returns the bits that appear be in a Bitmap of this depth for this color. Represents the nearest available color at this depth. Normal users do not need to know which pixelValue is used for which color.
  
  Messages to Class Color.
  red: r green: g blue: b Return a color with the given r, g, and b components.
  r: g: b: Same as above, for fast typing.
  
  hue: h saturation: s brightness: b Create a color with the given hue, saturation, and brightness.
  
  pink
  blue
  red ... Many colors have messages that return an instance of Color.
  canUnderstand: #brown Returns true if #brown is a defined color.
  names An OrderedCollection of the names of the colors.
  named: #notAllThatGray put: aColor Add a new color to the list and create an access message and a class variable for it.
  
  colorFromPixelValue: value depth: d Returns a Color whose bit pattern (inside a Bitmap) at this depth is the number specified. Normal users do not need to use this.
  
  (See also comments in these classes: Form, Bitmap, BitBlt,.)","This class represents abstract color, regardless of the depth of bitmap it will be shown in.",,"At the very last moment a Color is converted to a pixelValue that depends on the depth of the actual Bitmap inside the Form it will be used with. The supported depths (in bits) are 1, 2, 4, 8, 16, and 32. The number of actual colors at these depths are: 2, 4, 16, 256, 32768, and 16 million. (See comment in BitBlt.) To change the depth of the Display and set how many colors you can see, execute: (Display newDepth: 8). (See comment in DisplayMedium)","Messages:
  mixed: proportion with: aColor Answer this color mixed with the given color additively. The proportion, a number between 0.0 and 1.0, determines what what fraction of the receiver to use in the mix.
  
  + add two colors
  - subtract two colors
  * multiply the values of r, g, b by a number or an Array of factors. ((Color named: #white) * 0.3) gives a darkish gray. (aColor * #(0 0 0.9)) gives a color with slightly less blue.
  / divide a color by a factor or an array of three factors.
  
  errorForDepth: d How close the nearest color at this depth is to this abstract color. Sum of the squares of the RGB differences, square rooted and normalized to 1.0. Multiply by 100 to get percent.
  
  hue Returns the hue of the color. On a wheel from 0 to 360 with pure red at 0 and again at 360.
  saturation Returns the saturation of the color. 0.0 to 1.0
  brightness Returns the brightness of the color. 0.0 to 1.0
  
  name Look to see if this Color has a name.
  
  lightShades: thisMany An array of thisMany colors from white to the receiver.
  darkShades: thisMany An array of thisMany colors from black to the receiver. Array is of length num.
  mix: color2 shades: thisMany An array of thisMany colors from the receiver to color2.
  wheel: thisMany An array of thisMany colors around the color wheel starting and ending at the receiver.
  
  pixelValueForDepth: d Returns the bits that appear be in a Bitmap of this depth for this color. Represents the nearest available color at this depth. Normal users do not need to know which pixelValue is used for which color.
  
  Messages to Class Color.
  red: r green: g blue: b Return a color with the given r, g, and b components.
  r: g: b: Same as above, for fast typing.
  
  hue: h saturation: s brightness: b Create a color with the given hue, saturation, and brightness.
  
  pink
  blue
  red ... Many colors have messages that return an instance of Color.
  canUnderstand: #brown Returns true if #brown is a defined color.
  names An OrderedCollection of the names of the colors.
  named: #notAllThatGray put: aColor Add a new color to the list and create an access message and a class variable for it.
  
  colorFromPixelValue: value depth: d Returns a Color whose bit pattern (inside a Bitmap) at this depth is the number specified. Normal users do not need to use this.","Color is represented as the amount of light in red, green, and blue. White is (1.0, 1.0, 1.0) and black is (0, 0, 0). Pure red is (1.0, 0, 0). These colors are ""additive"". Think of Color's instance variables as:
  r amount of red, a Float between 0.0 and 1.0.
  g amount of green, a Float between 0.0 and 1.0.
  b amount of blue, a Float between 0.0 and 1.0.
  (But, in fact, the three are encoded as values from 0 to 1023 and combined in a single integer, rgb. The user does not need to know this.)",,"(See also comments in these classes: Form, Bitmap, BitBlt,.)",,,"Many colors are named. You find a color by name by sending a message to class Color, for example (Color lightBlue). Also, (Color red: 0.2 green: 0.6 blue: 1.0) or (Color r: 0.2 g: 0.6 b: 1.0) creates a color. (see below)
  A color is essentially immutable. Once you set red, green, and blue, you cannot change them. Instead, create a new Color and use it.
  
  Applications such as contour maps and bar graphs will want to display one of a set of shades based on a number. Convert the range of this number to an integer from 1 to N. Then call (Color green lightShades: N) to get an Array of colors from white to green. Use the Array messages at:, atPin:, or atWrap: to pull out the correct color from the array. atPin: gives the first (or last) color if the index is out of range. atWrap: wraps around to the other end if the index is out of range.",,,,,,,,,,,,,
ManifestNetworkUUID,A package providing Universally Unique Identifiers (UUID) following RFC4122.,A package providing Universally Unique Identifiers (UUID) following RFC4122.,A package providing Universally Unique Identifiers (UUID) following RFC4122.,,,,,,,,,,A package providing Universally Unique Identifiers (UUID) following RFC4122.,,,,,,,,,A package providing Universally Unique Identifiers (UUID) following RFC4122.,,
TableContainerPresenter,"I am a model for a container with table layout. My purpose is to hold multiple subwidgets to glue them together.
  
  
  I should not be used directly",I am a model for a container with table layout.,My purpose is to hold multiple subwidgets to glue them together.,,,,,,,,,,,,I should not be used directly,,,,,,,,,
FLSerializationError,I represent an error happened during serialization.,I represent an error happened during serialization.,,,,,,,,,,,,,,,,,,,,,,
ExampleForTest11,An example class at level 2 (indirectly below Object) used for testing class hierarchy,An example class at level 2 (indirectly below Object),used for testing class hierarchy,,,,,,,,,,,,,,,,,,,,,
ZipWriteStreamTests,Unit tests for ZipWriteStream,Unit tests for ZipWriteStream,Unit tests for ZipWriteStream,Unit tests for ZipWriteStream,,,,,,Unit tests for ZipWriteStream,,,,,,,,,,,,,,
WeakIdentityValueDictionaryTests,SUnit tests for WeakIdentityValueDictionaty,SUnit tests for WeakIdentityValueDictionaty,,for WeakIdentityValueDictionaty,,,,,,,,,,,,,,,,,,,,
Model,Provides optimized model support,,Provides optimized model support,,,,,,,,,,,,,,,,,,,,,
CornerRounder,"This class is a quick hack to support rounded corners in morphic.
  
  Rather than produce rounded rectangles, it tweaks the display of corners.
  Rather than work for any radius, it only supports a radius of 6.
  Rather than work for any border width, it only supports widths 0, 1 and 2.
  The corners, while apparently transparent, still behave opaquely to mouse clicks.
  
  Worse than this, the approach relies on the ability to extract underlying bits from the canvas prior to display. This ran afoul of top-down display, it seems, in SystemWindow spawnReframeHandle: (qv). It will also make a postscript printer very unhappy.
  
  But, hey, it's cute.",This class is a quick hack to support rounded corners in morphic.,"Rather than produce rounded rectangles, it tweaks the display of corners.
  Rather than work for any radius, it only supports a radius of 6.
  Rather than work for any border width, it only supports widths 0, 1 and 2.
  The corners, while apparently transparent, still behave opaquely to mouse clicks.",,,,,,,,,,,,"Worse than this, the approach relies on the ability to extract underlying bits from the canvas prior to display. This ran afoul of top-down display, it seems, in SystemWindow spawnReframeHandle: (qv). It will also make a postscript printer very unhappy. But, hey, it's cute.","Worse than this, the approach relies on the ability to extract underlying bits from the canvas prior to display. This ran afoul of top-down display, it seems, in SystemWindow spawnReframeHandle: (qv). It will also make a postscript printer very unhappy. But, hey, it's cute.",,,,,,,,
RBLiteralArrayCharactersRule,Literal arrays containing only characters can more efficiently represented as strings.,,,Literal arrays containing only characters can more efficiently represented as strings.,,,,,,,,,,,,,,,,,,,,
ReLogExceptionStrategy,Report exception as a property (critique) which can be debuged afterwards,,Report exception as a property (critique) which can be debuged afterwards,Report exception as a property (critique) which can be debuged afterwards,,,,,,,,,,,,,,,,,,,,
IceTipRemoveFromRepositoryPackageCommand,"Command that removes a package from the repository, without removing it from the system.","Command that removes a package from the repository, without removing it from the system.","Command that removes a package from the repository, without removing it from the system.",,,,,,,,,,,,,,,,,,,,,
NECPreferences,"I control the preferences for completion framework.
  It is the same for NECompletion and NOCompletion (and other potential completion algorithms should be configured here too)",,I control the preferences for completion framework.,It is the same for NECompletion and NOCompletion (and other potential completion algorithms should be configured here too),,,,,,It is the same for NECompletion and NOCompletion (and other potential completion algorithms should be configured here too),,,,,,,,,It is the same for NECompletion and NOCompletion (and other potential completion algorithms should be configured here too),,,,,
RBBrowserEnvironmentsClassesHelp,Book from RBBrowserEnvironments classes,Book from RBBrowserEnvironments classes,,Book from RBBrowserEnvironments classes,,,,,,Book from RBBrowserEnvironments classes,,,,,,,,,,,,,,
InstanceVariableSlot,"I add some special behavior:
  - I override bytecode generation to generate ivar read and write bytecodes
  - I print the definition as #name",,"I override bytecode generation to generate ivar read and write bytecodes
 - I print the definition as #name",,,,,,,,,,,,,,,,,,,,,
IceTipAction,"I'm like a lightweight command, used in general for apply concrete actions.",,"I'm like a lightweight command, used in general for apply concrete actions.",,,,,,,,,,,,,,,,,,,,,
ChangeSorterApplication,"A ChangeSorterApplication is spec version of the dual sorter.
  
  ChangeSorterApplication
  new openWithSpec","""A ChangeSorterApplication is spec version of the dual sorter.",,,,,,,,,"ChangeSorterApplication
  new openWithSpec""",,,,,,,,,,,,,
RenrakuRuleCreationHelp,Each rule has a few fundamental features to implement in this book with will walk through all the steps of rule creation,,,,,,,,,,Each rule has a few fundamental features to implement in this book with will walk through all the steps of rule creation,,,,,,,,,,,,,
SpecDemoCheckboxesPage,Demo page for SpecDemoCheckboxesPresenter,Demo page,,Demo page for SpecDemoCheckboxesPresenter,,,,,,,,,,,,,,,,,,,,
ClyItemLocalHierarchyProperty,"I represent how many local children exist for object in concrete query result.
  
  For example if you look at classes as a hierarchy then you can see Object and its subclasses. This hierarchy can be limited by package scope.
  So in case of one particular package Object can have 10 subclasses. But in another package it can be 30 (for example).
  And I represents such local hierarchy size. To access it from browser item use following methods:
  - aBrowserItem localHierarchySize
  - aBrowserItem localHierarchySize: count
  I am used by tools to organize tree view for list of items which provide local hierarchy by themselves. Item has no real list of children. But instead it knows count of internal tree. It allows tool hide right number of items when given parent node needs to be collapsed. Important condition here is that I must hold count of full subtree of local hierarchy (not just first level children).
  
  To manually create my instances use:
  ClyItemLocalHierarchyProperty size: 10
  
  Internal Representation and Key Implementation Points.
  
  Instance Variables
  subtreeSize: <Integer>",I represent how many local children exist for object in concrete query result.,I represent how many local children exist for object in concrete query result.,I am used by tools to organize tree view for list of items which provide local hierarchy by themselves. Item has no real list of children. But instead it knows count of internal tree. It allows tool hide right number of items when given parent node needs to be collapsed.,,,"Internal Representation and Key Implementation Points.
  
  Instance Variables
  subtreeSize: <Integer>",,,,"For example if you look at classes as a hierarchy then you can see Object and its subclasses. This hierarchy can be limited by package scope.
  So in case of one particular package Object can have 10 subclasses. But in another package it can be 30 (for example).
  And I represents such local hierarchy size. To access it from browser item use following methods:
  - aBrowserItem localHierarchySize
  - aBrowserItem localHierarchySize: coun
  
  To manually create my instances use:
  ClyItemLocalHierarchyProperty size: 10",,,,Important condition here is that I must hold count of full subtree of local hierarchy (not just first level children).,,,,,,,,,
GTDebuggerSystemSettings,I register settings only needed for GTDebugger.,,I register settings,only needed for GTDebugger.,,,,,,only needed for GTDebugger.,,,,,,,,,,,,,,
ExternalStructure,"This class provides an abstract base for all structures that can be used by external functions. ExternalStructures have two possible handle types:
  - ExternalAddress
  If the handle is an external address then the object described does not reside in the Smalltalk object memory.
  - ByteArray
  If the handle is a byte array then the object described resides in Smalltalk memory.
  Useful methods should be implemented by subclasses of ExternalStructure using the common ByteArray/ExternalAddress platform dependent access protocol which will transparently access the correct memory location.",,"""This class provides an abstract base for all structures that can be used by external functions.",,,". ExternalStructures have two possible handle types:
  - ExternalAddress
  If the handle is an external address then the object described does not reside in the Smalltalk object memory.
  - ByteArray
  If the handle is a byte array then the object described resides in Smalltalk memory.
  Useful methods should be implemented by subclasses of ExternalStructure using the common ByteArray/ExternalAddress platform dependent access protocol which will transparently access the correct memory location.",,,,,,,,,,,,,,,,,,
ClyGlobalVariable,"I represent a glopbal variable.
  I am like GlobalVariable.
  
  You can create my instance using:
  ClyGlobalVariable on: aGlobalVariable","""I represent a glopbal variable.
  I am like GlobalVariable.",,,,,,,,,"You can create my instance using:
  ClyGlobalVariable on: aGlobalVariable""",,,,,,,,,,,,,
EpLogBrowserOperation,I represent an operation done in a EpLogBrowser.,I represent an operation done in a EpLogBrowser.,,,,,,,,I represent an operation done in a EpLogBrowser.,,,,,,,,,,,,,,
ClyAllVariablesQuery,"I return all type of variables from given scope.
  
  Scope should support #variablesDo:.
  Now only class scopes support it.",,I return all type of variables from given scope.,,,,,,,,,,,,Scope should support #variablesDo:.,,,,,,,,,
FFIExternalStructureReferenceHandle,"I'm an offset accessor for nested structures.
  The idea is that I remap the accessing to an offseted byte array, thus providing access to the inner structure without copying the values.
  This is useful when you have nested structures, something like this:
  
  struct StructNested {
  int value;
  }
  
  struct StructA {
  int one;
  struct StructNested theNest;
  }
  
  then you can do something like this:
  
  s := StructA new.
  s theNest value: 42.
  
  And the value will be set in the StructA instance, not in a copy as before.",I'm an offset accessor for nested structures.,,,,"The idea is that I remap the accessing to an offseted byte array, thus providing access to the inner structure without copying the values.",,,,,"This is useful when you have nested structures, something like this:
  
  struct StructNested {
  int value;
  }
  
  struct StructA {
  int one;
  struct StructNested theNest;
  }
  
  then you can do something like this:
  
  s := StructA new.
  s theNest value: 42.
  
  And the value will be set in the StructA instance, not in a copy as before.",,,,,,,,,,,,,
RBRefactoringClassesHelp,All exising RBRefactorings,,,All exising RBRefactorings,,,,,,,,,,,,,,,,,,,,
TPointAccess,"Contains methods for accessing points stored in variable word classes.
  Initially used by PointArray & ShortPointArray",,Contains methods for accessing points stored in variable word classes.,Initially used by PointArray & ShortPointArray,,,,,Initially used by PointArray & ShortPointArray,Initially used by PointArray & ShortPointArray,,,,,,,,,,,,,,
FLSerializationTest,Superclass for serialization tests,Superclass for serialization tests,,Superclass for serialization tests,,,,,,,,,,,,,,,,,,,,
RFNewValueReification,reify newValue,,reify newValue,,,,,,,,,,,,,,,,,,,,,
ColorChooserMorph,ColorPresenter that opens a colour selector when clicked.,ColorPresenter that opens a colour selector when clicked.,ColorPresenter that opens a colour selector when clicked.,,,,,,,,,,,,,,,,,,ColorPresenter that opens a colour selector when clicked.,,,
IceTipGitHubPullRequestListBrowser,"Description
  --------------------
  
  I am a spec presenter to show the list of PR available for a remote and informations on them.
  
  Internal Representation and Key Implementation Points.
  --------------------
  
  Instance Variables
  details: <aPresenter> A presenten showing the details for a PR.
  pullRequests: <anAdaptor> An adaptor corresponding to a table containing the pull requests to view.
  remote: <aRemote> The remote we should view the PR of.",I am a spec presenter to show the list of PR available for a remote and informations on them.,I am a spec presenter to show the list of PR available for a remote and informations on them.,Internal Representation and Key Implementation Points.,,,"Instance Variables
  details: <aPresenter> A presenten showing the details for a PR.
  pullRequests: <anAdaptor> An adaptor corresponding to a table containing the pull requests to view.
  remote: <aRemote> The remote we should view the PR of",,,,,,,,,,,,,,,,,
FLSingletonMockEnforced,A test mock where a new instance is enforced,A test mock where a new instance is enforced,,,,,,,,,,,,,,,,,,,,,,
ClyAllClassVariablesQuery,"I return all class variables from given scope.
  
  Scope should support #classVariablesDo:.
  Now only class scopes support it.",,"""I return all class variables from given scope.",,,"Scope should support #classVariablesDo:.
  Now only class scopes support it.""",,,,,,,,,,,,,,,,,,
NullAnnotationContext,"I represent undefined annotation context which is initialized by default for annotation instances.
  
  Annotations with undefined contexts (unspecified context) are never returned from contextual query of annotations.
  
  I has singleton #instance on class side which is used by annotations as default context value",I represent undefined annotation context which is initialized by default for annotation instances.,I has singleton #instance on class side which is used by annotations as default context value,Annotations with undefined contexts (unspecified context) are never returned from contextual query of annotations.,,Annotations with undefined contexts (unspecified context) are never returned from contextual query of annotations.,I has singleton #instance on class side which is used by annotations as default context value,,,,,,,,,,,,,,,,,
IceTipBrowser,"I'm a base tool for iceberg Tip-UI.
  My children will implement real tools, but I provide certain common elements.
  
  Some remarks about design:
  
  1. Each tool has to have ONE model as entry point for data, and JUST ONE. It will be contained
  in #model accessor.",I'm a base tool for iceberg Tip-UI.,"My children will implement real tools, but I provide certain common elements.",,,,,,,,,,,,"Some remarks about design:
  
  1. Each tool has to have ONE model as entry point for data, and JUST ONE. It will be contained
  in #model accessor.",,,,,,,,,
ShSuperclassChangedDetector,I detect if there is a change in the superclass,,I detect if there is a change in the superclass,I detect if there is a change in the superclass,,,,,,,,,,,,,,,,,,,,
IceTipItemPosition,"I'm a position in a toolbar.
  My children define where IceTipToolbarItem instance will be located.",I'm a position in a toolbar.,,My children define where IceTipToolbarItem instance will be located.,,,,,,,,,,,,,,,,,,,,
RFSenderReification,I reify the sender for message sends and methods,,I reify the sender for message sends and methods,,,,,,,,,,,,,,,,,,,,,
RBCommentNodeVisitor,"Visit any RBCommentNode in the syntax tree and evaluate a generic block.
  
  The block has two optional parameters:
  aCommentArray (the collection of 1 or more RBComment's)
  aNode (the node which containts the comment)",,Visit any RBCommentNode in the syntax tree and evaluate a generic block.,Visit any RBCommentNode in the syntax tree and evaluate a generic block.,,,"The block has two optional parameters:
  aCommentArray (the collection of 1 or more RBComment's)
  aNode (the node which containts the comment)",,,Visit any RBCommentNode in the syntax tree and evaluate a generic block.,,,,,,,,,,,,,,
BlChicken,"How to run:


==BlChicken open==",,,,,,,,,,"How to run:


==BlChicken open==",,,,,,,,,,,,,
SpUserFontSource,I represent a font face source and know how to retrieve font contents from it,I represent a font face source,and know how to retrieve font contents from it,,,,,,,,,,,,,,,,,,,,,
MooseVisualLocator,The MooseVisualLocator is a simple template that offers a list of classes on the left hand side and some presentation on the right hand side. It is meant to be subclassed.,The MooseVisualLocator is a simple template,that offers a list of classes on the left hand side and some presentation on the right hand side.,,,It is meant to be subclassed.,,,,,,,,,,,,,,,,,,
WAMemoryToolPlugin,I display the memory usage tool.,,I display the memory usage tool.,,,,,,,,,,,,,,,,,,,,,
FamixGenerator,"| g |
g := FamixGenerator new.
g generateWithoutCleaning.
FamixCompatibilityGenerator resetMetamodel.",,,,,,,,,,"| g |
g := FamixGenerator new.
g generateWithoutCleaning.
FamixCompatibilityGenerator resetMetamodel.",,,,,,,,,,,,,
PRParseWarning,I am a warning for the parse of a Pillar file.,I am a warning for the parse of a Pillar file.,,,,,,,,,,,,,,,,,,,,,,
GtDiagrammerPicker,"I am a scriptable toogle group to display a uniform collection of selectable values.

[[[
| picker |
picker := GtDiagrammerPicker new.
picker layout: BlFlowLayout horizontal.
picker display: [ { 'Hello' . 'World' . 'I' . 'am' . 'a' . 'picker' } ].
picker shape: [ :aString | BrToggle new
 look: BrMaterialToggleLabelledLook;
 margin: (BlInsets all: 3);
 label: aString ].
picker constraintsDo: [ :c |
 c horizontal exact: 400.
 c vertical fitContent ].
picker when: BrToggleActivatedEvent do: [ :anEvent | self inform: anEvent model ].
picker
]]]",I am a scriptable toogle group to display a uniform collection of selectable values.,,,,,,,,,"[[[
| picker |
picker := GtDiagrammerPicker new.
picker layout: BlFlowLayout horizontal.
picker display: [ { 'Hello' . 'World' . 'I' . 'am' . 'a' . 'picker' } ].
picker shape: [ :aString | BrToggle new
 look: BrMaterialToggleLabelledLook;
 margin: (BlInsets all: 3);
 label: aString ].
picker constraintsDo: [ :c |
 c horizontal exact: 400.
 c vertical fitContent ].
picker when: BrToggleActivatedEvent do: [ :anEvent | self inform: anEvent model ].
picker
]]]",,,,,,,,,,,,,
PMExponentialGenerator,"A PMExponentialGenerator uses a uniform random variable in [0,1] to sample from an exponential distribution.

The exponential distribution has a single parameter beta, here denoted as mean. 

The default RandomGenerator is PMRandom, but can be modified.

The next method uses the formula:

x= - \beta * ln (1 - u)

to generate an exponential sample x from a uniform [0,1] sample u.

(Applied Statistics 3rd ed., Ledolter and Hogg, p. 185)","""A PMExponentialGenerator uses a uniform random variable in [0,1] to sample from an exponential distribution.","The exponential distribution has a single parameter beta, here denoted as mean.",,"The default RandomGenerator is PMRandom, but can be modified.","The next method uses the formula:

x= - \beta * ln (1 - u)

to generate an exponential sample x from a uniform [0,1] sample u.",,"(Applied Statistics 3rd ed., Ledolter and Hogg, p. 185)""",,,,,,,,,,,,,,,,
PPXPathFilter,"I'm a node filter. 
A xpath node applies me to filter xml elements.",I'm a node filter.,A xpath node applies me to filter xml elements.,,,,,,,,,,,,,,,,,,,,,
MalKruskal,"Kruskal's algorithm is a greedy algorithm in graph theory that finds a minimum spanning tree for a connected weighted graph. This means it finds a subset of the edges that forms a tree that includes every vertex, where the total weight of all the edges in the tree is minimized. If the graph is not connected, then it finds a minimum spanning forest (a minimum spanning tree for each connected component).

See https://en.wikipedia.org/wiki/Kruskal%27s_algorithm",,"Kruskal's algorithm is a greedy algorithm in graph theory that finds a minimum spanning tree for a connected weighted graph. This means it finds a subset of the edges that forms a tree that includes every vertex, where the total weight of all the edges in the tree is minimized. If the graph is not connected, then it finds a minimum spanning forest (a minimum spanning tree for each connected component).",,,,,See https://en.wikipedia.org/wiki/Kruskal%27s_algorithm,,,,,,,,,See https://en.wikipedia.org/wiki/Kruskal%27s_algorithm,,,,,,,
BlElementEffect,"I am the abstract root class for effects.
I define the default drawing strategy (before & after).
My subclasses can be composed as a chain of effects.
I can influence the bounds of my owner (used to clip my owner).",I am the abstract root class for effects.,"I define the default drawing strategy (before & after).
I can influence the bounds of my owner (used to clip my owner).",,,,,,My subclasses can be composed as a chain of effects.,,,,,,,,,,,,,,,
WABulkReapingCache,"I am a cache that reaps all elements at once instead of incrementally.

I am intended to be used in GemStone/S instead of WAHashCache. A background process should send #reap to me.

 Instance Variables
 dictionary: <Dictionary>",I am a cache that reaps all elements at once instead of incrementally.,,I am intended to be used in GemStone/S instead of WAHashCache. A background process should send #reap to me.,,,"Instance Variables
 dictionary: <Dictionary>",,,WAHashCache,,,,,,,,,,,A background process should send #reap to me.,,,
MooseCustomTask,"MooseCustomTask is a task perform some computation specified as a block.

The main API is then

 with: aBlock description: aDescription length: aNumber",MooseCustomTask is a task perform some computation specified as a block.,,,"The main API is then

 with: aBlock description: aDescription length: aNumber",,,,,,,,,,,,,,,,,,,
BlDevScripterCheckFiredEventsStep,"I check whether particular ${class:BlEvent}$ events were fired on a ${class:BlElement}$ target.

!! Example

Here you can see how to configure a fire and check a click event on a child element:
${example:BlDevScripterExamples>>#clickCheck|previewExpanded=true|previewHeight=400}$",,I check whether particular ${class:BlEvent}$ events were fired on a ${class:BlElement}$ target.,,,,,,,,"!! Example

Here you can see how to configure a fire and check a click event on a child element:
${example:BlDevScripterExamples>>#clickCheck|previewExpanded=true|previewHeight=400}$",,,,,,,,,,,,,
WAErrorHandler,"WAErrorHandler catches Errors and Warnings and provides two methods for handling each type of exception:

handleError:
handleWarning:

If either method is not implemented, the default implementation will call #handleDefault:, which can be used to provide common behaviour for both exception types.",,WAErrorHandler catches Errors and Warnings and provides two methods for handling each type of exception:,WAErrorHandler catches Errors and Warnings and provides two methods for handling each type of exception:,"handleError:
handleWarning:","If either method is not implemented, the default implementation will call #handleDefault:, which can be used to provide common behaviour for both exception types.",,,,"Error
Warning",,,,,"If either method is not implemented, the default implementation will call #handleDefault:, which can be used to provide common behaviour for both exception types.",,,,,,,,,
PPInfo,"A PPInfo represent the informations around a parsing result and also contain this result. It is usefull to get parsing evaluation and stream position.

Instance Variables
 element: <Object>
 start: <Object>
 stop: <Object>

element
 - xxxxx

start
 - xxxxx

stop
 - xxxxx",A PPInfo represent the informations around a parsing result and also contain this result,It is usefull to get parsing evaluation and stream position.,,,,"Instance Variables
 element: <Object>
 start: <Object>
 stop: <Object>

element
 - xxxxx

start
 - xxxxx

stop
 - xxxxx",,,,,,,,,,,,,,,,,
BlKeyCombinationConverterCNF,I transform composite key combination formula into a CNF (https://en.wikipedia.org/wiki/Conjunctive_normal_form),,I transform composite key combination formula into a CNF (https://en.wikipedia.org/wiki/Conjunctive_normal_form),,I transform composite key combination formula into a CNF (https://en.wikipedia.org/wiki/Conjunctive_normal_form),,,I transform composite key combination formula into a CNF (https://en.wikipedia.org/wiki/Conjunctive_normal_form),,,,,,,,,(https://en.wikipedia.org/wiki/Conjunctive_normal_form),,,,,,,
BlUniverseEventsCleared,Emitted when all of the event loop's events have been processed and control flow is about to be taken away from the Universe.,,Emitted when all of the event loop's events have been processed and control flow is about to be taken away from the Universe.,,,,,,,,,,,,,,,,,,Emitted when all of the event loop's events have been processed and control flow is about to be taken away from the Universe.,,,
BlChildrenOrderedCollectionExamples,"I define examples for the class ${class:BlChildrenOrderedCollection}$.

Instances of ${class:BlChildrenOrderedCollection}$ are created by directly instatiating the class.
${example:BlChildrenOrderedCollectionExamples>>#emptyChildrenExplicitCreation}$

Bloc elements can then be added and removed from the collection.
${example:BlChildrenOrderedCollectionExamples>>#add}$

${example:BlChildrenOrderedCollectionExamples>>#remove}$",,I define examples for the class ${class:BlChildrenOrderedCollection}$.,,,,"Instances of ${class:BlChildrenOrderedCollection}$ are created by directly instatiating the class.
${example:BlChildrenOrderedCollectionExamples>>#emptyChildrenExplicitCreation}$",,,,"Bloc elements can then be added and removed from the collection
Bloc elements can then be added and removed from the collection.
${example:BlChildrenOrderedCollectionExamples>>#add}$

${example:BlChildrenOrderedCollectionExamples>>#remove}$",,,,,,,,,,,,,
TSpartaCompositeFilter,"I am a composite filter and can have an arbitrary amount of input soures

https://www.w3.org/TR/SVG/filters.html#feCompositeElement

Example:

 ""Merge"" filter primitive is just a composite filter with OVER composion mode.

 merge := canvas compositeFilter
 over;
 source: filter1;
 source:filter2;
 source: filter3;
 source: filter4
 ...",I am a composite filter and can have an arbitrary amount of input soures,,,,,,https://www.w3.org/TR/SVG/filters.html#feCompositeElement,,,"Example:

 ""Merge"" filter primitive is just a composite filter with OVER composion mode.

 merge := canvas compositeFilter
 over;
 source: filter1;
 source:filter2;
 source: filter3;
 source: filter4
 ...",,,,,,https://www.w3.org/TR/SVG/filters.html#feCompositeElement,,,,,,,
GtPhlowForwarderView,"I forward a view definition to another object.
I am useful in situations when the object that has the view definition is expensive to create.
I am also useful in situtions, when the object is created only for the purpose of the view.

I create the object only if someone clicks on my tab (view).

!! Important

${method:GtPhlowView>>#title}$ and ${method:GtPhlowView>>#priority}$ are not taken from the original view. If that were the case, the advantage of the solution would be lost since the title and priority are necessary to build the view tab using the title and priority.

!! Example

You can define me as follow: ${method:GtPhlowViewExamples>>#gtForwardedViewFor:|expanded=true}$",,"I forward a view definition to another object.
I am useful in situations when the object that has the view definition is expensive to create.
I am also useful in situtions, when the object is created only for the purpose of the view.

I create the object only if someone clicks on my tab (view).",,,,,,,,"!! Example

You can define me as follow: ${method:GtPhlowViewExamples>>#gtForwardedViewFor:|expanded=true}$",,,,"!! Important

${method:GtPhlowView>>#title}$ and ${method:GtPhlowView>>#priority}$ are not taken from the original view. If that were the case, the advantage of the solution would be lost since the title and priority are necessary to build the view tab using the title and priority.",,,,,,,,,
BrPagerPageResizerElement,I am the element with which a pager page can be resized horizontally.,I am the element with which a pager page can be resized horizontally.,,I am the element with which a pager page can be resized horizontally.,,,,,,,,,,,,,,,,,,,,
PMLineSearch,"I implement line search algorithm to find the minimum of a function g(x) >= 0 on the interval 0 < x < 1.
The method is initialized by g(0), g(1) and g'(0).
The step from x = 0 to x = 1 suppose to minimize g(x) (i.e. g'(0) < 0), but due to nonlinearity of g(x) might fail to do so.
In this case, this method finds such an x that this function is minimized in the sense:

g(x) <= g(0) + alpha g'(0)

for some small alpha (defaults to 1e-4).

Usage

For once off use: 

 (PMLineSearch function: funBlock valueAtZero: g0 derivativeAtZero: dg0 valueAtOne: g1 ) evaluate.

where funBlock is the implementation of g(x), g0 = g(0), dg0 = g'(0) and g1 = g(0).

For repeated use:

 storedMethod := DhbLineSearch new.
 storedMethod setFunction: funBlock.
 storedMethod setValueAtZero: g0 derivativeAtZero: dg0 valueAtOne: g1.
 storedMethod evaluate. 
 
!!! Optimization tip!!!

It is guaranteed that g(x) will be called on the resulting x.

See DhbNewtonZeroFinder (PMNewtonZeroFinder) that uses this to minimize the number of function evaluations.","""I implement line search algorithm to find the minimum of a function g(x) >= 0 on the interval 0 < x < 1.","""I implement line search algorithm to find the minimum of a function g(x) >= 0 on the interval 0 < x < 1.
The method is initialized by g(0), g(1) and g'(0).",,,"The step from x = 0 to x = 1 suppose to minimize g(x) (i.e. g'(0) < 0), but due to nonlinearity of g(x) might fail to do so.
In this case, this method finds such an x that this function is minimized in the sense:

g(x) <= g(0) + alpha g'(0)

for some small alpha (defaults to 1e-4).

!!! Optimization tip!!!

It is guaranteed that g(x) will be called on the resulting x.

See DhbNewtonZeroFinder (PMNewtonZeroFinder) that uses this to minimize the number of function evaluations.""",,"See DhbNewtonZeroFinder (PMNewtonZeroFinder) that uses this to minimize the number of function evaluations.""",,,"Usage

For once off use: 

 (PMLineSearch function: funBlock valueAtZero: g0 derivativeAtZero: dg0 valueAtOne: g1 ) evaluate.

where funBlock is the implementation of g(x), g0 = g(0), dg0 = g'(0) and g1 = g(0).

For repeated use:

 storedMethod := DhbLineSearch new.
 storedMethod setFunction: funBlock.
 storedMethod setValueAtZero: g0 derivativeAtZero: dg0 valueAtOne: g1.
 storedMethod evaluate.",,,,,,,,,,,,,
PMAM3Stepper,"It is stepper for Adams - Moulton method of order 3.
An s-step Adams - Moulton method can reach order s+1.
We can't use AM3 method until we have old solution value and approximate new one. A AM3 method is implicit.",It is stepper for Adams - Moulton method of order 3.,"An s-step Adams - Moulton method can reach order s+1. 
A AM3 method is implicit.",,,,,,,,,,,,We can't use AM3 method until we have old solution value and approximate new one.,,,,,,We can't use AM3 method until we have old solution value and approximate new one.,,,
WAPainterVisitor,An implementation of the Visitor pattern for Painter subclasses.,An implementation of the Visitor pattern for Painter subclasses.,An implementation of the Visitor pattern for Painter subclasses.,An implementation of the Visitor pattern for Painter subclasses.,,,,,An implementation of the Visitor pattern for Painter subclasses.,,,,,,,,,,,,,,,
PRInputFileAnnotation,"I include a reference to a pillar file. With me we can add a transformation to remplace an annotation to a pillar file by his tree.

My tag is: 'inputFile''.

I can have in parameter:
- a path to a file with the key ""value="" (required, you can write it without the key)

Examples: 

${inputFile:myFile.pillar}$

${inputFile:value=directory/myFile.pillar}$",,"I include a reference to a pillar file.
With me we can add a transformation to remplace an annotation to a pillar file by his tree.",,"My tag is: 'inputFile''.

I can have in parameter:
- a path to a file with the key ""value="" (required, you can write it without the key)",,,,,,"Examples: 

${inputFile:myFile.pillar}$

${inputFile:value=directory/myFile.pillar}$",,,,,,,,,,,,,
BlTime,"I encapsulate a concept of time and play a role of a time provider for Animations or other parts of the system that compute durations or how much time passed since some action.

Bloc components must not directly rely on system time or hardcode it in any place because it prevents us from simulating spaces. The use of me makes system exemplifiable",,I encapsulate a concept of time and play a role of a time provider for Animations or other parts of the system that compute durations or how much time passed since some action.,I encapsulate a concept of time and play a role of a time provider for Animations or other parts of the system that compute durations or how much time passed since some action.,,,,,,Animations,,,,,Bloc components must not directly rely on system time or hardcode it in any place because it prevents us from simulating spaces. The use of me makes system exemplifiable,,,,,,,,,
GtConnectorButtonAddedEvent,Is sent after button is added to the scene graph,,Is sent after button is added to the scene graph,,,,,,,,,,,,,,,,,,,,,
BlDragDelegate,"Drag delegate provides drag items when a visual element lifts.
Drag gesture fails if there are no drag items",,"Drag delegate provides drag items when a visual element lifts.
Drag gesture fails if there are no drag items",,,,,,,,,,,,,,,,,,,,,
BrPagerPagePreviewResizeListener,I update the size of a page preview element in a scroll bar according to the size of a corresponding page,,I update the size of a page preview element in a scroll bar according to the size of a corresponding page,,,,,,,,,,,,,,,,,,,,,
PPParserReplaceRule,"PPParserReplaceRule replaces a matched grammar with another grammar, which may include patterns from the matching grammar.

Instance Variables:
 replaceParser <PPParser> The parser to replace the matched parser with.",,"PPParserReplaceRule replaces a matched grammar with another grammar, which may include patterns from the matching grammar.",,,,"Instance Variables:
 replaceParser <PPParser> The parser to replace the matched parser with.",,,,,,,,,,,,,,,,,
PMAdditionalTest,"here are tests that would be in Math-Tests-DHB-Numerical, if it could construct random matrices",,"here are tests that would be in Math-Tests-DHB-Numerical, if it could construct random matrices",,,,,,,,,,,,,,,,,,,,,
GtDiagrammerArrowheadFilledTriangleStencil,I create a filled triangle arrowhead,,I create a filled triangle arrowhead,,,,,,,,,,,,,,,,,,,,,
BlMouseMoveEvent,"The mouse move event is fired when a pointing device (usually a mouse) is moved while over an element.

https://developer.mozilla.org/en-US/docs/Web/Events/mousemove",,,The mouse move event is fired when a pointing device (usually a mouse) is moved while over an element.,,,,https://developer.mozilla.org/en-US/docs/Web/Events/mousemove,,,,,,,,,https://developer.mozilla.org/en-US/docs/Web/Events/mousemove,,,,,,,
BlScalableFitWidthStrategy,"I make sure that content element fits horizontally within scalable element.

It makes sense to use me if scalable element has fixed or matching parent horizontal size but fits content vertically.",,I make sure that content element fits horizontally within scalable element.,,,,,,,,,,,,,,,,It makes sense to use me if scalable element has fixed or matching parent horizontal size but fits content vertically.,,,,,
GtRlBaselineTagReleaseStrategy,"I am a release strategy that uses the current loaded tag for a repository as the version number.

I indicate a passive release as no actions need to be executed. The version number already exists in the repository.
I should only be used for repositories that have no child repositories or when all child repositories also use this strategy, as I hardcode an existing tag.
As I am passive I do not export any metadata. Even if the repository has child repositories there will be no metadata exported. Because of this I do not use metadata to check previous versions (it is not reliable).

I am a valid release strategy only when all Monticello baselines that load this project use the same tag to load it. 
See ${method:GtRlBaselineTagReleaseStrategy>>#assertCompatibleWithRepository:}$ for assertions that check when I can be used.","""I am a release strategy that uses the current loaded tag for a repository as the version number.","""I am a release strategy that uses the current loaded tag for a repository as the version number.

I indicate a passive release as no actions need to be executed. The version number already exists in the repository.",,,As I am passive I do not export any metadata. Even if the repository has child repositories there will be no metadata exported. Because of this I do not use metadata to check previous versions (it is not reliable).,,,,,"I am a valid release strategy only when all Monticello baselines that load this project use the same tag to load it. 
See ${method:GtRlBaselineTagReleaseStrategy>>#assertCompatibleWithRepository:}$ for assertio",,,,,,,,"I should only be used for repositories that have no child repositories or when all child repositories also use this strategy, as I hardcode an existing tag.",,,,,
MooseAbstractImporter,"I'm the root for the new importer.
This way my subclasses share error logging and importerContext",I'm the root for the new importer.,,,,,,,This way my subclasses share error logging and importerContext,,,,,,,,,,,,,,,
RTLabeled,"A RTLabeled adds a label above an element. The label may be particularized using #text: in the default string representation is not sufficient. Consider:

E.g., 
v := RTView new.
e := (RTEllipse new size: 30) elementOn: 42.
v add: e.
e @ (RTLabeled new text: [ :value | 'My value is ', value asString ]).
v

Instance Variables
 canvas: <Object>
 color: <Object>
 highlightable: <Object>
 lowColor: <Object>
 offsetOnEdge: <Object>
 position: <Object>
 text: <Object>

canvas
 - xxxxx

color
 - xxxxx

highlightable
 - xxxxx

lowColor
 - xxxxx

offsetOnEdge
 - xxxxx

position
 - xxxxx

text
 - xxxxx",,"""A RTLabeled adds a label above an element. The label may be particularized using #text: in the default string representation is not sufficient. Consider:",,"canvas
 - xxxxx

color
 - xxxxx

highlightable
 - xxxxx

lowColor
 - xxxxx

offsetOnEdge
 - xxxxx

position
 - xxxxx

text
 - xxxxx""",,"Instance Variables
 canvas: <Object>
 color: <Object>
 highlightable: <Object>
 lowColor: <Object>
 offsetOnEdge: <Object>
 position: <Object>
 text: <Object>

canvas
 - xxxxx

color
 - xxxxx

highlightable
 - xxxxx

lowColor
 - xxxxx

offsetOnEdge
 - xxxxx

position
 - xxxxx

text
 - xxxxx""",,,,"E.g., 
v := RTView new.
e := (RTEllipse new size: 30) elementOn: 42.
v add: e.
e @ (RTLabeled new text: [ :value | 'My value is ', value asString ]).
v",,,,,,,,,,,,,
MalBreadthFirstSearchPath,"Breadth-first search (BFS) is an algorithm for traversing or searching tree or graph data structures. It starts at the tree root (or some arbitrary node of a graph, sometimes referred to as a `search key') and explores the neighbor nodes first, before moving to the next level neighbours. (source: Wikipedia)",Breadth-first search (BFS) is an algorithm for traversing or searching tree or graph data structures.,"Breadth-first search (BFS) is an algorithm for traversing or searching tree or graph data structures. It starts at the tree root (or some arbitrary node of a graph, sometimes referred to as a `search key') and explores the neighbor nodes first, before moving to the next level neighbours.",,,,,(source: Wikipedia),,,,,,,,,,,,,,,,
MalHgNode,"A MalHgNode is a node inside a hierarchical graph. It knows the graph it belongs to, its children and its parent, on which level in the graph it resides and its outgoing ind incoming edges. One can also store arbitrary informaition as attributes to a node.

Instance Variables
 attributes: <Dictionary>
 children: <OrderedCollection>
 hiGraph: <MalHierarchicalGraph>
 incoming: <OrderedCollection>
 level: <Number>
 outgoing: <OrderedCollection>
 parent: <MalHgNode>

attributes
 - Dictionary to attach arbitrary information to a node

children
 - This nodes children. Empty collection if the node is a leaf in the hierarchy.

hiGraph
 - The MalHierarchicalGraph this node belongs to.

incoming
 - All incoming edges to this node.

level
 - The level this node is on in the hierachy where 0 is the top level (root nodes). The larger the number, the deeper down in the hierarchy the node is located.

outgoing
 - All outgoing edges from this node.

parent
 - This nodes parent",A MalHgNode is a node inside a hierarchical graph.,"It knows the graph it belongs to, its children and its parent, on which level in the graph it resides and its outgoing ind incoming edges. One can also store arbitrary informaition as attributes to a node.",,"attributes
 - Dictionary to attach arbitrary information to a node

children
 - This nodes children. Empty collection if the node is a leaf in the hierarchy.

hiGraph
 - The MalHierarchicalGraph this node belongs to.

incoming
 - All incoming edges to this node.

level
 - The level this node is on in the hierachy where 0 is the top level (root nodes). The larger the number, the deeper down in the hierarchy the node is located.

outgoing
 - All outgoing edges from this node.

parent
 - This nodes parent",,"Instance Variables
 attributes: <Dictionary>
 children: <OrderedCollection>
 hiGraph: <MalHierarchicalGraph>
 incoming: <OrderedCollection>
 level: <Number>
 outgoing: <OrderedCollection>
 parent: <MalHgNode>",,"It knows the graph it belongs to, its children and its parent, on which level in the graph it resides and its outgoing ind incoming edges",,,,,,,,,,,,,,,
BrMaterialToggleBackgroundLook,I describe how background of a material toggle button changes due to toggle events,,I describe how background of a material toggle button changes due to toggle events,,,,,,,,,,,,,,,,,,,,,
BlPerpendicularFractionAnchor,"I am a virtual anchor that lays on a perpendicular to a line between two reference anchors.

The curvature - distance from the line connecting reference anchors is defined as a fraction (curvatureFraction) of a length between anchors.",I am a virtual anchor that lays on a perpendicular to a line between two reference anchors.,I am a virtual anchor that lays on a perpendicular to a line between two reference anchors.,,,The curvature - distance from the line connecting reference anchors is defined as a fraction (curvatureFraction) of a length between anchors.,,,,,,,,,,,,,,,,,,
RTHighlightableWithCursor,"Highlight to indicates that some interaction be can done. It changes the cursor aspect

E.g.,

-=-=-=
| b |
b := RTUMLClassBuilder new
 instanceVariables: #instVarNames;
 methodselector: #selector;
 methodsNames: #rtmethods;
 attributeselector: #yourself.
b attributeShape color: Color black.
b methodShape color: Color black.
b classNameShape color: Color black.
b lineShape color: Color black.
b boxShape borderColor: Color black.

b addObjects: (Collection withAllSubclasses ).
b layout tree.

b build.

b view elements @ RTHighlightableWithCursor.
^b view
-=-=-=

-=-=-=
b := RTMondrian new.
b shape circle size: 10.
b interaction showEdge 
 connectToAll: #subclasses.

b interaction showLabel 
 highlightObjects: #subclasses.
 

nodes := b nodes: (Collection withAllSubclasses).
nodes @ RTHighlightableWithCursor.
b edges moveBehind; connectFrom: #superclass.
b layout radial.
b
-=-=-=",,Highlight to indicates that some interaction be can done,It changes the cursor aspect,,,,,,,"E.g.,

-=-=-=
| b |
b := RTUMLClassBuilder new
 instanceVariables: #instVarNames;
 methodselector: #selector;
 methodsNames: #rtmethods;
 attributeselector: #yourself.
b attributeShape color: Color black.
b methodShape color: Color black.
b classNameShape color: Color black.
b lineShape color: Color black.
b boxShape borderColor: Color black.

b addObjects: (Collection withAllSubclasses ).
b layout tree.

b build.

b view elements @ RTHighlightableWithCursor.
^b view
-=-=-=

-=-=-=
b := RTMondrian new.
b shape circle size: 10.
b interaction showEdge 
 connectToAll: #subclasses.

b interaction showLabel 
 highlightObjects: #subclasses.
 

nodes := b nodes: (Collection withAllSubclasses).
nodes @ RTHighlightableWithCursor.
b edges moveBehind; connectFrom: #superclass.
b layout radial.
b
-=-=-=",,,,,,,,,,,,,
RTLinePathBuilder,An interpolator a way to create lines in SVG,,An interpolator a way to create lines in SVG,,,,,,,,,,,,,,,,,,,,,
WACancelButtonTag,Creates a Cancel submit button.,,Creates a Cancel submit button.,,,,,,,,,,,,,,,,,,,,,
BlGeometry,The geometry is used to define the geometry to be drawn and the interaction area.,,The geometry is used to define the geometry to be drawn and the interaction area.,The geometry is used to define the geometry to be drawn and the interaction area.,,,,,,,,,,,,,,,,,,,,
BlMouseProcessor,"I am an event processor.
I convert basic events to more complex events.
For example, i generate events like click, dbl click, drag&drop, ... from mouse down, mouse up, and mouse move events.

Mouse actions are blocked during drag",I am an event processor.,I convert basic events to more complex events.,I convert basic events to more complex events.,,,,,,,"For example, i generate events like click, dbl click, drag&drop, ... from mouse down, mouse up, and mouse move events.",,,,Mouse actions are blocked during drag,,,,,,,,,
Gt4XMLHighlightedToken,This class stores a highlight TextColor and 1-based start/end highlight positions.,,This class stores a highlight TextColor and 1-based start/end highlight positions.,,,1-based start/end highlight positions.,,,,TextColor,,,,,,,,,,,,,,
BlElementSelectionAcquiredEvent,"Is sent when element gets inside of mouse selection rectangle or when the overlapping rectangle formed by element's bounds and selection rectangle changes.

Text containing elements should react on this event and select a corresponding portion of text within selection rectangle",,,Is sent when element gets inside of mouse selection rectangle or when the overlapping rectangle formed by element's bounds and selection rectangle changes.,,,,,,,,,,,Text containing elements should react on this event and select a corresponding portion of text within selection rectangle,,,,,,Is sent when element gets inside of mouse selection rectangle or when the overlapping rectangle formed by element's bounds and selection rectangle changes.,,,
RTAxisRenderer,A RTAxisRenderer is a renderer for axis. It simply render in a view an axis configuration,A RTAxisRenderer is a renderer for axis.,It simply render in a view an axis configuration,A RTAxisRenderer is a renderer for axis. It simply render in a view an axis configuration,,,,,,,,,,,,,,,,,,,,
WAListAttribute,"WAListAttribute is an attribute that is restricted to a list of values. 

Instance Variables:
 options <Block> A block returning a list of possible values for the attribute",WAListAttribute is an attribute that is restricted to a list of values.,,,,,"Instance Variables:
 options <Block> A block returning a list of possible values for the attribute",,,,,,,,,,,,,,,,,
GtDiagrammerArrowheadFilledCircleStencil,I create a filled circle arrow head with the border and background equal to the color of the curve,,I create a filled circle arrow head with the border and background equal to the color of the curve,,,,,,,,,,,,,,,,,,,,,
PRParagraph,"I'm a paragraph of text containing text, line breaks or annotations.
I'm close to a latex or HTML paragraph. I do not contain complex structures such as lists, codeblocks.","I'm a paragraph of text containing text, line breaks or annotations.","I'm close to a latex or HTML paragraph. I do not contain complex structures such as lists, codeblocks.",,,,,,,,,,,,,,,,,,,,,
BlInfiniteExampleClassesDataSource,I am a data source of the collection of all classes in the image,I am a data source of the collection of all classes in the image,,I am a data source of the collection of all classes in the image,,,,,,,,,,,,,,,,,,,,
RTExploraBuilderTest,"A ROExploraBuilderTest is xxxxxxxxx.

Instance Variables
 builder: <Object>

builder
 - xxxxx",A ROExploraBuilderTest is xxxxxxxxx.,,,,,"Instance Variables
 builder: <Object>
builder
 - xxxxx",,,,,,,,,,,,,,,,,
BlGeometryAnchorListener,I am an event listener that listens Anchor Moved event send by Anchor,I am an event listener that listens Anchor Moved event send by Anchor,I am an event listener that listens Anchor Moved event send by Anchor,I am an event listener that listens Anchor Moved event send by Anchor,,,,,,,,,,,,,,,,,,,,
PRShowClassTransformer,"I am a transformer for the showClass annotation.

I know how to visit a showClass annotation and the way to transform it.

I create a PRCodeblock with the class definition within it.",I am a transformer for the showClass annotation.,I know how to visit a showClass annotation and the way to transform it.,I create a PRCodeblock with the class definition within it.,,,,,,PRCodeblock,,,,,,,,,,,,,,
BrTextEditorSelectionUpdateCommand,I do the hard job of visually updating selection by requesting segment holders to partially update themselves,,I do the hard job of visually updating selection by requesting segment holders to partially update themselves,,I do the hard job of visually updating selection by requesting segment holders to partially update themselves,,,,,,,,,,,,,,,,,,,
WAProtectionFilter,"The protection filter ensures that the wrapped request handler only accepts requests from the same IP. Do add this filter to a WASession for example to avoid session hijacking, do not add it to static request handlers such as WAApplication or WADispatcher as this might restrict access to the handler if your IP changes.

Note that checking for IP addresses is not bullet proof and should never be used as the sole security measure for a web application as IP addresses can be easily spoofed.",,"""The protection filter ensures that the wrapped request handler only accepts requests from the same IP. Do add this filter to a WASession for example to avoid session hijacking, do not add it to static request handlers such as WAApplication or WADispatcher as this might restrict access to the handler if your IP changes.",,,,,,,,,,,,"Note that checking for IP addresses is not bullet proof and should never be used as the sole security measure for a web application as IP addresses can be easily spoofed.""",,,,"Do add this filter to a WASession for example to avoid session hijacking, do not add it to static request handlers such as WAApplication or WADispatcher as this might restrict access to the handler if your IP changes.",,,,,
WADatalistTag,"datalist together with the a new list attribute for input is used to make comboboxes:

<input list=browsers>
<datalist id=browsers>
 <option value=""Safari"">
 <option value=""Internet Explorer"">
 <option value=""Opera"">
 <option value=""Firefox"">
</datalist>",,datalist together with the a new list attribute for input is used to make comboboxes:,,,,,,,,"<input list=browsers>
<datalist id=browsers>
 <option value=""Safari"">
 <option value=""Internet Explorer"">
 <option value=""Opera"">
 <option value=""Firefox"">
</datalist>",,,,,,,,,,,,,
BlHandlerRegistry,"I am an event handler registry used by dispatchers in order to manage event handlers.

Example:
[[[
| registry |
""one can use announcer based registry""
registry := BlHandlerAnnouncerRegistry new.
""or registry based on plain array""
registry := BlHandlerArrayRegistry new.
registry add: (BlEventHandler on: BlClickEvent do: [ self inform: 'Click' ] ).
registry add: (BlEventHandler on: BlMouseDownEvent do: [ self inform: 'Mouse down' ] ).
registry add: (BlEventHandler on: BlMouseUpEvent do: [ self inform: 'Mouse up' ] ).
registry dispatchEvent: BlClickEvent new.
registry dispatchEvent: BlMouseDownEvent new.
registry dispatchEvent: BlMouseUpEvent new.
]]]","""I am an event handler registry used by dispatchers in order to manage event handlers.","""I am an event handler registry used by dispatchers in order to manage event handlers.",,,,,,,,"Example:
[[[
| registry |
""""one can use announcer based registry""""
registry := BlHandlerAnnouncerRegistry new.
""""or registry based on plain array""""
registry := BlHandlerArrayRegistry new.
registry add: (BlEventHandler on: BlClickEvent do: [ self inform: 'Click' ] ).
registry add: (BlEventHandler on: BlMouseDownEvent do: [ self inform: 'Mouse down' ] ).
registry add: (BlEventHandler on: BlMouseUpEvent do: [ self inform: 'Mouse up' ] ).
registry dispatchEvent: BlClickEvent new.
registry dispatchEvent: BlMouseDownEvent new.
registry dispatchEvent: BlMouseUpEvent new.
]]]""",,,,,,,,,,,,,
BlMeasurementUnspecifiedMode,"I represent a concrete implementation of ""unspecified"" measurement mode.
For more information see class comment of BlMeasurementMode","I represent a concrete implementation of ""unspecified"" measurement mode.",,,,,,For more information see class comment of BlMeasurementMode,,BlMeasurementMode,,,,,,,,,,,,,,
BlInfiniteItemAnimationsFinished,"I am sent when all pending or running animations in an ItemAnimator are finished.
I can be used, for example, to delay an action in a data set until currently-running animations are complete.",,"I can be used, for example, to delay an action in a data set until currently-running animations are complete.",,,,,,,,,,,,,,,,,,I am sent when all pending or running animations in an ItemAnimator are finished.,,,
PRParameter,"I represent a key and value pair. 
My key is instance of PRParameterKey and its associated vaue is an instance of PRParameterValue.","""I represent a key and value pair.",,"My key is instance of PRParameterKey and its associated vaue is an instance of PRParameterValue.
""",,,,,,"PRParameterKey
 PRParameterValue",,,,,,,,,,,,,,
WARequestContextNotFound,This exception is raised when trying to obtain the current request context when none is available.,,,,,,,,,,,,,,,,,,,,This exception is raised when trying to obtain the current request context when none is available.,,,
WARubyFunctionalTest,"Examples taken directly from spec:
http://www.w3.org/TR/2001/REC-ruby-20010531/",,,,,,,,,,,,,"Examples taken directly from spec:
http://www.w3.org/TR/2001/REC-ruby-20010531/",,,"Examples taken directly from spec:
http://www.w3.org/TR/2001/REC-ruby-20010531/",,,,,,,
PRObject,"I am a superclass of most objects within Pier. I hold a dictionary of properties, so that users can easily annotate me with new values. I am visitable.",I am a superclass of most objects within Pier.,"I hold a dictionary of properties, so that users can easily annotate me with new values. I am visitable.",,,,,,,,,,,,,,,,,,,,,
WALabelledFormDialog,"WALabelledFormDialog is an abstract class for generating html forms. Given a data model WALabelledFormDialog displays a label and input field for each instance variable of interest. User supplied data is placed in the data model.

Subclasses need to implment the methods labelForSelector:, model, and rows. The ""model"" method just returns the object whose fields we wish to populate with date. The ""rows"" method returns a collections of symbols. One symbol for each row of data in the dialog. The symbol is used generate the accessor methods for the data in the model. The method ""labelForSelector:"" returns the labels for each row and each submit button in the form.

A standard text input field is used for each row of data. To use other html widgets for input for = a datum implement the method renderXXXOn: where XXX is the symbol for the row. See ""renderNameOn:"" in example below.

The default form has one button ""Ok"". Override the ""buttons"" method to change the text or number of submit buttons on the form. Override the ""defaultButton"" method to indicate which button is the default. For each button in the form the subclass needs a method with the same name as the button, which is called when the user clicks that button. See example below.

LabelledFormDialogExample subclass of WALabelledFormDialog instance methods
 initialize
 super initialize.
 contact := Contact new. ""contact is an inst var""
 self addMessage: 'Please enter the followning information'.

 model
 ^ contact

 ok
 self answer: contact

 cancel
 self answer

 rows
 ^ #(name phoneNumber)

 buttons
 #(ok cancel)

 labelForSelector: aSymbol
 aSymbol == #name ifTrue: [^'Your Name'].
 aSymbol == #phoneNumber ifTrue: [^'Phone Number'].
 aSymbol == #ok ifTrue: [^'Ok'].
 aSymbol == #cancel ifTrue: [^'Cancel'].
 ^ super labelForSelector: aSymbol

 renderNameOn: html 
 ""Show how to specily special input instead of using simple text field.""
 (html select)
 list: #('Roger' 'Pete');
 selected: 'Roger';
 callback: [:v | contact name: v]

Contact Class used above has instance variables name, phoneNumber with standard getter and setter methods",WALabelledFormDialog is an abstract class for generating html forms.,"Given a data model WALabelledFormDialog displays a label and input field for each instance variable of interest. User supplied data is placed in the data model.

A standard text input field is used for each row of data. To use other html widgets for input for = a datum implement the method renderXXXOn: where XXX is the symbol for the row. See ""renderNameOn:"" in example below.",,"Contact Class used above has instance variables name, phoneNumber with standard getter and setter methods.
 model
 ^ contact

 ok
 self answer: contact

 cancel
 self answer

 rows
 ^ #(name phoneNumber)

 buttons
 #(ok cancel)
 labelForSelector: aSymbol
 aSymbol == #name ifTrue: [^'Your Name'].
 aSymbol == #phoneNumber ifTrue: [^'Phone Number'].
 aSymbol == #ok ifTrue: [^'Ok'].
 aSymbol == #cancel ifTrue: [^'Cancel'].
 ^ super labelForSelector: aSymbol","The default form has one button ""Ok"". Override the ""buttons"" method to change the text or number of submit buttons on the form. Override the ""defaultButton"" method to indicate which button is the default. For each button in the form the subclass needs a method with the same name as the button, which is called when the user clicks that button. See example below.","Contact Class used above has instance variables name, phoneNumber with standard getter and setter methods
 contact := Contact new. ""contact is an inst var""",,"Subclasses need to implment the methods labelForSelector:, model, and rows. The ""model"" method just returns the object whose fields we wish to populate with date. The ""rows"" method returns a collections of symbols. One symbol for each row of data in the dialog. The symbol is used generate the accessor methods for the data in the model. The method ""labelForSelector:"" returns the labels for each row and each submit button in the form.",,"LabelledFormDialogExample subclass of WALabelledFormDialog instance methods
 initialize
 super initialize.
 contact := Contact new. ""contact is an inst var""
 self addMessage: 'Please enter the followning information'.

 model
 ^ contact

 ok
 self answer: contact

 cancel
 self answer

 rows
 ^ #(name phoneNumber)

 buttons
 #(ok cancel)

 labelForSelector: aSymbol
 aSymbol == #name ifTrue: [^'Your Name'].
 aSymbol == #phoneNumber ifTrue: [^'Phone Number'].
 aSymbol == #ok ifTrue: [^'Ok'].
 aSymbol == #cancel ifTrue: [^'Cancel'].
 ^ super labelForSelector: aSymbol

 renderNameOn: html 
 ""Show how to specily special input instead of using simple text field.""
 (html select)
 list: #('Roger' 'Pete');
 selected: 'Roger';
 callback: [:v | contact name: v]",,,,,,,,,,,,,
RTCircleTree,I am a class helper to do the layout in RTCircularTreeMapBuilder,I am a class helper,to do the layout in RTCircularTreeMapBuilder,RTCircularTreeMapBuilder,,,,,,,,,,,,,,,,,,,,
WAHtmlHaltAndErrorHandler,"This exception handler also catches halts, in order to prevent Debugger windows from popping up and blocking server processes in deployed images.

Subclass this to provide a customized response or more advanced handling (e.g. emailing of errors).",,"This exception handler also catches halts, in order to prevent Debugger windows from popping up and blocking server processes in deployed images.","This exception handler also catches halts, in order to prevent Debugger windows from popping up and blocking server processes in deployed images.",,,,,Subclass this to provide a customized response or more advanced handling (e.g. emailing of errors).,,,,,,,,,,,,,,,
GtGraphTreemapSlice,"My subclasses implement treemap slice algorithms.
See my subclasses for more details and examples: ${class:GtGraphTreemapSlice|show=gtSubclassesFor:|expanded=true}$",,,,,,,See my subclasses for more details and examples: ${class:GtGraphTreemapSlice|show=gtSubclassesFor:|expanded=true}$,"My subclasses implement treemap slice algorithms.
See my subclasses for more details and examples: ${class:GtGraphTreemapSlice|show=gtSubclassesFor:|expanded=true}$",,,,,,,,,,,,,,,
GtGraphTreemapSliceHorizontalLayout,"I implement an horizontal slice algorithm.
I use ${class:GtGraphTreemapSliceHorizontal}$ to compute ${class:BlElement}$ children positions and extents.

!! Example 

${example:GtGraphTreemapLayoutExamples>>#numbersSliceHorizontal|codeExpanded=false|previewExpanded=true}$",I implement an horizontal slice algorithm.,,I use ${class:GtGraphTreemapSliceHorizontal}$ to compute ${class:BlElement}$ children positions and extents.,,,,,,"${class:GtGraphTreemapSliceHorizontal}$
 ${class:BlElement}$","!! Example 

${example:GtGraphTreemapLayoutExamples>>#numbersSliceHorizontal|codeExpanded=false|previewExpanded=true}$",,,,,,,,,,,,,
WAMemoryInput,"A WAMemoryInput is a dialog that allows the user to enter an amount of memory.

This is a Seaside internal class. Do not rely on it being present. If you need it, copy and paste it.","""A WAMemoryInput is a dialog that allows the user to enter an amount of memory. This is a Seaside internal class.","""A WAMemoryInput is a dialog that allows the user to enter an amount of memory.",,,,,,,,,,,,"Do not rely on it being present. If you need it, copy and paste it.""",,,,"This is a Seaside internal class. Do not rely on it being present. If you need it, copy and paste it.",,,,,
WAObjectTag,"Defines an embedded object. Use this element to add multimedia to your XHTML page.
This element allows you to specify the data and parameters for objects inserted into HTML documents, and the code that can be used to display/manipulate that data.",Defines an embedded object,"Use this element to add multimedia to your XHTML page.This element allows you to specify the data and parameters for objects inserted into HTML documents, and the code that can be used to display/manipulate that data.",,,,,,,,,,,,,,,,Use this element to add multimedia to your XHTML page.,,,,,
BrTextEditorLetterInputFilter,I only allow letters,,I only allow letters,,,,,,,,,,,,I only allow letters,,,,,,,,,
PPListPattern,"PPListPattern that is used to match any number of parsers. As its superclass, it cannot be used for actually parsing something.",,"PPListPattern that is used to match any number of parsers.As its superclass, it cannot be used for actually parsing something.",,,,,,"As its superclass, it cannot be used for actually parsing something.",,,,,,"As its superclass, it cannot be used for actually parsing something.",,,,,,,,,
GtExampleProcessor,"I am an abstract class for manipulating examples.

My subclasses can add different semantics for different use cases. For example, evaluating an example is to be treated differently from a debugging scenario, or from a scenario to recorver static dependencies.

I maintain a context that can be accessed from within the examples being processed during the execution of the processor.

#value - Execute the processor. Can return a value, depending on the processor.
#canProcess - Verifies if the processor can execute on the given example.",I am an abstract class for manipulating examples.,I maintain a context that can be accessed from within the examples being processed during the execution of the processor.,,"#value - Execute the processor. Can return a value, depending on the processor.
#canProcess - Verifies if the processor can execute on the given example.",,,,"My subclasses can add different semantics for different use cases. For example, evaluating an example is to be treated differently from a debugging scenario, or from a scenario to recorver static dependencies.",,"For example, evaluating an example is to be treated differently from a debugging scenario, or from a scenario to recorver static dependencies.",,,,,,,,,,,,,
RTBucketColor,A scale of elements is discretized into buckets where elements of each bucket is associated to an element. The buckets are formed by creating partitions uniformly.,,A scale of elements is discretized into buckets where elements of each bucket is associated to an element. The buckets are formed by creating partitions uniformly.,,,,,,,,,,,,,,,,,,,,,
PPRelativePositionStream,"A PPRelativePositionStream is a specialized stream to get the relative position according to another stream.

Instance Variables",A PPRelativePositionStream is a specialized stream to get the relative position according to another stream.,A PPRelativePositionStream is a specialized stream to get the relative position according to another stream.,,,,,,,,,,,,,,,,,,,,,
GtExampleInstanceSubject,I indicate that the subject of an example is an object. I am the default subject of an example. Other kinds of subjects should be used to inducate a particular type of object like a class or method.,I am the default subject of an example.,I indicate that the subject of an example is an object.,I am the default subject of an example.,,,,,Other kinds of subjects should be used to inducate a particular type of object like a class or method.,,,,,,,,,,,,,,,
PRPillarParserOld,"I am a parser for a Pillar syntax. 
I use the PRPillarGrammar and I build a PRDocument.",I am a parser for a Pillar syntax.,I use the PRPillarGrammar and I build a PRDocument.,I use the PRPillarGrammar and I build a PRDocument.,,,,,,"PRPillarGrammar
PRDocument.",,,,,,,,,,,,,,
BlElementRemovedEvent,"Is sent by an element after it is removed from the parent.

Note: I am not sent when element is detached!

Example:

[[[
| child parent |

child := BlElement new.
child when: BlElementRemovedEvent do: [ self inform: 'Removed from parent' ].

parent := BlElement new.
parent addChild: child.
parent removeChild: child
]]]",,,Is sent by an element after it is removed from the parent.,,,,,,,"Example:

[[[
| child parent |

child := BlElement new.
child when: BlElementRemovedEvent do: [ self inform: 'Removed from parent' ].

parent := BlElement new.
parent addChild: child.
parent removeChild: child
]]]",,,,Note: I am not sent when element is detached!,,,,,,,,,
TSpartaPaint,"! TSpartaPaint

I define an API of a Paint. Backend specific paints should use me and provide concrete implemenations of all my methods.

!! Overview
A paint is transformable and can be used with one of extend modes, for example repeat, reflect or clamp.

I am instantiated by canvas and does not supposed to be created by refering paint class directly.
Sparta canvas provides a paint builder that should be used to build concerete paints.

!! Public API and Key Messages
''I define an api of an abstract paint.''

- ==transformation== - to get current transformation matrix, can not be mil
- ==transformation:== set new paint transformation. If not set, supposed to be identity.
- ==clamp== - do not repeat me
- ==reflect== - mirror the image
- ==repeat== - repeat in both X and Y axis
- ==repeatX== - repeat only X axis
- ==repeatY== - repeat only Y axis
- ==rotateByDegrees:== rotate me by amount of degrees clockwise
- ==rotateByRadians:== rotate me by amount of radians clockwise
- ==scaleBy:== scale me by a factor, a Point or a number.
- ==translateBy:== translate me by a Point or a number
 
!! Internal Representation and Key Implementation Points.

Generally, a Paint is not meant to be an external object, however for additional flexibility I am implemented as a Trait.",,"! TSpartaPaint

I define an API of a Paint.

!! Overview
A paint is transformable and can be used with one of extend modes, for example repeat, reflect or clamp.","I am instantiated by canvas and does not supposed to be created by refering paint class directly.
Sparta canvas provides a paint builder that should be used to build concerete paints.","!! Public API and Key Messages
''I define an api of an abstract paint.''

- ==transformation== - to get current transformation matrix, can not be mil
- ==transformation:== set new paint transformation. If not set, supposed to be identity.
- ==clamp== - do not repeat me
- ==reflect== - mirror the image
- ==repeat== - repeat in both X and Y axis
- ==repeatX== - repeat only X axis
- ==repeatY== - repeat only Y axis
- ==rotateByDegrees:== rotate me by amount of degrees clockwise
- ==rotateByRadians:== rotate me by amount of radians clockwise
- ==scaleBy:== scale me by a factor, a Point or a number.
- ==translateBy:== translate me by a Point or a number","!! Internal Representation and Key Implementation Points.

Generally, a Paint is not meant to be an external object, however for additional flexibility I am implemented as a Trait.",,,,,,,,,,,,Backend specific paints should use me and provide concrete implemenations of all my methods.,,,,,,
GtDiagrammerEllipseStencil,I create an ellipse element,,I create an ellipse element,,,,,,,,,,,,,,,,,,,,,
BlSelection,I represent a text selection defined as interval [from...to],I represent a text selection defined as interval [from...to],,,,,,,,,,,,,,,,,,,,,,
GtDiagrammerArrowheadNoneStencil,I am used to remove arrow heads,,I am used to remove arrow heads,,,,,,,,,,,,,,,,,,,,,
PMSingularValueDecompositionTest,"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:

For the Class part: State a one line summary. For example, ""I represent a paragraph of text"".

For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.

For the Collaborators Part: State my main collaborators and one line about how I interact with them. 

Public API and Key Messages
- message one 
- message two 
- (for bonus points) how to create instances.

 One simple example is simply gorgeous.
 
Internal Representation and Key Implementation Points.

 Instance Variables
 ones: <Object>
 randomMatrix: <Object>
 s_matrix: <Object>
 u: <Object>
 v: <Object>


 Implementation Points",,,,,,"Instance Variables
 ones: <Object>
 randomMatrix: <Object>
 s_matrix: <Object>
 u: <Object>
 v: <Object>",,,,,"Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:

For the Class part: State a one line summary. For example, ""I represent a paragraph of text"".

For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.

For the Collaborators Part: State my main collaborators and one line about how I interact with them. 

Public API and Key Messages
- message one 
- message two 
- (for bonus points) how to create instances.

 One simple example is simply gorgeous.
 
Internal Representation and Key Implementation Points.

 Implementation Points",,,,,,,,,,,,
WADevelopment,A WADevelopment is a collection of convenience methods for dealing with Seaside development in Squeak. This code is not supposed to be ported.,A WADevelopment is a collection of convenience methods for dealing with Seaside development in Squeak.,A WADevelopment is a collection of convenience methods for dealing with Seaside development in Squeak.,,,,,,,,,,,,This code is not supposed to be ported.,,,,,,,,,
BlTextBackgroundAttribute,"I represent a text background attribute.
I am used together with BrText and BrTextStyler to style text.

Public API and Key Messages

- paint: set background paint

Example:

 BrTextBackgroundAttribute paint: Color yellow
 
Internal Representation and Key Implementation Points.

 Instance Variables
 paint: <Object> can be a Color, Pattern, Gradient. Basically anything that is knows how to convert itself to canvas specific paint",I represent a text background attribute.,I am used together with BrText and BrTextStyler to style text.,I am used together with BrText and BrTextStyler to style text.,"Public API and Key Messages

- paint: set background paint",,"Instance Variables
 paint: <Object> can be a Color, Pattern, Gradient. Basically anything that is knows how to convert itself to canvas specific paint",,,,"Example:

 BrTextBackgroundAttribute paint: Color yellow",,,,,,,,,,,,,
PRDocumentListAnnotation,"I am class representing a DocumentListAnnotation. 
I allow users to get abstracts of files located in a directory and specify a link to access these files.
I can choose the number of files to take and the way to sort them.
We can also choose they way abstracts will be represented by specifying templates. We ahave the possibility of giving multiple templates.
Then abstracts will alternately change templates if you specified mutliple directories.

When no template file is specified, abstracts are generated as DocumentGroup containing different files elements.
With templates the annotation is remplaced by a Raw document in Html.
For templates values, you can not specify directories, only .mustache files. You have to specify complete path starting from the project directory.
Also for the path, the complete path from the project directory.

${docList:path=blogs|limit=3|sort=date|templates=#('templates/docArticle.mustache' 'templates/template.mustache')}$

${docList:path=wrongDirectory|limit=3|sort=date|templates=#('templates/docArticle.mustache' 'templates/template.mustache')}$ should raise an Error","""I am class representing a DocumentListAnnotation.","I allow users to get abstracts of files located in a directory and specify a link to access these files.
I can choose the number of files to take and the way to sort them.
We can also choose they way abstracts will be represented by specifying templates. We ahave the possibility of giving multiple templates.
Then abstracts will alternately change templates if you specified mutliple directories.

When no template file is specified, abstracts are generated as DocumentGroup containing different files elements.
With templates the annotation is remplaced by a Raw document in Html.
For templates values, you can not specify directories, only .mustache files. You have to specify complete path starting from the project directory.",,,,,,,,"Also for the path, the complete path from the project directory.

${docList:path=blogs|limit=3|sort=date|templates=#('templates/docArticle.mustache' 'templates/template.mustache')}$

${docList:path=wrongDirectory|limit=3|sort=date|templates=#('templates/docArticle.mustache' 'templates/template.mustache')}$ should raise an Error""",,,,"For templates values, you can not specify directories, only .mustache files. You have to specify complete path starting from the project directory.",,,,,,,,,
RTLineDecorationExample,"RTLineDecorationExample new installTitle: 'Cool' 
 code:
 '
 | v b1 b2 edges |
 b1 := (RTBox new
 size: 100;
 element)
 translateTo: 0 @ 0;
 @ RTDraggable.
 b2 := (RTBox new
 size: 100;
 element)
 translateTo: 400 @ 0;
 @ RTDraggable.
 edges := OrderedCollection new.
 edges add: ((RTArrowedLine new head: RTFilledDiamond asHead; color: Color black; width: 2; attachPoint: (RTRectangleAttachPoint new offset: 15)) edgeFrom: b1 to: b2).
 edges add: ((RTDecoratedLine new color: Color blue; width: 2; attachPoint: (RTRectangleAttachPoint new offset: 15)) edgeFrom: b1 to: b2).
 edges add: ((RTDecoratedLine new filledDiamondHead; color: Color green; width: 2; attachPoint: (RTRectangleAttachPoint new offset: 15)) edgeFrom: b1 to: b2).
 edges add: ((RTDecoratedLine new filledDiamondHead; emptyCircleTail; color: Color red; width: 2; attachPoint: (RTRectangleAttachPoint new offset: 15)) edgeFrom: b1 to: b2).


v := RTView new
 add: b1;
 add: b2;
 addAll: edges.
edges do: [ :each | each update ].
v
'",,,,,,,,,,"RTLineDecorationExample new installTitle: 'Cool' 
 code:
 '
 | v b1 b2 edges |
 b1 := (RTBox new
 size: 100;
 element)
 translateTo: 0 @ 0;
 @ RTDraggable.
 b2 := (RTBox new
 size: 100;
 element)
 translateTo: 400 @ 0;
 @ RTDraggable.
 edges := OrderedCollection new.
 edges add: ((RTArrowedLine new head: RTFilledDiamond asHead; color: Color black; width: 2; attachPoint: (RTRectangleAttachPoint new offset: 15)) edgeFrom: b1 to: b2).
 edges add: ((RTDecoratedLine new color: Color blue; width: 2; attachPoint: (RTRectangleAttachPoint new offset: 15)) edgeFrom: b1 to: b2).
 edges add: ((RTDecoratedLine new filledDiamondHead; color: Color green; width: 2; attachPoint: (RTRectangleAttachPoint new offset: 15)) edgeFrom: b1 to: b2).
 edges add: ((RTDecoratedLine new filledDiamondHead; emptyCircleTail; color: Color red; width: 2; attachPoint: (RTRectangleAttachPoint new offset: 15)) edgeFrom: b1 to: b2).


v := RTView new
 add: b1;
 add: b2;
 addAll: edges.
edges do: [ :each | each update ].
v
'",,,,,,,,,,,,,
WAImageButtonTag,"Creates a graphical submit button. The value of the src attribute specifies the URI of the image that will decorate the button. For accessibility reasons, authors should provide alternate text for the image via the alt attribute. 

When a pointing device is used to click on the image, the form is submitted and the click coordinates passed to the server. The x value is measured in pixels from the left of the image, and the y value in pixels from the top of the image. The submitted data includes name.x=x-value and name.y=y-value where ""name"" is the value of the name attribute, and x-value and y-value are the x and y coordinate values, respectively.",,"""Creates a graphical submit button. The value of the src attribute specifies the URI of the image that will decorate the button.",,,"For accessibility reasons, authors should provide alternate text for the image via the alt attribute. 

When a pointing device is used to click on the image, the form is submitted and the click coordinates passed to the server. The x value is measured in pixels from the left of the image, and the y value in pixels from the top of the image. The submitted data includes name.x=x-value and name.y=y-value where """"name"""" is the value of the name attribute, and x-value and y-value are the x and y coordinate values, respectively.""",,,,,,,src attribute specifies the URI,,"For accessibility reasons, authors should provide alternate text for the image via the alt attribute.",,,,,,,,,
FamixTDereferencedInvocation,"Represents an invocation which function is contained in a pointer.

The function itself is typically unknown (referenced by the pointer).

It has a referencer which is the pointer variable",Represents an invocation which function is contained in a pointer.,The function itself is typically unknown (referenced by the pointer).It has a referencer which is the pointer variable,,,,,,,,,,,,The function itself is typically unknown (referenced by the pointer).,,,,,,,,,
PRHTMLScriptLanguage,Hypertext markup language,Hypertext markup language,,,,,,,,,,,,,,,,,,,,,,
BlMatrix2D,"I represent a matrix used for 2D affine transformations.
https://en.wikipedia.org/wiki/Matrix_(mathematics)

My components are named according to mathematical convention:

 | a11 a12 | | sx shy |
 | a21 a22 | => | shx sy |
 | a31 a32 | | x y |",I represent a matrix used for 2D affine transformations.,,,,"My components are named according to mathematical convention:

 | a11 a12 | | sx shy |
 | a21 a22 | => | shx sy |
 | a31 a32 | | x y |",,,,,,,,,,,https://en.wikipedia.org/wiki/Matrix_(mathematics),,,,,,,
PRPreformatted,I am preformatted text or source code. My children are instances of *PRText*.,I am preformatted text or source code.,,,,,,,My children are instances of *PRText*.,,,,,,,,,,,,,,,
BlExampleCustomEventTarget,I am an example of a custom non-element event target that can be nicely integrated in bloc infrastructure,I am an example of a custom non-element event target,that can be nicely integrated in bloc infrastructure,,,,,,,,,,,,,,,,,,,,,
TOODependencyQueries,"A TOODependencyQueries defines a vocabulary to compute dependencies of object-oriented entities.

For more informations: https://moosequery.ferlicot.fr/",,A TOODependencyQueries defines a vocabulary to compute dependencies of object-oriented entities.,,,,,For more informations: https://moosequery.ferlicot.fr/,,,,,,,,,https://moosequery.ferlicot.fr/,,,,,,,
BlElementCenterLeftAnchor,My position is equal to the left center of a reference element,,My position is equal to the left center of a reference element,My position is equal to the left center of a reference element,,,,,,,,,,,,,,,,,,,,
GtGraphForceBasedLayout,"A ROForceBasedLayout is inspired from the Code of D3. The original d3 version may be found on: http://bl.ocks.org/mbostock/4062045

Layout algorithm inspired by Tim Dwyer and Thomas Jakobsen.

Instance Variables
 alpha: <Object>
 center: <Object>
 charge: <Object>
 charges: <Object>
 fixedNodes: <Object>
 friction: <Object>
 gravity: <Object>
 layoutInitial: <Object>
 length: <Object>
 lengths: <Object>
 nodes: <Object>
 oldPositions: <Object>
 strength: <Object>
 strengths: <Object>
 theta: <Object>
 weights: <Object>

alpha
 - xxxxx

center
 - xxxxx

charge
 - xxxxx

charges
 - xxxxx

fixedNodes
 - xxxxx

friction
 - xxxxx

gravity
 - xxxxx

layoutInitial
 - xxxxx

length
 - xxxxx

lengths
 - xxxxx

nodes
 - xxxxx

oldPositions
 - xxxxx

strength
 - xxxxx

strengths
 - xxxxx

theta
 - xxxxx

weights
 - xxxxx",A ROForceBasedLayout is inspired from the Code of D3.,,,,,"Instance Variables
 alpha: <Object>
 center: <Object>
 charge: <Object>
 charges: <Object>
 fixedNodes: <Object>
 friction: <Object>
 gravity: <Object>
 layoutInitial: <Object>
 length: <Object>
 lengths: <Object>
 nodes: <Object>
 oldPositions: <Object>
 strength: <Object>
 strengths: <Object>
 theta: <Object>
 weights: <Object>

alpha
 - xxxxx

center
 - xxxxx

charge
 - xxxxx

charges
 - xxxxx

fixedNodes
 - xxxxx

friction
 - xxxxx

gravity
 - xxxxx

layoutInitial
 - xxxxx

length
 - xxxxx

lengths
 - xxxxx

nodes
 - xxxxx

oldPositions
 - xxxxx

strength
 - xxxxx

strengths
 - xxxxx

theta
 - xxxxx

weights
 - xxxxx","The original d3 version may be found on: http://bl.ocks.org/mbostock/4062045

Layout algorithm inspired by Tim Dwyer and Thomas Jakobsen.",,,,,,,,,The original d3 version may be found on: http://bl.ocks.org/mbostock/4062045,,,,,,Layout algorithm inspired by Tim Dwyer and Thomas Jakobsen.,
PMAccuracy,Accuracy is a framework for testing the numerical accuracy of the results of methods.,Accuracy is a framework for,for testing the numerical accuracy of the results of methods.,,,,,,,,,,,,,,,,,,,,,
WAPharoUrlEncoder,I am a Pharo specific URL encoder.,I am a Pharo specific URL encoder.,,,,,,,,,,,URL,,,,,,,,,,,
BlTextUnderlineAttribute,"! Underline
I represent a text underline attribute.
I am used together with ${class:BlText}$ and ${class:TBlTextStyleable}$ to style text.

https://en.wikipedia.org/wiki/Underline

See ${class:BlTextUnderlineAttributeExamples}$ for examples",I represent a text underline attribute.,I am used together with ${class:BlText}$ and ${class:TBlTextStyleable}$ to style text.,I am used together with ${class:BlText}$ and ${class:TBlTextStyleable}$ to style text.,,,,"https://en.wikipedia.org/wiki/Underline

See ${class:BlTextUnderlineAttributeExamples}$ for examples",,,,,,,,,https://en.wikipedia.org/wiki/Underline,,,,,,,
SkiaFilterSourceCanvas,When canvas is a source of a filter we should take its snapshot,,,,,,,,,,,,,,,,,,,When canvas is a source of a filter we should take its snapshot,,,,
WARequestContext,"WARequestContext encapsulates all the knowledge that should be available while processing a single request. It does not matter if this is a request to a static file, an AJAX request, a long Comet request or a normal Seaside requestion.

The request context is valid only during the request that caused it. It should not be stored. Neither within instance variables, nor within the execution stack so that it might be captured by a continuation. In both cases this might lead to memory leaks.",,"WARequestContext encapsulates all the knowledge that should be available while processing a single request. It does not matter if this is a request to a static file, an AJAX request, a long Comet request or a normal Seaside requestion.",,,The request context is valid only during the request that caused it.,,,,,,,,,"It should not be stored. Neither within instance variables, nor within the execution stack so that it might be captured by a continuation. In both cases this might lead to memory leaks.",,,,"It should not be stored. Neither within instance variables, nor within the execution stack so that it might be captured by a continuation. In both cases this might lead to memory leaks.",,,,,
PRFootnote,"I am a footnote, you can create me with :

noted: aString

It create a footnote with note specified in parameter.",I am a footnote,It create a footnote with note specified in parameter.,,,,,,,,noted: aString,,,,,,,,,,,,,
BlSpartaMozSkiaCanvasBuilder,"I am a copy of class BlSpartaMozCanvasBuilder. This comment is copied from there, and might not be entirely accurate

I build sparta canvas using Moz2D backend",I am a copy of class BlSpartaMozCanvasBuilder.,I build sparta canvas using Moz2D backend,,,,,I am a copy of class BlSpartaMozCanvasBuilder.,,,,,,,"This comment is copied from there, and might not be entirely accurate",,,,,,,,,
RTRectangleAttachPoint,"Continuous attach point which presumes both shapes are not rotated rectangles

-=-=-=
v := RTView new.

e1 := (RTBox new size: 50) elementOn: 1.
e2 := (RTEllipse new size: 50) elementOn: 2.
v add: e1; add: e2.
e2 translateBy: 30 @ 60.

e1 @ RTDraggable.
e2 @ RTDraggable.

s := RTArrowedLine new color: Color black.
s attachPoint: RTRectangleAttachPoint new.
l := s edgeFrom: e1 to: e2.
v add: l.

v
-=-=-=",,Continuous attach point which presumes both shapes are not rotated rectangles,,,,,,,,"-=-=-=
v := RTView new.

e1 := (RTBox new size: 50) elementOn: 1.
e2 := (RTEllipse new size: 50) elementOn: 2.
v add: e1; add: e2.
e2 translateBy: 30 @ 60.

e1 @ RTDraggable.
e2 @ RTDraggable.

s := RTArrowedLine new color: Color black.
s attachPoint: RTRectangleAttachPoint new.
l := s edgeFrom: e1 to: e2.
v add: l.

v
-=-=-=",,,,,,,,,,,,,
BlMorphicWindowHost,I am a concrete implementation of a BlHost that allows users to open host bloc spaces within Moprhic windows,I am a concrete implementation of a BlHost,that allows users to open host bloc spaces within Moprhic windows,that allows users to open host bloc spaces within Moprhic windows,,,,,,BlHost,,,,,,,,,,,,,,
BlGeometryElement,I am a root class of geometry elements - elements driven by geometry anchors.,I am a root class of geometry elements,I am a root class of geometry elements - elements driven by geometry anchors.,,,,,,,,,,,,,,,,,,,,,
MalFormalContext,MalFormalContext mammals2 computeConcepts,,,,,,,,,,MalFormalContext mammals2 computeConcepts,,,,,,,,,,,,,
PMHyperDualNumber,"PMHyperDualNumbers can be used to additionally calculate second order derivatives.
They can be mixed with Numbers, not with PMDualNumbers.",,"PMHyperDualNumbers can be used to additionally calculate second order derivatives.They can be mixed with Numbers, not with PMDualNumbers.",,,,,,,,,,,,,,,,"They can be mixed with Numbers, not with PMDualNumbers.",,,,,
GtGraphCircleEnclosure,"! Smallest enclosing circle of circles

I compute the smallest circle that encloses the specified array of circles. The enclosing circle is computed using the *Matoušek-Sharir-Welzl>http://www.inf.ethz.ch/personal/emo/PublFiles/SubexLinProg_ALG16_96.pdf* algorithm.

The implementation is based on *d3.packEnclose(circles)>https://github.com/d3/d3-hierarchy/blob/master/src/pack/enclose.js*

Let's start with an empty enclosure:
${example:GtGraphCircleEnclosureExamples>>#emptyEnclosure|previewShow=#gtPreviewFor:|previewHeight=300}$

and add circles one by one, starting with a larger one. A circle enclosure is represented by a cyan circle. An enclosure of a single circle is a special case and can be computed directly by ${method:GtGraphCircleEnclosure class>>#enclosure:}$. Note, that the added circle has a margin set which is taken into account by enclosure:
${example:GtGraphCircleEnclosureExamples>>#enclosureWithOneCircle|previewShow=#gtPreviewFor:|previewExpanded|previewHeight=300}$

adding a second circle expands the enclosure circle to fit both circles ==C1== and ==C2==. Two circle enclosure is also a special case and can be derived directly by ${method:GtGraphCircleEnclosure class>>#enclosure:and:}$
${example:GtGraphCircleEnclosureExamples>>#enclosureWithTwoCircles|previewShow=#gtPreviewFor:|previewExpanded|previewHeight=300}$

Three circle enclosure is a special case too. ${method:GtGraphCircleEnclosure class>>#enclosure:and:and:}$ is responsible for the computation. Let's add the third circle to our enclosure to see the result: 
${example:GtGraphCircleEnclosureExamples>>#enclosureWithThreeCircles|previewShow=#gtPreviewFor:|previewExpanded|previewHeight=300}$

Starting with four circles, an enclosure should be computed recursively by building and updating a basis enclosure consisting of one to three circles: ${method:GtGraphCircleEnclosure class>>#enclosureAll:}$. 

${example:GtGraphCircleEnclosureExamples>>#enclosureWithFourCircles|previewShow=#gtPreviewFor:|previewExpanded|previewHeight=300}$",! Smallest enclosing circle of circles,I compute the smallest circle that encloses the specified array of circles. The enclosing circle is computed using the,,,,,"The enclosing circle is computed using the *Matoušek-Sharir-Welzl>http://www.inf.ethz.ch/personal/emo/PublFiles/SubexLinProg_ALG16_96.pdf* algorithm.
The implementation is based on *d3.packEnclose(circles)>https://github.com/d3/d3-hierarchy/blob/master/src/pack/enclose.js",,,,,,,,,"http://www.inf.ethz.ch/personal/emo/PublFiles/SubexLinProg_ALG16_96.pdf
https://github.com/d3/d3-hierarchy/blob/master/src/pack/enclose.js",,,,,,,
PRLaTeXEnvironment,"A LaTeX environment

To emit

\begin{XXX}
kjlkjkl
\end{XXX}",A LaTeX environment,To emit,,,,,,,,"\begin{XXX}
kjlkjkl
\end{XXX}",,,,,,,,,,,,,
PRPhase,"I am an abstract class to describe a Phase of an export. 
A Phase takes an input, transforms it and returns an output.

A phase holds a configuration. This configuration is a the configuration of the export.

To create a new phase you have to define its prority as a class method then to define the action of the Phase with a method actionOn: anInput. This method will return an output. 
You can also add some transformations to the output like: 

transformerInputFileOn: aCollection
 <pillarTransformer: 1> ""the parameter is the priority of the transformation""
 aCollection
 do: [ :each | 
 PRFileInclusion new
 configuration: self configuration;
 start: each ]",I am an abstract class to describe a Phase of an export.,"A Phase takes an input, transforms it and returns an output.

A phase holds a configuration. This configuration is a the configuration of the export.",,,,,,,,"To create a new phase you have to define its prority as a class method then to define the action of the Phase with a method actionOn: anInput. This method will return an output. 
You can also add some transformations to the output like: 

transformerInputFileOn: aCollection
 <pillarTransformer: 1> ""the parameter is the priority of the transformation""
 aCollection
 do: [ :each | 
 PRFileInclusion new
 configuration: self configuration;
 start: each ]",,,,,,,,,,,,,
BlElementPositionChangeTest,I contain examples of position change logging functionality,,I contain examples of position change logging functionality,,,,,,,,,,,,,,,,,,,,,
RTSunburstBuilderExamples,"RTSunburstBuilderExamples new installTitle: 'basic15' 
 code:
 '
 | b |
 b := RTSunburstBuilder new.
 b strategy: (RTSunburstExtentStrategy new extent: 800@800).
 b shape colorElement: [ :el | el model subclasses isEmpty ifTrue: [ Color purple ] ifFalse: [ Color lightGray ] ].

 b explore: Morph using: #subclasses.
 b view @ RTDraggableView.
 b build.
 ^ b view'",,,,,,,,,,"RTSunburstBuilderExamples new installTitle: 'basic15' 
 code:
 '
 | b |
 b := RTSunburstBuilder new.
 b strategy: (RTSunburstExtentStrategy new extent: 800@800).
 b shape colorElement: [ :el | el model subclasses isEmpty ifTrue: [ Color purple ] ifFalse: [ Color lightGray ] ].

 b explore: Morph using: #subclasses.
 b view @ RTDraggableView.
 b build.
 ^ b view'",,,,,,,,,,,,,
RTBox,"A RTBox is a rectangular box. E.g.,

| v |
v := RTView new.
v add: (RTBox new width: 10; height: 20) element.
v open","""A RTBox is a rectangular box.",,,,,,,,,"E.g.,

| v |
v := RTView new.
v add: (RTBox new width: 10; height: 20) element.
v open""",,,,,,,,,,,,,
WAUrlAttribute,WAUrlAttribute represents a URL attribute. It converts between text entered on the configuration page and WAUrl instances.,WAUrlAttribute represents a URL attribute.,It converts between text entered on the configuration page and WAUrl instances.,,,,,,,,,,,,,,,,,,,,,
WACookie,"I represent a cookie, a piece of information that is stored on the client and read and writable by the server. I am basically a key/value pair of strings.
You can never trust information in a cookie, the client is free to edit it.
I model only a part of the full cookie specification.

Browser support:
http://www.mnot.net/blog/2006/10/27/cookie_fun

Netscape spec
http://cgi.netscape.com/newsref/std/cookie_spec.html

Cookie spec
http://tools.ietf.org/html/rfc2109

Cookie 2 spec
https://tools.ietf.org/html/rfc6265

HttpOnly
http://msdn2.microsoft.com/en-us/library/ms533046.aspx
https://bugzilla.mozilla.org/show_bug.cgi?id=178993

Compared to WARequestCookie I represent the information that is sent to the user agent.","I represent a cookie, a piece of information that is stored on the client and read and writable by the server. I am basically a key/value pair of strings.
I represent the information that is sent to the user agent.",I model only a part of the full cookie specification.,Compared to WARequestCookie I represent the information that is sent to the user agent.,,"Browser support:
http://www.mnot.net/blog/2006/10/27/cookie_fun

Netscape spec
http://cgi.netscape.com/newsref/std/cookie_spec.html

Cookie spec
http://tools.ietf.org/html/rfc2109

Cookie 2 spec
https://tools.ietf.org/html/rfc6265

HttpOnly
http://msdn2.microsoft.com/en-us/library/ms533046.aspx
https://bugzilla.mozilla.org/show_bug.cgi?id=178993",,"Browser support:
http://www.mnot.net/blog/2006/10/27/cookie_fun

Netscape spec
http://cgi.netscape.com/newsref/std/cookie_spec.html

Cookie spec
http://tools.ietf.org/html/rfc2109

Cookie 2 spec
https://tools.ietf.org/html/rfc6265

HttpOnly
http://msdn2.microsoft.com/en-us/library/ms533046.aspx
https://bugzilla.mozilla.org/show_bug.cgi?id=178993",,,,,,,"You can never trust information in a cookie, the client is free to edit it.",,"Browser support:
http://www.mnot.net/blog/2006/10/27/cookie_fun

Netscape spec
http://cgi.netscape.com/newsref/std/cookie_spec.html

Cookie spec
http://tools.ietf.org/html/rfc2109

Cookie 2 spec
https://tools.ietf.org/html/rfc6265

HttpOnly
http://msdn2.microsoft.com/en-us/library/ms533046.aspx
https://bugzilla.mozilla.org/show_bug.cgi?id=178993",,,,,,,
GtGradAbstractTreeLayout,"This an implementation of a Moen's tree layout algorithm.
Moen's algorithm attempts to create a tree with a triangular shape and place nodes somewhat simetrically. It is an extension of the well-known Reingold-Tilfold algorithm. It improved the older algorithm's ability to handle non-uniform sized nodes. Moen's trees are oriented horizontally. However, this implementation offers the posibility of choosing the orientation - vertical or horizontal. 

The Reingold-Tilfold algorithm, and thus Moen's also, starts with a bottom-up traversal of the tree. It calculates left and right subtrees of a tree and merges them. When doing that, it makes sure that the parents are centered above their children. Reignold-Tilfold's algorithm was originally designed only for binary trees, but later extended to work for non-binary ones as well. While Reignold-Tilfold's algorithm produces a compact tree layout, Moen's strives to make a tighter one. To accomplish that, it uses shapes represented by polyline structures. These shapes are initially formed for each leaf, so that the polyline goes around the node, but leaves the left side open. During the first phase of the algorithm's execution (bottom-up traversal), these shapes are merged - shapes of parents are merged with shapes of children. In this implementation, we call the polylines contours. When merging contours, minimum horizontal/vertical offsets at which siblings can be placed with resepct to their upper (left) sibling (depending of the layout's orientation) are calculated

Once the bottom-up traversal is finished, calculation of offsets is finished as well. At that point, the tree is traversed again, but this time from top (root) to the bottom. During this second traversal, positions of the tree's nodes are set. Calculation of positions factors in the mentioned offsets, as well as the positions of the node's parent and the layout's node and level distance properties.

Additionally, this implementation supports alignment of nodes (top, center, bottom in case of the vertical layout and left, center, right in case of the horizontal layout). This is done through calculation of differences in sizes of nodes compared to the largest nodes on the same level, as well as the differences in sizes of their parents compared to the largest nodes on the parent level.

GtGradTreeLayout is a superclass of GtGradHorizontalTreeLayout and GtGradVerticalTreeLayout classes and contains generic tree layout methods and definitions of methods the two subclasses need to redefine. Generally, the differences between the implementations of the hozitonal and vertical variants are really small, revolving around one using or setting the x and the other y coordinates.

The tree algorithms can be used to lay out inner elements of a Bloc element or a Mondrian view.",This an implementation of a Moen's tree layout algorithm.,"However, this implementation offers the posibility of choosing the orientation - vertical or horizontal. 
 In this implementation, we call the polylines contours. When merging contours, minimum horizontal/vertical offsets at which siblings can be placed with resepct to their upper (left) sibling (depending of the layout's orientation) are calculated

Once the bottom-up traversal is finished, calculation of offsets is finished as well. At that point, the tree is traversed again, but this time from top (root) to the bottom. During this second traversal, positions of the tree's nodes are set. Calculation of positions factors in the mentioned offsets, as well as the positions of the node's parent and the layout's node and level distance properties.

Additionally, this implementation supports alignment of nodes (top, center, bottom in case of the vertical layout and left, center, right in case of the horizontal layout). This is done through calculation of differences in sizes of nodes compared to the largest nodes on the same level, as well as the differences in sizes of their parents compared to the largest nodes on the parent level.","GtGradTreeLayout is a superclass of GtGradHorizontalTreeLayout and GtGradVerticalTreeLayout classes and contains generic tree layout methods and definitions of methods the two subclasses need to redefine. Generally, the differences between the implementations of the hozitonal and vertical variants are really small, revolving around one using or setting the x and the other y coordinates.",,"Moen's algorithm attempts to create a tree with a triangular shape and place nodes somewhat simetrically. It is an extension of the well-known Reingold-Tilfold algorithm. It improved the older algorithm's ability to handle non-uniform sized nodes. Moen's trees are oriented horizontally.

The Reingold-Tilfold algorithm, and thus Moen's also, starts with a bottom-up traversal of the tree. It calculates left and right subtrees of a tree and merges them. When doing that, it makes sure that the parents are centered above their children. Reignold-Tilfold's algorithm was originally designed only for binary trees, but later extended to work for non-binary ones as well. While Reignold-Tilfold's algorithm produces a compact tree layout, Moen's strives to make a tighter one. To accomplish that, it uses shapes represented by polyline structures. These shapes are initially formed for each leaf, so that the polyline goes around the node, but leaves the left side open. During the first phase of the algorithm's execution (bottom-up traversal), these shapes are merged - shapes of parents are merged with shapes of children.",,,"GtGradTreeLayout is a superclass of GtGradTreeLayout and GtGradVerticalTreeLayout classes and contains generic tree layout methods and definitions of methods the two subclasses need to redefine. Generally, the differences between the implementations of the hozitonal and vertical variants are really small, revolving around one using or setting the x and the other y coordinates.","GtGradTreeLayout
GtGradTreeLayout
GtGradVerticalTreeLayout",,,,,,,,The tree algorithms can be used to lay out inner elements of a Bloc element or a Mondrian view.,,,,,,
BlTextElementMeasurementStrategyExamples,"! Text measurement strategies

${class:BlTextElement}$ provides different text measurement strategies, each suitable for a specific use case. There is no perfect strategy, therefore understanding the differences between them is an important step in learning how to work with Text in Bloc.

!! Label measurement

The default text measurement strategy is so called ==Label measurement==, ${method:BlTextElement>>#labelMeasurement}$. The height of the text element in this case is a sum of ascent and descent which is given by the font. It means that the height of the text is independent from the content. The width is given by the exact bounds of the element's text. ==Label measurement== is useful for displaying labels and short pieces of text. Please note, that since the width is precise and depends on the content, whitespace is not taken into account when computing the width of the text element.
${example:BlTextElementMeasurementStrategyExamples>>#textElementWithLabelMeasurement|noCode|previewShow=#gtLiveFor:|previewHeight=100}$

!! Editor measurement

A similar measurement strategy which is designed to be used in a text editor computes the width of the element using the ==#advance== property of a text paragraph. The height is computed as a sum of ascent and descent. ${method:BlTextElement>>#editorMeasurement}$
${example:BlTextElementMeasurementStrategyExamples>>#textElementWithEditorMeasurement|noCode|previewShow=#gtLiveFor:|previewHeight=100}$

!! Precise measurement

However, sometimes we want to know the exact and precise text bounds. ${method:BlTextElement>>#tightMeasurement}$ does exactly that and clips off any white space surrounding the text. It may be useful for displaying a short piece of a text, usually a word centered within a larger element.
${example:BlTextElementMeasurementStrategyExamples>>#textElementWithTightMeasurement|noCode|previewShow=#gtLiveFor:|previewHeight=75}$

!! Conslusion

Now let's compare all text measurement strategies:
${example:BlTextElementMeasurementStrategyExamples>>#measurementDifference|noCode|previewShow=#gtLiveFor:|previewHeight=220}$",,,"${class:BlTextElement}$ provides different text measurement strategies, each suitable for a specific use case. There is no perfect strategy, therefore understanding the differences between them is an important step in learning how to work with Text in Bloc.",,,,,,,"Now let's compare all text measurement strategies:
""! Text measurement strategies

${class:BlTextElement}$ provides different text measurement strategies, each suitable for a specific use case. There is no perfect strategy, therefore understanding the differences between them is an important step in learning how to work with Text in Bloc.

!! Label measurement

The default text measurement strategy is so called ==Label measurement==, ${method:BlTextElement>>#labelMeasurement}$. The height of the text element in this case is a sum of ascent and descent which is given by the font. It means that the height of the text is independent from the content. The width is given by the exact bounds of the element's text. ==Label measurement== is useful for displaying labels and short pieces of text. Please note, that since the width is precise and depends on the content, whitespace is not taken into account when computing the width of the text element.
${example:BlTextElementMeasurementStrategyExamples>>#textElementWithLabelMeasurement|noCode|previewShow=#gtLiveFor:|previewHeight=100}$

!! Editor measurement

A similar measurement strategy which is designed to be used in a text editor computes the width of the element using the ==#advance== property of a text paragraph. The height is computed as a sum of ascent and descent. ${method:BlTextElement>>#editorMeasurement}$
${example:BlTextElementMeasurementStrategyExamples>>#textElementWithEditorMeasurement|noCode|previewShow=#gtLiveFor:|previewHeight=100}$

!! Precise measurement

However, sometimes we want to know the exact and precise text bounds. ${method:BlTextElement>>#tightMeasurement}$ does exactly that and clips off any white space surrounding the text. It may be useful for displaying a short piece of a text, usually a word centered within a larger element.
${example:BlTextElementMeasurementStrategyExamples>>#textElementWithTightMeasurement|noCode|previewShow=#gtLiveFor:|previewHeight=75}$

!! Conslusion

Now let's compare all text measurement strategies:
${example:BlTextElementMeasurementStrategyExamples>>#measurementDifference|noCode|previewShow=#gtLiveFor:|previewHeight=220}$""",,,,,,,,,,,,,
SpartaCanvas,"! SpartaCanvas
I represent a Sparta canvas and provide an API to perform various drawing operations.
I define an abstract API of Sparta canvas that all concrete implementations must have.

!! Overview
My main responsibility is to create and provide backend specific builders and various objects.

In order to create and perform a drawing operation users should rely on corresponding builder.
For example if one wants to fill a path with a paint she needs to send #fill message to canvas to get a fill builder (painter).

There is a separate builder for every single operation. They can be found in ""api"" protocol.

I'm also responsible for creation of filter primitives (filter types) that are used with ""filter"" operation.
They can be found in ""filters"" protocol.

I am polymorphic with ==SpartaSurface==.

!! Public API and Key Messages

- ==fill== - create a builder of fill drawing operation 
- ==stroke== - create a builder of stroke drawing operation
- ==path== - create a path builder
- ==paint== - create a paint builder (linear, radial gradients)
- ==clip== - create a builder to clip canvas by path (or rectangle)
- ==transform== - create a builder to transform canvas
- ==font== - create a font build helper
- ==text== - create a text rendering builder
- ==filter== - create a builder of filter drawing operation
- ==mask== - create a builder of masking draw operation
- ==bitmap== - create a bitmap factory
- ==shape== - create a common shapes factory (ellipse, rounded rectangle, etc)
- ==filters== - create a common filters factory

- ==extent== - get my size (width@height)
- ==similar:== - to create an empty canvas of size anExtent and of the same type and format 
- ==asForm== - to rasterize myself and return resulting image as Form

''I am an abstract class and should not be instantiated. However, the best way to create an instance of sparta canvas is to send extent: message.''

!! Example:

Create an empty canvas of size 400@250:
[[[language=smalltalk
canvas := SpartaCanvas extent: 400@250.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/01_empty.png|label=emptyCanvas+


Create a triangle vector path:
[[[language=smalltalk
triangle := canvas path
 moveTo: 100@0;
 lineTo: 200@200;
 lineTo: 0@200;
 close;
 finish.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/02_triangle_path.png|label=trianglePath+

Create a linear gradient:
[[[language=smalltalk
linearGradient := canvas paint linearGradient
 begin: 50@100;
 end: 150@200;
 stops: { 0 -> Color red. 1 -> Color blue }.
]]]

Apply translation to place trangle in the center:
[[[language=smalltalk
canvas transform
 push;
 translateBy: 100@25;
 apply.
]]]

Fill previously created path fith linear gradient:
[[[language=smalltalk
canvas fill
 paint: linearGradient;
 path: triangle;
 draw.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/03_fill_path.png|label=fillPath+

Stroke triangle with blue color:
[[[language=smalltalk
canvas stroke
 paint: Color blue;
 path: triangle;
 width: 6;
 draw.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/04_stroke_path.png|label=strokePath+

Restore transformation matrix:
[[[language=smalltalk
canvas transform pop.
]]]

Create a gaussian blur filter:
[[[language=smalltalk
blur := canvas gaussianBlurFilter
 stdDeviation: 4.
]]]

Apply filter on the whole canvas:
[[[language=smalltalk
canvas filter
 area: canvas bounds;
 type: blue;
 draw.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/05_blur.png|label=blur+","! SpartaCanvas
I represent a Sparta canvas and provide an API to perform various drawing operations.","I define an abstract API of Sparta canvas that all concrete implementations must have.

!! Overview
My main responsibility is to create and provide backend specific builders and various objects.

In order to create and perform a drawing operation users should rely on corresponding builder.

There is a separate builder for every single operation. They can be found in ""api"" protocol.

I'm also responsible for creation of filter primitives (filter types) that are used with ""filter"" operation.
They can be found in ""filters"" protocol.",I am polymorphic with ==SpartaSurface==.,"!! Public API and Key Messages

- ==fill== - create a builder of fill drawing operation 
- ==stroke== - create a builder of stroke drawing operation
- ==path== - create a path builder
- ==paint== - create a paint builder (linear, radial gradients)
- ==clip== - create a builder to clip canvas by path (or rectangle)
- ==transform== - create a builder to transform canvas
- ==font== - create a font build helper
- ==text== - create a text rendering builder
- ==filter== - create a builder of filter drawing operation
- ==mask== - create a builder of masking draw operation
- ==bitmap== - create a bitmap factory
- ==shape== - create a common shapes factory (ellipse, rounded rectangle, etc)
- ==filters== - create a common filters factory

- ==extent== - get my size (width@height)
- ==similar:== - to create an empty canvas of size anExtent and of the same type and format 
- ==asForm== - to rasterize myself and return resulting image as Form",,,,,#ERROR!,"For example if one wants to fill a path with a paint she needs to send #fill message to canvas to get a fill builder (painter).!! Example:

Create an empty canvas of size 400@250:
[[[language=smalltalk
canvas := SpartaCanvas extent: 400@250.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/01_empty.png|label=emptyCanvas+


Create a triangle vector path:
[[[language=smalltalk
triangle := canvas path
 moveTo: 100@0;
 lineTo: 200@200;
 lineTo: 0@200;
 close;
 finish.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/02_triangle_path.png|label=trianglePath+

Create a linear gradient:
[[[language=smalltalk
linearGradient := canvas paint linearGradient
 begin: 50@100;
 end: 150@200;
 stops: { 0 -> Color red. 1 -> Color blue }.
]]]

Apply translation to place trangle in the center:
[[[language=smalltalk
canvas transform
 push;
 translateBy: 100@25;
 apply.
]]]

Fill previously created path fith linear gradient:
[[[language=smalltalk
canvas fill
 paint: linearGradient;
 path: triangle;
 draw.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/03_fill_path.png|label=fillPath+

Stroke triangle with blue color:
[[[language=smalltalk
canvas stroke
 paint: Color blue;
 path: triangle;
 width: 6;
 draw.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/04_stroke_path.png|label=strokePath+

Restore transformation matrix:
[[[language=smalltalk
canvas transform pop.
]]]

Create a gaussian blur filter:
[[[language=smalltalk
blur := canvas gaussianBlurFilter
 stdDeviation: 4.
]]]

Apply filter on the whole canvas:
[[[language=smalltalk
canvas filter
 area: canvas bounds;
 type: blue;
 draw.
]]]
+https://github.com/syrel/Sparta/raw/master/images/SpartaCanvas/05_blur.png|label=blur+",,,,"I am an abstract class and should not be instantiated. However, the best way to create an instance of sparta canvas is to send extent: message.''",,#ERROR!,,,,,,,
RTExperimentalExample,"RTExperimentalExample new installTitle: 'BoxSelectionForEdges' 
 code:
 '
<gtExample>
| b v |
b := RTObjectBrowser new.
v := RTView new.
v addElement: RTBox element.
b object: v.
^ b'",,,,,,,,,,"RTExperimentalExample new installTitle: 'BoxSelectionForEdges' 
 code:
 '
<gtExample>
| b v |
b := RTObjectBrowser new.
v := RTView new.
v addElement: RTBox element.
b object: v.
^ b'",,,,,,,,,,,,,
MooseEntity,"MooseEntity is an abstract entity. Entities should subclass this class.
Any moose entity should answer its mooseID, its mooseName and its mooseModel.

!!Extension mechanism

The state instance variable provides a mechanism for extending the state of entities. This is achieved through MooseEntityState. Using this mechanism, a package can extend an entity to add more state. This extension will only be visible when the package is loaded. This is an important mechanism to enable extensibility and modularity. 

For example, if you have YourEntity that subclasses MooseEntity, you can extend it with:

YourEntity>>yourExtendingAttribute
 ^ self privateState attributeAt: #yourExtendingAttribute
YourEntity>>yourExtendingAttribute: aValue
 ^ self privateState attributeAt: #yourExtendingAttribute put: aValue

(see MooseEntityState for more information)


!!Meta descriptions

Entities should also be meta-described in terms of Fame. This is achieved by means of pragmas:

- First, on the class side, you should have a method . For example, YourEntity could have
YourEntity class>>annotation
 <MSEClass: #YourEntity super: #MooseEntity>
 <package: 'YourPackage'>
 <MSEComment: 'The YourEntity Smalltalk class has a correspondent YourEntity meta entity in the Fame world'>

- The pragma <MSEProperty:type:> must be placed in the getter method to denote a Fame property. For example:
YourEntity>>yourExtendingAttribute
 <MSEProperty: #yourExtendingAttribute type: #YourType>
 <MSEComment: 'This is an attribute extended in a different package'>
 ^ self privateState attributeAt: #yourExtendingAttribute
 
 
!!Important API

- mooseID is an Integer that uniquely identifies this entity within the entire Moose environment. 
 It should not change nor be nil. It is generated automatically during the creation of the MooseEntity.
- mooseModel of an entity is must be an instance of MooseModel. It may be nil if the entity is not part of a model. 
 Each entity belongs to one and only one model, if an entity has not yet been added to a model or if an entity has been removed from a model the mooseModel is undefined, that is it may be nil.
- mooseDescription - returns the corresponding FM3MetaDescription instance
- mooseName - returns a symbol that should qualify the current entity. It does not have to be unique",MooseEntity is an abstract entity.,,,"Any moose entity should answer its mooseID, its mooseName and its mooseModel.


!!Important API

- mooseID is an Integer that uniquely identifies this entity within the entire Moose environment. 
 It should not change nor be nil. It is generated automatically during the creation of the MooseEntity.
- mooseModel of an entity is must be an instance of MooseModel. It may be nil if the entity is not part of a model. 
 Each entity belongs to one and only one model, if an entity has not yet been added to a model or if an entity has been removed from a model the mooseModel is undefined, that is it may be nil.
- mooseDescription - returns the corresponding FM3MetaDescription instance
- mooseName - returns a symbol that should qualify the current entity. It does not have to be unique",,,,,,"!!Extension mechanism

The state instance variable provides a mechanism for extending the state of entities. This is achieved through MooseEntityState. Using this mechanism, a package can extend an entity to add more state. This extension will only be visible when the package is loaded. This is an important mechanism to enable extensibility and modularity. 

For example, if you have YourEntity that subclasses MooseEntity, you can extend it with:

YourEntity>>yourExtendingAttribute
 ^ self privateState attributeAt: #yourExtendingAttribute
YourEntity>>yourExtendingAttribute: aValue
 ^ self privateState attributeAt: #yourExtendingAttribute put: aValue

(see MooseEntityState for more information)


!!Meta descriptions

Entities should also be meta-described in terms of Fame. This is achieved by means of pragmas:

- First, on the class side, you should have a method . For example, YourEntity could have
YourEntity class>>annotation
 <MSEClass: #YourEntity super: #MooseEntity>
 <package: 'YourPackage'>
 <MSEComment: 'The YourEntity Smalltalk class has a correspondent YourEntity meta entity in the Fame world'>

- The pragma <MSEProperty:type:> must be placed in the getter method to denote a Fame property. For example:
YourEntity>>yourExtendingAttribute
 <MSEProperty: #yourExtendingAttribute type: #YourType>
 <MSEComment: 'This is an attribute extended in a different package'>
 ^ self privateState attributeAt: #yourExtendingAttribute",,,,,,,"!!Extension mechanism

The state instance variable provides a mechanism for extending the state of entities. This is achieved through MooseEntityState. Using this mechanism, a package can extend an entity to add more state. This extension will only be visible when the package is loaded. This is an important mechanism to enable extensibility and modularity.",Entities should subclass this class.,,,,,
MalNodeWithPreviousAndNext,"A basic node able to host the model and to represent edges with no additional class.
Edges are navigable in both way through the nextNodes and prevousNodes instances variables.",,A basic node able to host the model and to represent edges with no additional class.,,,,Edges are navigable in both way through the nextNodes and prevousNodes instances variables.,,,,,,,,,,,,,,,,,
RTAbstractExample,"I am the super class of all the roassal examples.

Try to use this script to know the excecution of roassal examples 

| examples errors |
examples := OrderedCollection new.
errors := OrderedCollection new.
(RTAbstractExample subclasses collect: #new) 
 do: [ :example | 
 example gtExamples do: [:met | | time builder |
 time := DateAndTime now.
 [builder := example perform: met selector.
 (builder isKindOf: RTBuilder) 
 ifTrue: [ builder build ].
 time := DateAndTime now - time.
 time > (1 asDuration)
 ifTrue: [ examples add: met->time ]
 ] on: Error do: [ errors add: met ] ] ]
 displayingProgress: 'Running examples'.
examples->errors",I am the super class of all the roassal examples.,,,,,,,,,"Try to use this script to know the excecution of roassal examples 

| examples errors |
examples := OrderedCollection new.
errors := OrderedCollection new.
(RTAbstractExample subclasses collect: #new) 
 do: [ :example | 
 example gtExamples do: [:met | | time builder |
 time := DateAndTime now.
 [builder := example perform: met selector.
 (builder isKindOf: RTBuilder) 
 ifTrue: [ builder build ].
 time := DateAndTime now - time.
 time > (1 asDuration)
 ifTrue: [ examples add: met->time ]
 ] on: Error do: [ errors add: met ] ] ]
 displayingProgress: 'Running examples'.
examples->errors",,,,,,,,,,,,,
BlInfiniteDataSourceItemRangeMoved,"Sent when an item reflected at ===from=== position has been moved to ===to=== position.
This is a structural change event. Representations of other existing items in the data set are still considered up to date and will not be rebound, though their positions may be altered.

Sent by:
 - BlInfiniteDataSource
 
Example:

infiniteElement dataSource
 addEventHandlerOn: BlInfiniteDataSourceItemRangeMoved
 do: [ :event | self inform: 'Item was moved from: ', event from asString, ' to: ', event to asString ]",,"This is a structural change event. Representations of other existing items in the data set are still considered up to date and will not be rebound, though their positions may be altered.","Sent by:
 - BlInfiniteDataSource",,,,,,BlInfiniteDataSource,"Example:

infiniteElement dataSource
 addEventHandlerOn: BlInfiniteDataSourceItemRangeMoved
 do: [ :event | self inform: 'Item was moved from: ', event from asString, ' to: ', event to asString ]",,,,,,,,,,Sent when an item reflected at ===from=== position has been moved to ===to=== position.,,,
FameOppositeClassNotExistRule,Check if the opposite class declared in a pragma #MSEProperty:type:opposite: is defined.,,Check if the opposite class declared in a pragma #MSEProperty:type:opposite: is defined.,,,,,,,,,,,,,,,,,,,,,
WASelection,"WASelection creates a selectable list. Items can be any object. If optional labelBlock is not given the string versions of the items are displayed to user, otherwise labelBlock is used to generate the text to display for each item. Returns the item selected by user, (not the index nor the text shown the user). 

 | selection |
 selection := WASelection new.
 selection items: #(1 'cat' 'rat').
 selection 
 labelBlock: [:item | item = 1 ifTrue: ['First'] ifFalse: [item asUppercase]].
 result := self call: selection.
 self inform: result printString

Instance Variables:
 items <Array of Objects> 
 labelBlock <One arg Block>",,WASelection creates a selectable list.,,,"Items can be any object. If optional labelBlock is not given the string versions of the items are displayed to user, otherwise labelBlock is used to generate the text to display for each item. Returns the item selected by user, (not the index nor the text shown the user).","Instance Variables:
 items <Array of Objects> 
 labelBlock <One arg Block>",,,,"| selection |
 selection := WASelection new.
 selection items: #(1 'cat' 'rat').
 selection 
 labelBlock: [:item | item = 1 ifTrue: ['First'] ifFalse: [item asUppercase]].
 result := self call: selection.
 self inform: result printString",,,,,,,,,,,,,
BlExampleElementWithBrokenOnLayout,I am an element with a broken onLayout method that throws Error (SubscriptOutOfBounds),I am an element with a broken onLayout method,that throws Error (SubscriptOutOfBounds),,,,,,,,,,,,,,,,,,,,,
WAPharoXmlEncoder,I am a Pharo specific XML encoder.,I am a Pharo specific XML encoder.,,,,,,,,,,,XML,,,,,,,,,,,
GtGraphTreemapLayoutConstraints,I am a ${class:BlLayoutConstraints}$ for ${class:GtGraphTreemapSquarifiedLayout}$ layout.,I am a ${class:BlLayoutConstraints}$ for ${class:GtGraphTreemapSquarifiedLayout}$ layout.,,I am a ${class:BlLayoutConstraints}$ for ${class:GtGraphTreemapSquarifiedLayout}$ layout.,,,,,,${class:BlLayoutConstraints}$ for ${class:GtGraphTreemapSquarifiedLayout}$,,,,,,,,,,,,,,
GtLibraryInstaller,"I am the installer of shared libraries along side image or vm.
I should be configured by the user for a specific library.

The following example shows how I am configured for Sparta/Moz2D library.

[[[
| installer |
installer := GtLibraryInstaller new.
installer library: 'Moz2D'.
installer version: 'development'.
installer binary: 'libMoz2D'.
installer url: 'https://dl.feenk.com/{library}/{platform}/{version}/{arch}/{binary}.{extension}'.
installer running: [ MozServices isRunning ].
installer works: [ MozLibrary uniqueInstance hasModule ].
installer postInstall: [ MozServices start ].
]]]",I am the installer of shared libraries along side image or vm.,,,,,,,,,"The following example shows how I am configured for Sparta/Moz2D library.

[[[
| installer |
installer := GtLibraryInstaller new.
installer library: 'Moz2D'.
installer version: 'development'.
installer binary: 'libMoz2D'.
installer url: 'https://dl.feenk.com/{library}/{platform}/{version}/{arch}/{binary}.{extension}'.
installer running: [ MozServices isRunning ].
installer works: [ MozLibrary uniqueInstance hasModule ].
installer postInstall: [ MozServices start ].
]]]",,,,,,,I should be configured by the user for a specific library.,,,,,,
RTSunburstBuilder,"I am a class to create visualizations about rings, center is the root of the tree and arcs are the sub trees.

You can customize the angle of the arc, and play with the with radius and width of each arc.","""I am a class to create visualizations about rings, center is the root of the tree and arcs are the sub trees.","""I am a class to create visualizations about rings, center is the root of the tree and arcs are the sub trees.

You can customize the angle of the arc, and play with the with radius and width of each arc.""",,,,,,,,,,,,,,,,,,,,,
WAExpiringCache,"I am the abstract base class for caches that remove entries. Subclasses are intended to use to track sessions.

 Instance Variables
 maximumSize <Integer>
 maximumRelativeAge <Integer>
 maximumAbsoluteAge <Integer>
 overflowAction <Symbol>
 
maximumSize:
 Number of sessions supported. When this limit is reached the overflow action is run. 0 for no maximum size. Has to be positive.

maximumRelativeAge:
 After so many seconds of inactivity a session is considered expired. 0 for no limit. Has to be positive.

maximumAbsoluteAge:
 After so many seconds after its creation a session is considered expired no matter when it was last accessed. 0 for no limit. Has to be positive.

overflowAction:
 What to do when the maximum number of sessions is reached. Only matters when the maximum size is bigger than 0.
 Possible values:
 #removeRelativeOldest remove the entry that hasn't been accessed for the longest time
 #removeAbsoluteOldest remove the entry that has been created the longest time ago
 #signalError signal WAMaximumNumberOfSessionsExceededError",I am the abstract base class for caches that remove entries.,,,"maximumSize:
 Number of sessions supported. When this limit is reached the overflow action is run. 0 for no maximum size. Has to be positive.

maximumRelativeAge:
 After so many seconds of inactivity a session is considered expired. 0 for no limit. Has to be positive.

maximumAbsoluteAge:
 After so many seconds after its creation a session is considered expired no matter when it was last accessed. 0 for no limit. Has to be positive.

overflowAction:
 What to do when the maximum number of sessions is reached. Only matters when the maximum size is bigger than 0.
 Possible values:
 #removeRelativeOldest remove the entry that hasn't been accessed for the longest time
 #removeAbsoluteOldest remove the entry that has been created the longest time ago
 #signalError signal WAMaximumNumberOfSessionsExceededError",,"Instance Variables
 maximumSize <Integer>
 maximumRelativeAge <Integer>
 maximumAbsoluteAge <Integer>
 overflowAction <Symbol>",,Subclasses are intended to use to track sessions.,,,,,,,,,,,,When this limit is reached the overflow action is run. 0 for no maximum size. Has to be positive.,,,
TDependencyQueries,"Description
--------------------

This trait provides a common, paradigm agnostic vocabulary to query dependencies of software entities.

It includes some generic way to query an entity via its associations. The API offer the possibility to query an entity with three parameters:
- The direction of the navigation (Incoming/Outgoing -- in/out)
- The kind of association (FAMIXAcces, FAMIXReference, all...)
- The scope of the query (The receiver, the receiver and its children)

The actual core of the algorithms are in MooseQueryCalculator class.

Most of the generic methods takes a symbol to describe the direction. This symbol will be used to find a MooseQueryAbstactDirectionStrategy to configure a MooseQueryCalculator.

For more informations: https://moosequery.ferlicot.fr/

Public API and Key Messages
--------------------

- #query: aSymbol with: aFAMIXAssociation Looks for the associations of the kind aFAMIXAssociation in the direction described by the symbol in the receiver and its children.
- #queryLocal: aSymbol with: aFAMIXAssociation Looks for the associations of the kind aFAMIXAssociation in the direction described by the symbol in the receiver.
- #queryAll: aSymbol Looks for the associations in the direction described by the symbol in the receiver and its children.

There is a lot of other generic queries. You can find all of them in the ""moose-queries-generic"" protocol.

Examples
--------------------

 aFAMIXClass query: #in with: FAMIXInheritance.
 --> Will return a MooseIncomingQueryResult containing the FAMIXInheritance associations having aFAMIXClass or its children as target
 
 aFAMIXMethod query: #out with: FAMIXAccess.
 --> Will return a MooseOutgoingQueryResult containing the FAMIXAccess associations having aFAMIXMethod or its children as source
 
 
 aFAMIXClass queryLocal: #in with: FAMIXInheritance.
 --> Will return a MooseIncomingQueryResult containing the FAMIXInheritance associations having aFAMIXClass as target
 
 aFAMIXMethod queryLocal: #out with: FAMIXAccess.
 --> Will return a MooseOutgoingQueryResult containing the FAMIXAccess associations having aFAMIXMethod as source 
 
 
 aFAMIXClass queryAll: #in.
 --> Will return a MooseIncomingQueryResult containing the FAMIXAssociation having aFAMIXClass or its children as target
 
 aFAMIXMethod queryAll: #out.
 --> Will return a MooseOutgoingQueryResult containing the FAMIXAssociation having aFAMIXMethod or its children as source
 
 
 aFAMIXClass queryAllLocal: #in.
 --> Will return a MooseIncomingQueryResult containing the FAMIXAssociation having aFAMIXClass as target
 
 aFAMIXMethod queryAllLocal: #out.
 --> Will return a MooseOutgoingQueryResult containing the FAMIXAssociation having aFAMIXMethod as source",,"Description
--------------------

This trait provides a common, paradigm agnostic vocabulary to query dependencies of software entities.",The actual core of the algorithms are in MooseQueryCalculator class.,"It includes some generic way to query an entity via its associations. The API offer the possibility to query an entity with three parameters:
- The direction of the navigation (Incoming/Outgoing -- in/out)
- The kind of association (FAMIXAcces, FAMIXReference, all...)
- The scope of the query (The receiver, the receiver and its children)
Public API and Key Messages
--------------------

- #query: aSymbol with: aFAMIXAssociation Looks for the associations of the kind aFAMIXAssociation in the direction described by the symbol in the receiver and its children.
- #queryLocal: aSymbol with: aFAMIXAssociation Looks for the associations of the kind aFAMIXAssociation in the direction described by the symbol in the receiver.
- #queryAll: aSymbol Looks for the associations in the direction described by the symbol in the receiver and its children.",Most of the generic methods takes a symbol to describe the direction. This symbol will be used to find a MooseQueryAbstactDirectionStrategy to configure a MooseQueryCalculator.,,"The actual core of the algorithms are in MooseQueryCalculator class.
For more informations: https://moosequery.ferlicot.fr/
There is a lot of other generic queries. You can find all of them in the ""moose-queries-generic"" protocol.",,MooseQueryCalculator class.,"Examples
--------------------

 aFAMIXClass query: #in with: FAMIXInheritance.
 --> Will return a MooseIncomingQueryResult containing the FAMIXInheritance associations having aFAMIXClass or its children as target
 
 aFAMIXMethod query: #out with: FAMIXAccess.
 --> Will return a MooseOutgoingQueryResult containing the FAMIXAccess associations having aFAMIXMethod or its children as source
 
 
 aFAMIXClass queryLocal: #in with: FAMIXInheritance.
 --> Will return a MooseIncomingQueryResult containing the FAMIXInheritance associations having aFAMIXClass as target
 
 aFAMIXMethod queryLocal: #out with: FAMIXAccess.
 --> Will return a MooseOutgoingQueryResult containing the FAMIXAccess associations having aFAMIXMethod as source 
 
 
 aFAMIXClass queryAll: #in.
 --> Will return a MooseIncomingQueryResult containing the FAMIXAssociation having aFAMIXClass or its children as target
 
 aFAMIXMethod queryAll: #out.
 --> Will return a MooseOutgoingQueryResult containing the FAMIXAssociation having aFAMIXMethod or its children as source
 
 
 aFAMIXClass queryAllLocal: #in.
 --> Will return a MooseIncomingQueryResult containing the FAMIXAssociation having aFAMIXClass as target
 
 aFAMIXMethod queryAllLocal: #out.
 --> Will return a MooseOutgoingQueryResult containing the FAMIXAssociation having aFAMIXMethod as source",,,,,,For more informations: https://moosequery.ferlicot.fr/,,,,,,,
GtExampleFactory,"I am a factory that can create ${class:GtExample}$ instances. 

Users should configure me with a #sourceClass:. This is the class used to look for methods defining examples. To create an example, a method defining an example is executed having a provider as a receiver. If the example method is defined on the class side, the provider is the class object. If the method is defined on the instance side, the provider consists in a new instance of that class. In the second case, a new instance is created for running each example method. Optionally users can configure the factory with an explicit provider. If this is done, this provider will be used for all examples created by the factory.

To initialize the subjects of an example I call #gtExampleSubjects on the provider object.
To initialize various properties of an example I detect all pragmas from the example method for which a method exists in class of the example (the method should have the same name as the pragma keyword). Then I execute those methods with the example as a receiver and the pragma arguments.",I am a factory that can create ${class:GtExample}$ instances.,,,Users should configure me with a #sourceClass:.,"Users should configure me with a #sourceClass:. This is the class used to look for methods defining examples. To create an example, a method defining an example is executed having a provider as a receiver. If the example method is defined on the class side, the provider is the class object. If the method is defined on the instance side, the provider consists in a new instance of that class. In the second case, a new instance is created for running each example method. Optionally users can configure the factory with an explicit provider. If this is done, this provider will be used for all examples created by the factory.

To initialize the subjects of an example I call #gtExampleSubjects on the provider object.
To initialize various properties of an example I detect all pragmas from the example method for which a method exists in class of the example (the method should have the same name as the pragma keyword). Then I execute those methods with the example as a receiver and the pragma arguments.",,,,${class:GtExample}$,"To initialize the subjects of an example I call #gtExampleSubjects on the provider object.
To initialize various properties of an example I detect all pragmas from the example method for which a method exists in class of the example (the method should have the same name as the pragma keyword). Then I execute those methods with the example as a receiver and the pragma arguments.",,,,the method should have the same name as the pragma keyword,,,,Users should configure me with a #sourceClass:. the method should have the same name as the pragma keyword,,,,,
GtRlMajorVersionComputation,"I increment the major number of a semantic version. I reset both the patch and minor parts of the version number to zero.

${example:GtRlSemanticVersionComputationExamples>>#nextMajorVersionComputation}$

If the symbolic version number on which I am applied has a patch or a minor number I reset them to zero in the created version number.
${example:GtRlSemanticVersionComputationExamples>>#nextMajorVersionComputationResettingPatchAndMinorNumbers}$",,I increment the major number of a semantic version. I reset both the patch and minor parts of the version number to zero.,,,If the symbolic version number on which I am applied has a patch or a minor number I reset them to zero in the created version number.,,,,,${example:GtRlSemanticVersionComputationExamples>>#nextMajorVersionComputationResettingPatchAndMinorNumbers}$ ${example:GtRlSemanticVersionComputationExamples>>#nextMajorVersionComputation}$,,,,,,,,,,,,,
BlDecelerateInterpolator,"I am an interpolator where the rate of change starts out quickly and and then decelerates.

I am configurable using ""factor"" - a degree to which the animation should be eased. Setting factor to 1.0f produces an upside-down y=x^2 parabola. Increasing factor above 1.0f makes exaggerates the ease-out effect (i.e., it starts even faster and ends evens slower).

My formula is:
 f(x) = 1 - (1 - x)^n, where n = 2* factor

I meant to be immutable, therefore factor can be only set using factory method #factor: on my class side","""I am an interpolator where the rate of change starts out quickly and and then decelerates.

I am configurable using """"factor"""" - a degree to which the animation should be eased.","""I am an interpolator where the rate of change starts out quickly and and then decelerates.",,,"Setting factor to 1.0f produces an upside-down y=x^2 parabola. Increasing factor above 1.0f makes exaggerates the ease-out effect (i.e., it starts even faster and ends evens slower).

My formula is:
 f(x) = 1 - (1 - x)^n, where n = 2* factor

I meant to be immutable, therefore factor can be only set using factory method #factor: on my class side""",,,,,,,,,,,,,,,,,,
PMMatrix,"I represent a mathematical matrix. I can be build from rows as follows: 

[[[ 
PMMatrix rows: #((1 2 3)(4 5 6)).
]]]

I understand the usual matrix operations.",I represent a mathematical matrix.,,,I understand the usual matrix operations.,,,,,,"I can be build from rows as follows: 

[[[ 
PMMatrix rows: #((1 2 3)(4 5 6)).
]]]",,,,,,,,,,,,,
WATagBrush,"This is the superclass for all XML element classes. Its main additions are
- element name (#tag)
- attributes (instance of WAHtmlAttributes)
- common events (onXXX), this is a hack and would better be solved with traits","""This is the superclass for all XML element classes.",,,,"Its main additions are
- element name (#tag)
- attributes (instance of WAHtmlAttributes)
- common events (onXXX), this is a hack and would better be solved with traits""",,,,,,,,,,this is a hack and would better be solved with traits,,,,,,,,
PMImplicitAnnouncer,An ImplicitAnnouncer is used by ODESolver to announce step results (ImplicitSolverAnnouncement).,An ImplicitAnnouncer is used by ODESolver to announce step results (ImplicitSolverAnnouncement).,,An ImplicitAnnouncer is used by ODESolver to announce step results (ImplicitSolverAnnouncement).,,,,,,"ODESolver
ImplicitSolverAnnouncement",,,,,,,,,,,,,,
BlGeometryAnchorMoved,I am sent when anchor's position changed,,I am sent when anchor's position changed,,,,,,,,,,,,,,,,,,,,,
BrInteractiveModel,"I am a composite interaction model responsible for managing widget state such as pressed, hovered, focused.","I am a composite interaction model responsible for managing widget state such as pressed, hovered, focused.","I am a composite interaction model responsible for managing widget state such as pressed, hovered, focused.","I am a composite interaction model responsible for managing widget state such as pressed, hovered, focused.",,,,,,,,,,,,,,,,,,,,
WADelayedAnswerDecoration,"WADelayedAnswerDecoration adds a delay in displaying a component. 

See WADelayFunctionalTest for sample usage.
Select 'Delay"" tab of the Functional Seaside Test Suite to run an example (http://127.0.0.1:xxxx/tests/functional/WADelayFunctionalTest)

Instance Variables:
 delay <Integer> delay length in seconds",,WADelayedAnswerDecoration adds a delay in displaying a component.,,,,"Instance Variables:
 delay <Integer> delay length in seconds","See WADelayFunctionalTest for sample usage.
Select 'Delay"" tab of the Functional Seaside Test Suite to run an example (http://127.0.0.1:xxxx/tests/functional/WADelayFunctionalTest)",,,,,,,,,"Select 'Delay"" tab of the Functional Seaside Test Suite to run an example (http://127.0.0.1:xxxx/tests/functional/WADelayFunctionalTest)",,,,,,,
TBlEventTarget,"I implement a basic infrastructure of event management.
Any object that needs to be able to handle events should use me.",,I implement a basic infrastructure of event management.,,,,,,,,,,,,,,,,Any object that needs to be able to handle events should use me.,,,,,
GtRlReleaseConfiguration,"I model options for configuring how releases are performed.

I am used by a ${class:GtRlReleaseBuilder}$ to create a new release. Users can configure default options that apply to all repositories from a release, or configure options for individual repositories.

My main API methods for setting other default options are:
- ${method:GtRlReleaseConfiguration>>#defaultReleaseBranchName:}$ The branch name on which to perform the release.
- ${method:GtRlReleaseConfiguration>>#defaultVersionComputation:}$ The strategy for computing the next version number in case a version already exists. These are subclasses of ${class:GtRlSemanticVersionComputation}$;
- ${method:GtRlReleaseConfiguration>>#defaultVersionNumber:}$ The version number to use in case there are no previous releases in a repository.
- ${method:GtRlReleaseConfiguration>>#forceNewRelease}$ Force a new release in a repository even if there no new changes in that repository and all dependencies did not change.

By default I use a release strategy of type ${class:GtRlDedicatedBranchReleaseStrategy}$. However, a custom release strategy can be configured for each indivual project using the method ${method:GtRlReleaseConfiguration>>#setReleaseStrategyOfType:forProjecs:}$.",,I model options for configuring how releases are performed.,"I am used by a ${class:GtRlReleaseBuilder}$ to create a new release. Users can configure default options that apply to all repositories from a release, or configure options for individual repositories.","My main API methods for setting other default options are:
- ${method:GtRlReleaseConfiguration>>#defaultReleaseBranchName:}$ The branch name on which to perform the release.
- ${method:GtRlReleaseConfiguration>>#defaultVersionComputation:}$ The strategy for computing the next version number in case a version already exists. These are subclasses of ${class:GtRlSemanticVersionComputation}$;
- ${method:GtRlReleaseConfiguration>>#defaultVersionNumber:}$ The version number to use in case there are no previous releases in a repository.
- ${method:GtRlReleaseConfiguration>>#forceNewRelease}$ Force a new release in a repository even if there no new changes in that repository and all dependencies did not change.",,,,,,,,,,"However, a custom release strategy can be configured for each indivual project using the method ${method:GtRlReleaseConfiguration>>#setReleaseStrategyOfType:forProjecs:}$.",,,"By default I use a release strategy of type ${class:GtRlDedicatedBranchReleaseStrategy}$. However, a custom release strategy can be configured for each indivual project using the method ${method:GtRlReleaseConfiguration>>#setReleaseStrategyOfType:forProjecs:}$.",,,,"However, a custom release strategy can be configured for each indivual project using the method ${method:GtRlReleaseConfiguration>>#setReleaseStrategyOfType:forProjecs:}$.",,
WAFormCharEncodingFromHandlerTest,I test that the encoding from the handler is taken if a handler is present but a codec is missing.,,I test that the encoding from the handler is taken if a handler is present but a codec is missing.,,,,,,,,,,,,,,,,,,,,,
TROSMShape,"This Shape represent an OpenStreetMap background object which tracks the camera zoom level and translation to build a view of the corresponding part of the OpenStreetMap.

A similar approach could work with Google maps.

Instance Variables
 osmZoomLevel: <Integer>
 position: <Point>
 rectangle: <Rectangle>
 scale: <Point>
 tiles: <Dictionary of Point -> Form>
 zoom: <Point>

osmZoomLevel
 - the zoom level in the OSM range (0 to 18, integer)

position
 - position of the shape

rectangle
 - bounds of the shape

scale
 - the scale of the shape

tiles
 - the cache of tiles, indexed by x, y

zoom
 - zoom of the shape


Principle:
 1.0 in Roassal space -> 1km in OSM. 
 R zoom to OSM zoom level: (base is 1km/pixel) 
 1000 * Rzoom = 156543.034 meters/pixel / (2 ^ zoomlevel)
 zoomlevel = ln( 156.543034 * Rzoom ) / ln 2
 remainderZoom = 156.543034 * Rzoom / (2 ^ zoomlevel))
 lon to Roassal space = [ :l | 40075.016686 * (l / 360) ]
 lat to Roassal space = [ :l | ((Float pi / 4) + (l degreesToRadians / 2)) tan ln * 40075.016686 / (2.0 * Float pi) ]
 Remember : working limit for lat/lon is ±85.05113°

Goal:
 depending on the RTView size and the canvas parameters, get the right tiles from OSM and display them.

Algorithm:
 From the camera, get the zoom level and offset.
 Compute the OSM zoom level (with the camera zoom value).
 Make remainder zoom a transform inside the TROSMShape.
 Take corners of bounding box, get lat / long, get tiles x and y based on previous zoom level.
 Set clipping rectangle to TROSMShape bounds.
 Display each tile.
 cache each tile. When displaying, check if tile exists. Remove tile if not used in display.","""This Shape represent an OpenStreetMap background object which tracks the camera zoom level and translation to build a view of the corresponding part of the OpenStreetMap.","""This Shape represent an OpenStreetMap background object which tracks the camera zoom level and translation to build a view of the corresponding part of the OpenStreetMap.",,"osmZoomLevel
 - the zoom level in the OSM range (0 to 18, integer)

position
 - position of the shape

rectangle
 - bounds of the shape

scale
 - the scale of the shape

tiles
 - the cache of tiles, indexed by x, y

zoom
 - zoom of the shape","Principle:
 1.0 in Roassal space -> 1km in OSM. 
 R zoom to OSM zoom level: (base is 1km/pixel) 
 1000 * Rzoom = 156543.034 meters/pixel / (2 ^ zoomlevel)
 zoomlevel = ln( 156.543034 * Rzoom ) / ln 2
 remainderZoom = 156.543034 * Rzoom / (2 ^ zoomlevel))
 lon to Roassal space = [ :l | 40075.016686 * (l / 360) ]
 lat to Roassal space = [ :l | ((Float pi / 4) + (l degreesToRadians / 2)) tan ln * 40075.016686 / (2.0 * Float pi) ]
 Remember : working limit for lat/lon is ±85.05113°

Goal:
 depending on the RTView size and the canvas parameters, get the right tiles from OSM and display them.

Algorithm:
 From the camera, get the zoom level and offset.
 Compute the OSM zoom level (with the camera zoom value).
 Make remainder zoom a transform inside the TROSMShape.
 Take corners of bounding box, get lat / long, get tiles x and y based on previous zoom level.
 Set clipping rectangle to TROSMShape bounds.
 Display each tile.
 cache each tile. When displaying, check if tile exists. Remove tile if not used in display.""","Instance Variables
 osmZoomLevel: <Integer>
 position: <Point>
 rectangle: <Rectangle>
 scale: <Point>
 tiles: <Dictionary of Point -> Form>
 zoom: <Point>

osmZoomLevel
 - the zoom level in the OSM range (0 to 18, integer)

position
 - position of the shape

rectangle
 - bounds of the shape

scale
 - the scale of the shape

tiles
 - the cache of tiles, indexed by x, y

zoom
 - zoom of the shape",,,,,,,,,,,,,A similar approach could work with Google maps.,,,,
GlutinResumedEvent,Emitted when the application has been resumed.,,Emitted when the application has been resumed.,,,,,,,,,,,,,,,,,,Emitted when the application has been resumed.,,,
PRPillarParser,I use the PRPillarGrammar and I build a PRDocument.,,I use the PRPillarGrammar and I build a PRDocument.,I use the PRPillarGrammar and I build a PRDocument.,,,,,,"PRPillarGrammar
PRDocument.",,,,,,,,,,,,,,
PRList,"I am an abstract list. I represent the abstraction over ordered, unordered HTML or latex list. My children are instances of *PRListItem*. If you need a container of elements better use of PRDocumentGroup.","I am an abstract list. I represent the abstraction over ordered, unordered HTML or latex list.",,,,,,,My children are instances of *PRListItem*. If you need a container of elements better use of PRDocumentGroup.,,,,,,,,,,If you need a container of elements better use of PRDocumentGroup.,,,,,
BrLook,I define how widgets look. In addition to the BrViewModel I listen to UI events and update decoration (non meaningful) elements of the widgets,,I define how widgets look. In addition to the BrViewModel I listen to UI events and update decoration (non meaningful) elements of the widgets,In addition to the BrViewModel I listen to UI events and update decoration (non meaningful) elements of the widgets,,,,,,BrViewModel,,,,,,,,,,,,,,
PPNonEmptyParser,"I return failure, if the delegate parser did not consumed any input.",,"I return failure, if the delegate parser did not consumed any input.",,,,,,,,,,,,,,,,,,,,,
GtDiagrammerEditorList,"I display a list of editors of an object in a vertical list.

I fetch data from the diagrammer editor data source",,"I display a list of editors of an object in a vertical list.

I fetch data from the diagrammer editor data source","I display a list of editors of an object in a vertical list.

I fetch data from the diagrammer editor data source",,,,,,,,,,,,,,,,,,,,
FAMIXAnnotationTypeGroup,FAMIXAnnotationTypeGroup is a MooseGroup containing only FAMIX enities of type FAMIXAnnotationType.,FAMIXAnnotationTypeGroup is a MooseGroup containing only FAMIX enities of type FAMIXAnnotationType.,FAMIXAnnotationTypeGroup is a MooseGroup containing only FAMIX enities of type FAMIXAnnotationType.,,,,,,,"MooseGroup
FAMIXAnnotationType.",,,,,,,,,,,,,,
BlLayout,"!Bloc layout
I am the superclass for layouts in Bloc and I define the API that a concrete layout needs to implement.

I am attached to a bloc element and define the visual structure of that bloc element. Tipically this includes the position of child elements within the parent, or the size of the parent element. 

!!Layout constraints
I support a set of attributes (refered to as constraints in Bloc) which define the visual properties of the layout. A small set of constraints, like padding, margin or minimal and maximum dimensions, are common among all the layouts. Each layout has a dedicated constraint objects, instance of ${class:BlLayoutCommonConstraints}$, that contain these common constraints. Each type of layout can further define its own specific constraints by creating a subclass of ${class:BlLayoutConstraints}$. 

TODO: constraints API

!!Layout phase in a frame
Layouting of elements is a phase executed by a space during every frame. 

Every frame, the space goes through several phases (${method:BlSpaceFrame>>#initializePhases}$). Phases are modeled as subclasses of ${class:BlSpaceFramePhase}$ and are executed once per frame. One of them, ${class:BlSpaceFrameLayoutPhase}$, consists in layouting the elements contained in the space. This is done after events and tasks have been executed, but before the drawing phase.

Layouting should to be executed during a frame when various properties like, width, height or position change in any element contained by the space. However, an important aspect in Bloc, is that when one of these properties changes, layouting is not performed immediately. Instead, a layout request is issued by the element whose property changed using the message ${method:BlElement>>#requestLayout:}$. This has the advantage that if no element request layout, this phase can be skipped. Also it does not matter if layout is requeste one or 1000 time; only one layout phase is performed improving performance. 

Hence, in Bloc layout is not executed immediately after a property like the width of an element changes. Instead layout is requested and perfomed, if needed, during every frame. When needing to test layouts, however, it is necessary to apply a layout immediately, instead of waiting for a frame to end. That can be done using the messafe ${method:BlElement>>#forceLayout}$; this should not be used outside of tests, as it bypasses the normal layouting system from Bloc.

In a space where all elements have no event handlers for layout events, elements are going to be layouted exactly once during the layouting phase. However, often elements need to reach and perform actions, when for example their position or extent changes. They can react by requesting another layout. A tipical example is deadling with edges. An edge can be layouted only after the position of the elements that it connects is known. Hence, often the layout needs to be applied twice, or more, during the layouting phase. The space only allows layout requests during the layouting phase a limited number of times (${method:BlSpace>>#computeLayout}$) to avoid blocking rendering due to infinite recursions caused by layout requests, or void spending too much time on layouts in a frame. More technical details can be found in the method ${method:BlSpace>>#doLayout}$, the main entry point for executing the layout phase in a space.

!!Performing a layout
The space starts the layouting process on the root element of that space. Performing the layout on an element consists in executing three main steps:
 - measuring bounds: determine the bounds of the element according to its layout;
 - applying the layout: determine the position of children within the element;
 - commiting changes: raise layout events like position or extent changed.

TODO: why three separate steps?

!!!Measuring bounds
This is the first step when performing a layout on an element and consists in determening the measured bounds of that element. 

Each element can decide how it wants to be measured (${method:BlElement>>#onMeasure:}$). By default ${class:BlElement}$ delegates the measuring to its layout. Layouts should override ${method:BlLayout>>#measure:with:}$ to implement the actual measuring. Normally layouts follow a top to bottom approach: they measure the current element and then asks its children to do the measuring.

Each element has real bounds (${BlElement>>#bounds}$) and measured bounds (${BlElement>>#measuredBounds}$). The real bounds contain the actual position and extent of an element that users of that element should rely on. The measured bounds are used during layouting to hold the new extent of an element. The measuring phase changes only the extent in the measured bounds. After the entire layout phase is completed the real bounds and measured bounds will have the same value. The measured bounds act like a temporary cache for the new bounds of an element. They were introduced to avoid changing the real extent of element while layouting of children is still being performed. 

(TODO: explain why position is sometime changed in the measured bounds)

!!!Applying the layout

!!!Commiting changes

TODO
 - Space starts the measurement process from the root element; after measurement it tell children to measure themselves, etc
 - measurement; top to bottom though all the composition of elements.
 - this step find the size of an element and sets measuredExtent (or position sometimes)
 - space starts the layout step
 - as we know the size of each child we compute the actual position for each child
 - changes the real extent to measured extent and the real position to the computed layout position
 - Elements announce events for position and extent changed
 
 Without event handlers the layout process is going to happen only once.
 For example when nodes change the position edges should be updated.
 
!!Layout events

TODO

!!Layout API
I define an api of a layout. Concrete implementations should focus on measure:with: and layout:in:","!Bloc layout
I am the superclass for layouts in Bloc and I define the API that a concrete layout needs to implement.","I am attached to a bloc element and define the visual structure of that bloc element. Tipically this includes the position of child elements within the parent, or the size of the parent element.I support a set of attributes (refered to as constraints in Bloc) which define the visual properties of the layout","I am attached to a bloc element and define the visual structure of that bloc element. Tipically this includes the position of child elements within the parent, or the size of the parent element.",I define an api of a layout. Concrete implementations should focus on measure:with: and layout:in:,"!!Layout constraints
I support a set of attributes (refered to as constraints in Bloc) which define the visual properties of the layout. A small set of constraints, like padding, margin or minimal and maximum dimensions, are common among all the layouts. Each layout has a dedicated constraint objects, instance of ${class:BlLayoutCommonConstraints}$, that contain these common constraints. Each type of layout can further define its own specific constraints by creating a subclass of ${class:BlLayoutConstraints}$. 

TODO: constraints API

!!Layout phase in a frame
Layouting of elements is a phase executed by a space during every frame. 

Every frame, the space goes through several phases (${method:BlSpaceFrame>>#initializePhases}$). Phases are modeled as subclasses of ${class:BlSpaceFramePhase}$ and are executed once per frame. One of them, ${class:BlSpaceFrameLayoutPhase}$, consists in layouting the elements contained in the space. This is done after events and tasks have been executed, but before the drawing phase.

Layouting should to be executed during a frame when various properties like, width, height or position change in any element contained by the space. However, an important aspect in Bloc, is that when one of these properties changes, layouting is not performed immediately. Instead, a layout request is issued by the element whose property changed using the message ${method:BlElement>>#requestLayout:}$. This has the advantage that if no element request layout, this phase can be skipped. Also it does not matter if layout is requeste one or 1000 time; only one layout phase is performed improving performance. 

Hence, in Bloc layout is not executed immediately after a property like the width of an element changes. Instead layout is requested and perfomed, if needed, during every frame. When needing to test layouts, however, it is necessary to apply a layout immediately, instead of waiting for a frame to end. That can be done using the messafe ${method:BlElement>>#forceLayout}$; this should not be used outside of tests, as it bypasses the normal layouting system from Bloc.

In a space where all elements have no event handlers for layout events, elements are going to be layouted exactly once during the layouting phase. However, often elements need to reach and perform actions, when for example their position or extent changes. They can react by requesting another layout. A tipical example is deadling with edges. An edge can be layouted only after the position of the elements that it connects is known. Hence, often the layout needs to be applied twice, or more, during the layouting phase. The space only allows layout requests during the layouting phase a limited number of times (${method:BlSpace>>#computeLayout}$) to avoid blocking rendering due to infinite recursions caused by layout requests, or void spending too much time on layouts in a frame. More technical details can be found in the method ${method:BlSpace>>#doLayout}$, the main entry point for executing the layout phase in a space.

!!Performing a layout
The space starts the layouting process on the root element of that space. Performing the layout on an element consists in executing three main steps:
 - measuring bounds: determine the bounds of the element according to its layout;
 - applying the layout: determine the position of children within the element;
 - commiting changes: raise layout events like position or extent changed.

TODO: why three separate steps?

!!!Measuring bounds
This is the first step when performing a layout on an element and consists in determening the measured bounds of that element. 

Each element can decide how it wants to be measured (${method:BlElement>>#onMeasure:}$). By default ${class:BlElement}$ delegates the measuring to its layout. Layouts should override ${method:BlLayout>>#measure:with:}$ to implement the actual measuring. Normally layouts follow a top to bottom approach: they measure the current element and then asks its children to do the measuring.

Each element has real bounds (${BlElement>>#bounds}$) and measured bounds (${BlElement>>#measuredBounds}$). The real bounds contain the actual position and extent of an element that users of that element should rely on. The measured bounds are used during layouting to hold the new extent of an element. The measuring phase changes only the extent in the measured bounds. After the entire layout phase is completed the real bounds and measured bounds will have the same value. The measured bounds act like a temporary cache for the new bounds of an element. They were introduced to avoid changing the real extent of element while layouting of children is still being performed. 

(TODO: explain why position is sometime changed in the measured bounds)

!!!Applying the layout

!!!Commiting changes

TODO
 - Space starts the measurement process from the root element; after measurement it tell children to measure themselves, etc
 - measurement; top to bottom though all the composition of elements.
 - this step find the size of an element and sets measuredExtent (or position sometimes)
 - space starts the layout step
 - as we know the size of each child we compute the actual position for each child
 - changes the real extent to measured extent and the real position to the computed layout position
 - Elements announce events for position and extent changed
 
 Without event handlers the layout process is going to happen only once.
 For example when nodes change the position edges should be updated.
 
!!Layout events

TODO

!!Layout API
I define an api of a layout. Concrete implementations should focus on measure:with: and layout:in:",,"More technical details can be found in the method ${method:BlSpace>>#doLayout}$, the main entry point for executing the layout phase in a space.","Phases are modeled as subclasses of ${class:BlSpaceFramePhase}$ and are executed once per frame. One of them, ${class:BlSpaceFrameLayoutPhase}$, consists in layouting the elements contained in the space. This is done after events and tasks have been executed, but before the drawing phase.",,,"TODO: constraints API
TODO
 - Space starts the measurement process from the root element; after measurement it tell children to measure themselves, etc
 - measurement; top to bottom though all the composition of elements.
 - this step find the size of an element and sets measuredExtent (or position sometimes)
 - space starts the layout step
 - as we know the size of each child we compute the actual position for each child
 - changes the real extent to measured extent and the real position to the computed layout position
 - Elements announce events for position and extent changed
 
 Without event handlers the layout process is going to happen only once.
 For example when nodes change the position edges should be updated.
 
!!Layout events

TODO

!!Layout API
I define an api of a layout. Concrete implementations should focus on measure:with: and layout:in:",,,"However, an important aspect in Bloc, is that when one of these properties changes, layouting is not performed immediately. this should not be used outside of tests, as it bypasses the normal layouting system from Bloc.",,,,,,"This is done after events and tasks have been executed, but before the drawing phase.
Layouting should to be executed during a frame when various properties like, width, height or position change in any element contained by the space. However, an important aspect in Bloc, is that when one of these properties changes, layouting is not performed immediately.",,,
GtLibraryInstallerMorph,Top most container of the whole installer,Top most container of the whole installer,,,,,,,,,,,,,,,,,,,,,,
PMODESolver,"An ODE Solver uses a Stepper to solve a System. 

The main interface once the solver is set up (it has a stepper and a solver) is
 solve: system x0: aState t0: startTime t1: endTime
 solve: system x0: aState t0: startTime t1: endTime stepSize: dt
 
Announcements are made when a step is taken.",,,An ODE Solver uses a Stepper to solve a System.,"The main interface once the solver is set up (it has a stepper and a solver) is
 solve: system x0: aState t0: startTime t1: endTime
 solve: system x0: aState t0: startTime t1: endTime stepSize: dt",Announcements are made when a step is taken.,,,,,,,,,,,,,,,,,,
MalRowMatrix,"Copyright (c), 2004-2007 Adrian Kuhn. This class is part of Hapax. Hapax is distributed under BSD License, see package comment.","This class is part of Hapax. Hapax is distributed under BSD License, see package comment.",,"This class is part of Hapax. Hapax is distributed under BSD License, see package comment.",,,,"This class is part of Hapax. Hapax is distributed under BSD License, see package comment.",,,,,,,,,,,,,,,"Copyright (c), 2004-2007 Adrian Kuhn. This class is part of Hapax. Hapax is distributed under BSD License, see package comment.",
BlScalableFitHeightStrategy,"I make sure that content element fits vertically within scalable element.

It makes sense to use me if scalable element has fixed or matching parent vertical size but fits content horizontally.",,I make sure that content element fits vertically within scalable element.,,,,,,,,,,,,,,,,It makes sense to use me if scalable element has fixed or matching parent vertical size but fits content horizontally.,,,,,
WAPharoEncoder,I am the common superclass for Pharo encoders.,I am the common superclass for Pharo encoders.,I am the common superclass for Pharo encoders.,,,,,,,,,,,,,,,,,,,,,
RTCircleGeometry,"I represent a circle described by its 'center ' and a 'radius'.

I am NOT a Roassal shape, for that use RTEllipse. Instead I am using in some circle-related gemetric computations.","""I represent a circle described by its 'center ' and a 'radius'.

I am NOT a Roassal shape, for that use RTEllipse.","Instead I am using in some circle-related gemetric computations.""",,,,,,,,,,,,"I am NOT a Roassal shape, for that use RTEllipse.",,,,"I am NOT a Roassal shape, for that use RTEllipse.",,,,,
FMModel,"Description
--------------------

I am a model used in the scope of Fame.

I contains real instances of a class representing a concept in the current metamodel. This class is described by an entity of my meta-model. 

I have a meta-model containing descriptions of my content. A FMModel has a FMMetaModel as meta-model which has a FMMetaMetaModel has metamodel. 

For example, in the Smalltalk metamodel of Famix, if we want to represent the Point class we will have:
- A FMModel containing an instance of FamixStClass representing the Point class.
- A FMMetaModel containing instances of FM3Elements describing FamixStClass.
- A FMMetaMetaModel containing instances of FM3Element describing FM3 meta model (Package, Class and Property).

I include a system of caches in case my users want to store informations to speed up an application.

I will initialize myself with a new FMMetaModel but this one can be replaced by an existing one.

Public API and Key Messages
--------------------

- #metaDescriptionOn: Allows one to get the meta-description of an element.

Examples
--------------------
 
 | model |
 model := FMModel new.
 model metamodel importString: FMHeinekenExample metamodelMSE.
 model.


 model := (FMModel withMetamodel: (FMMetaModel fromString: FMHeinekenExample metamodelMSE)).
 
Internal Representation and Key Implementation Points.
--------------------

 Instance Variables
 additionalProperties: <aDictionary> A cache used to store some informations about the model.
 elements: <aCollection> All the entities of the model.
 metamodel: <aFMMetaModel> The meta-model describing my entities.","Description
--------------------

I am a model used in the scope of Fame.",I contains real instances of a class representing a concept in the current metamodel.,"This class is described by an entity of my meta-model. 

I have a meta-model containing descriptions of my content. A FMModel has a FMMetaModel as meta-model which has a FMMetaMetaModel has metamodel.","Public API and Key Messages
--------------------

- #metaDescriptionOn: Allows one to get the meta-description of an element.","I include a system of caches in case my users want to store informations to speed up an application.

I will initialize myself with a new FMMetaModel but this one can be replaced by an existing one.","Internal Representation and Key Implementation Points.
--------------------

 Instance Variables
 additionalProperties: <aDictionary> A cache used to store some informations about the model.
 elements: <aCollection> All the entities of the model.
 metamodel: <aFMMetaModel> The meta-model describing my entities.",,,FMMetaModel,"For example, in the Smalltalk metamodel of Famix, if we want to represent the Point class we will have:
- A FMModel containing an instance of FamixStClass representing the Point class.
- A FMMetaModel containing instances of FM3Elements describing FamixStClass.
- A FMMetaMetaModel containing instances of FM3Element describing FM3 meta model (Package, Class and Property).
Examples
--------------------
 
 | model |
 model := FMModel new.
 model metamodel importString: FMHeinekenExample metamodelMSE.
 model.


 model := (FMModel withMetamodel: (FMMetaModel fromString: FMHeinekenExample metamodelMSE)).",,,,,,,,,,,,,
WACanvasWidget,A common superclass for all widgets that want to use WAHtmlCanvas as their renderer.,A common superclass for all widgets that want to use WAHtmlCanvas as their renderer.,,,,,,,A common superclass for all widgets that want to use WAHtmlCanvas as their renderer.,WAHtmlCanvas,,,,,,,,,,,,,,
WADynamicVariable,I exist for legacy purposes. You should subclass GRDynamicVariable.,,I exist for legacy purposes.,,,,,,,,,,,,,,,,You should subclass GRDynamicVariable.,,,,,
JQLoad,Load HTML from a remote file and inject it into the DOM.,,Load HTML from a remote file and inject it into the DOM.,,,,,,,,,,,,,,,,,,,,,
BlMouseMiddleButton,I am a middle mouse button. Often can be triggered by mouse wheel click,I am a middle mouse button.,Often can be triggered by mouse wheel clic,,,,,,,,,,,,,,,,,,,,,
BlHostPulseLoop,"I am the Bloc main loop.
I indicate to the Universe that is time to synchronize the state of the elements. 

A pulse is fired every 16ms (if possible) to obtain 60 frames per second (fps) maximum. This may be delayed if there are background processes wanting to run (to ensure that background calculation of UI elements can complete). See ${method:name=BlPulseLoop>>#wait} for details of how the loop time is regulated.

The opened spaces listen the pulse to be synchronized and to update their state when it is needed.",I am the Bloc main loop.,I indicate to the Universe that is time to synchronize the state of the elements.,,,A pulse is fired every 16ms (if possible) to obtain 60 frames per second (fps) maximum. This may be delayed if there are background processes wanting to run (to ensure that background calculation of UI elements can complete). The opened spaces listen the pulse to be synchronized and to update their state when it is needed.,,See ${method:name=BlPulseLoop>>#wait} for details of how the loop time is regulated.,,,,,,,,,,,,,,,,
GtABAddress,I hold all data relevant for an address,,I hold all data relevant for an address,,,,,,,,,,,,,,,,,,,,,
MooseSystemComplexityLocator,self openOn: MooseModel root allModels last allModelClasses,,,,,,,,,,self openOn: MooseModel root allModels last allModelClasses,,,,,,,,,,,,,
BrTextEditor,"! The Moldable Editor

I edit text and provide high level abstractions of essential text editor functionality such as selection, cursor, text insertions and deletions.

I make use of ${class:BrTextAdornmentAttribute}$ to augment text with visual elements. 

I subclass infinite data source in order to be able to smoothly display practically infinite amounts of text.",! The Moldable Editor,"I edit text and provide high level abstractions of essential text editor functionality such as selection, cursor, text insertions and deletions.",I make use of ${class:BrTextAdornmentAttribute}$ to augment text with visual elements.,,,,,I subclass infinite data source in order to be able to smoothly display practically infinite amounts of text.,${class:BrTextAdornmentAttribute}$,,,,,,,,,,,,,,
GtLibraryInstallerLogAnnouncement,"I am sent by installer when it tries to log some messages.

The UI may want to display them in a Transcript",,I am sent by installer when it tries to log some messages.,The UI may want to display them in a Transcript,,,,,,,,,,,,,,,,,,,,
PRBookTesterVisitor,"I am a visitor specialized in visiting books and testing their code. Therefore, I only redefine visitCodeBlock: and specify it with the different parameters the codelock may have.

I gather all results as PRBookTestResult s in allTestsResults.

visitCodeblock: uses executeAndReport: creating a PRBookTestResult with the result of the evaluation of the codeblock.

checkAndReportFileNamed: starts the visit in a given file.

Every codeblock can be specified with the following parameters implying a specialized visit:
- testcase: The codeblock is an example defined as follows, 
 [[[testcase=true
 (stimuli) >>> result
 ]]]
 
- methodDefinition: The codeblock is a method definition defined as follows,
 [[[methodDefinition=true
 ClassName >> methodName
 method body
 ]]]
 
- classDefinition 
 [[[classDefinition=true
 Object subclass: #YourClass
 instanceVariableNames: 'iv1 iv2'
 classVariableNames: ''
 package: 'YourPackage'
 ]]]
 
- evaluation
 [[[testcase=true
 (stimuli) >>> result
 ]]]",I am a visitor specialized in visiting books and testing their code.,"Therefore, I only redefine visitCodeBlock: and specify it with the different parameters the codelock may have.

I gather all results as PRBookTestResult s in allTestsResults.",I am a visitor specialized in visiting books and testing their code.,"visitCodeblock: uses executeAndReport: creating a PRBookTestResult with the result of the evaluation of the codeblock.

checkAndReportFileNamed: starts the visit in a given file.",,,,,PRBookTestResult,,,,,,,,"Every codeblock can be specified with the following parameters implying a specialized visit:
- testcase: The codeblock is an example defined as follows, 
 [[[testcase=true
 (stimuli) >>> result
 ]]]
 
- methodDefinition: The codeblock is a method definition defined as follows,
 [[[methodDefinition=true
 ClassName >> methodName
 method body
 ]]]
 
- classDefinition 
 [[[classDefinition=true
 Object subclass: #YourClass
 instanceVariableNames: 'iv1 iv2'
 classVariableNames: ''
 package: 'YourPackage'
 ]]]
 
- evaluation
 [[[testcase=true
 (stimuli) >>> result
 ]]]",,,,,,
ManifestMooseQuery,I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser,,I store metadata for this package.,These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser,,,,,,SmalllintManifestChecker,,,,,,,,,,,,,,
RTSVGBoxedTextPopup,"A RTSVGBoxedTextPopup is a text popup, contained in a square box.

This boxing, in SVG, supports many features, not included in this class.","A RTSVGBoxedTextPopup is a text popup, contained in a square box.","This boxing, in SVG, supports many features, not included in this class.",,,,,,,,,,,,,,,,,,,,,
FMMSEPrinter,"Description
--------------------

I am responsible of printing the MSE format markup during a model export.

Examples
--------------------

 | printer |
 printer := FMMSEPrinter onString.
 FMMetaMetaModel default exportWithPrinter: printer.
 printer stream contents","""Description
--------------------

I am responsible of printing the MSE format markup during a model export.",,,,,,,,,"Examples
--------------------

 | printer |
 printer := FMMSEPrinter onString.
 FMMetaMetaModel default exportWithPrinter: printer.
 printer stream contents""",,,,,,,,,,,,,
BlPolygon,"Example:

BlPolygon vertices: { 
 10@50.
 50@20.
 150@40.
 180@150.
 80@140
}",,,,,,,,,,"Example:

BlPolygon vertices: { 
 10@50.
 50@20.
 150@40.
 180@150.
 80@140
}",,,,,,,,,,,,,
GtGraphTreemapSquarifyLandscapeRectangle,"I represent a rectangle. My height is smaller than my width.
I layout ${class:GtGraphTreemapNode}$ along my shorter side (height).
I am used by ${class:GtGraphTreemapSquarifyStep}$.

!! Example

In the following example, I occupy top-right side of a total area with ${example:GtGraphTreemapLayoutExamples>>#squarifyWithFourNodesFirstArea|label=#nodesCount}$ nodes:
${example:GtGraphTreemapLayoutExamples>>#squarifyWithFourNodesFirstArea|noCode}$",I represent a rectangle. My height is smaller than my width.,I layout ${class:GtGraphTreemapNode}$ along my shorter side (height).,I am used by ${class:GtGraphTreemapSquarifyStep}$.,,,,,,,"!! Example

In the following example, I occupy top-right side of a total area with ${example:GtGraphTreemapLayoutExamples>>#squarifyWithFourNodesFirstArea|label=#nodesCount}$ nodes:
${example:GtGraphTreemapLayoutExamples>>#squarifyWithFourNodesFirstArea|noCode}$",,,,,,,,,,,,,
BlExperimentalExamples,"I contain experimental examples that only work in manually prepared laboratory environments.

Trying to run these examples may result in undefined bahaviour such as: crash, infinite debugger windows spawning, unresponsive image, universe collapse or suddenly created black hole that will probably destroy our solar system.

Take care. Be conscious at all times.",,I contain experimental examples that only work in manually prepared laboratory environments.,,,,,,,,,,,,"Trying to run these examples may result in undefined bahaviour such as: crash, infinite debugger windows spawning, unresponsive image, universe collapse or suddenly created black hole that will probably destroy our solar system.

Take care. Be conscious at all times.",,,,"Trying to run these examples may result in undefined bahaviour such as: crash, infinite debugger windows spawning, unresponsive image, universe collapse or suddenly created black hole that will probably destroy our solar system. 
Take care. Be conscious at all times.",,I contain experimental examples that only work in manually prepared laboratory environments.,,,
WAOptionGroupTag,"The OPTGROUP element allows authors to group choices logically. This is particularly helpful when the user must choose from a long list of options; groups of related choices are easier to grasp and remember than a single long list of options.

It has crappy browser support and noone as ever used it. See WAInputTest >> #renderOptionGroupOn: for examples.",,The OPTGROUP element allows authors to group choices logically. This is particularly helpful when the user must choose from a long list of options; groups of related choices are easier to grasp and remember than a single long list of options.,,,,,See WAInputTest >> #renderOptionGroupOn: for examples.,,WAInputTest >> #renderOptionGroupOn: for examples.,WAInputTest >> #renderOptionGroupOn: for examples.,,,,It has crappy browser support and noone as ever used it.,It has crappy browser support and noone as ever used it.,,,,This is particularly helpful when the user must choose from a long list of options; groups of related choices are easier to grasp and remember than a single long list of options.,,,,
PPLiteralParser,"Abstract literal parser that parses some kind of literal type (to be specified by subclasses).

Instance Variables:
 literal <Object> The literal object to be parsed.
 message <String> The error message to be generated.","""Abstract literal parser that parses some kind of literal type (to be specified by subclasses).",,"""Abstract literal parser that parses some kind of literal type (to be specified by subclasses).",,,"Instance Variables:
 literal <Object> The literal object to be parsed.
 message <String> The error message to be generated.""",,,,,,,,,,,,,,,,,
GtGraphEdgesIterator,I am an abstract iterator over edges connected to a graph element,I am an abstract iterator over edges connected to a graph element,,I am an abstract iterator over edges connected to a graph element,,,,,,,,,,,,,,,,,,,,
GtDiagrammerExamples,"!Diagrammer

[[[example=GtDiagrammerExamples>>#diagrammer|expanded=true|noCode=true|show=gtLiveIn:]]]",,,,,,,,,,"!Diagrammer

[[[example=GtDiagrammerExamples>>#diagrammer|expanded=true|noCode=true|show=gtLiveIn:]]]",,,,,,,,,,,,,
BrExampleColoredElementStencil,I am an example of a custom Stencil that creates a rounded rectangular element with cusomizable background color and corner radius,I am an example of a custom Stencil,that creates a rounded rectangular element with cusomizable background color and corner radius,,that creates a rounded rectangular element with cusomizable background color and corner radius,,,,,,,,,,,,,,,,,,,
FamixJavaEntity,"file := 'ArgoUML-0.34.mse' asFileReference readStream.

dictionary := Dictionary newFrom: (
 FamixJavaEntity withAllSubclasses collect: [ :c | 
 cn := c name withoutPrefix: #FamixJava.
 ('FAMIX.', cn) -> ('FamixJava-Entities.', cn) ]).

dictionary at: 'FAMIX.JavaSourceLanguage' put: 'FamixJava-Entities.SourceLanguage'.

repo := MooseModel importFrom: file withMetamodel: FamixJavaGenerator metamodel translationDictionary: dictionary.

model := MooseModel new.
 model silentlyAddAll: repo elements.
 model entityStorage forRuntime.
model.",,,,,,,,,,"file := 'ArgoUML-0.34.mse' asFileReference readStream.

dictionary := Dictionary newFrom: (
 FamixJavaEntity withAllSubclasses collect: [ :c | 
 cn := c name withoutPrefix: #FamixJava.
 ('FAMIX.', cn) -> ('FamixJava-Entities.', cn) ]).

dictionary at: 'FAMIX.JavaSourceLanguage' put: 'FamixJava-Entities.SourceLanguage'.

repo := MooseModel importFrom: file withMetamodel: FamixJavaGenerator metamodel translationDictionary: dictionary.

model := MooseModel new.
 model silentlyAddAll: repo elements.
 model entityStorage forRuntime.
model.",,,,,,,,,,,,,
BlMorphicWindowOpenedEvent,I am fired by morphic host window when it is opened in the World,I am fired by morphic host window when it is opened in the World,,I am fired by morphic host window when it is opened in the World,,,,,,World,,,,,,,,,,,,,,
RTSVGBitmap,"NOT WORKING, REFRAIN FROM USAGE",,,,,,,,,,,,,,"NOT WORKING, REFRAIN FROM USAGE",,,,,,,,,
WAFormDecoration,"A WAFormDecoration places its component inside an html form tag. The buttons inst var must be set. The component that a WAFormDecoration decorates must implement the method ""defaultButton"", which returns the string/symbol of the default button (one selected by default) of the form. Don't place any decorators between WAFormDecoration and its component otherwise ""defaultButton"" method fails. For each string/symbol in the buttons inst var the decorated component must implement a method of the same name, which is called when the button is selected.

Instance Variables
 buttons: <Collection of strings or symbols>

buttons
 - list of strings or symbols, each string/symbol is the label (first letter capitalized) for a button and the name of the callback method on component when button is pressed,",,A WAFormDecoration places its component inside an html form tag.,A WAFormDecoration places its component inside an html form tag.,"buttons
 - list of strings or symbols, each string/symbol is the label (first letter capitalized) for a button and the name of the callback method on component when button is pressed,",,"Instance Variables
 buttons: <Collection of strings or symbols>",,,,,,,,"Don't place any decorators between WAFormDecoration and its component otherwise ""defaultButton"" method fails.",,,,,,"The buttons inst var must be set. The component that a WAFormDecoration decorates must implement the method ""defaultButton"", which returns the string/symbol of the default button (one selected by default) of the form. 

 For each string/symbol in the buttons inst var the decorated component must implement a method of the same name, which is called when the button is selected.",,,
RTPlatformPopup,I am a basic class to have the platform popup instead of the roassal popup (RTPopup),I am a basic class to have the platform popup instead of the roassal popup (RTPopup),,,,,,,,,,,,,,,,,,,,,,
MalLatticePatterns,"The class implements the identification of patterns in FCA lattices. We can detect like horizontal decomposition with the algos in the class.

| data fca context lattice |
 data := #(#(#Cat #(#fourlegs #hair)) #(#Dog #(#smart #fourlegs #hair)) #(#Dolphin #(#smart #marine)) #(#Gibbon #(#hair #smart #thumbed)) #(#Man #(#smart #thumbed)) #(#Whale #(#smart #marine))).
 fca := MalFormalContext new.
 context := fca with: data using: #first using: #last.
 (MalLatticePatterns on: (MalLattice on: context)) reportPatterns

For moose models
 
|fca model treillis context|
model := (MooseModel root allModels) second.
fca := MalFormalContext new.
context := fca with: (model allModelClasses) using: #yourself using: [:cl | cl methods collect: [:m | m name]].
treillis := (MalLattice on: context).
Transcript clear.
(MalLatticePatterns on: treillis) reportPatterns.
(MalLattice new viewLattice: treillis).


Smalltalk collection class hierarchy:

|fca model treillis context|
treillis := (MalLattice on: MalFormalContext classHierarchyCollection).
(MalLatticePatterns on: treillis) reportModules.",,The class implements the identification of patterns in FCA lattices. We can detect like horizontal decomposition with the algos in the class.,,,,,,,,"| data fca context lattice |
 data := #(#(#Cat #(#fourlegs #hair)) #(#Dog #(#smart #fourlegs #hair)) #(#Dolphin #(#smart #marine)) #(#Gibbon #(#hair #smart #thumbed)) #(#Man #(#smart #thumbed)) #(#Whale #(#smart #marine))).
 fca := MalFormalContext new.
 context := fca with: data using: #first using: #last.
 (MalLatticePatterns on: (MalLattice on: context)) reportPatterns

For moose models
 
|fca model treillis context|
model := (MooseModel root allModels) second.
fca := MalFormalContext new.
context := fca with: (model allModelClasses) using: #yourself using: [:cl | cl methods collect: [:m | m name]].
treillis := (MalLattice on: context).
Transcript clear.
(MalLatticePatterns on: treillis) reportPatterns.
(MalLattice new viewLattice: treillis).


Smalltalk collection class hierarchy:

|fca model treillis context|
treillis := (MalLattice on: MalFormalContext classHierarchyCollection).
(MalLatticePatterns on: treillis) reportModules.",,,,,,,,,,,,,
WAFormTag,"The FORM element acts as a container for input elements and buttons.

Evaluation order:
The input fields callbacks will be evaluated in the order they
appear in the XHTML. Buttons will always be evaluated last, no matter
where they are positioned.",,The FORM element acts as a container for input elements and buttons.,The FORM element acts as a container for input elements and buttons.,,"Evaluation order:
The input fields callbacks will be evaluated in the order they
appear in the XHTML. Buttons will always be evaluated last, no matter
where they are positioned.",,,,,,,,,,,,,,,,,,
BlGridLayoutArc,"I represent an association of span interval, associated value and validity flag.

I am used by grid layout instead of Dictionary of span <-> value key-value pair for performance reasons. 

Internal Representation and Key Implementation Points.

Instance Variables
 span: <BlGridLayoutInterval>
 valid: <Boolean>
 value: <BlGridMutableInteger>","""I represent an association of span interval, associated value and validity flag.",I am used by grid layout instead of Dictionary of span <-> value key-value pair for performance reasons.,,,,"Instance Variables
 span: <BlGridLayoutInterval>
 valid: <Boolean>
 value: <BlGridMutableInteger>""",,,,,,,,,,,,,,,,,
BlAnchorRelativeToElement,Relative anchor takes an arbitrary element as a reference an compute its position based on properties of that element.,,Relative anchor takes an arbitrary element as a reference an compute its position based on properties of that element.,,,,,,,,,,,,,,,,,,,,,
RTMenuActivable,"A RTMenuActivable adds a menu to an element. The menu is activable by right-clicking on the node.

For example:

classes := RTObject withAllSubclasses.
v := RTView new.
v @ RTDraggableView.
n := RTMultiLinearColorForIdentity new objects: classes.
shape := RTEllipse new size: #numberOfMethods; color: n.
es := shape elementsOn: classes.
es @ (RTMenuActivable new action: #inspect; item: 'browse class' action: [ :e | e model browse ]).
v addAll: es.
RTFlowLayout on: es.
v",,,,,,,,,,,,,,,,,,,,,,,
RTSmoothLayoutTranslator,"A ROSmoothLayoutTranslator is xxxxxxxxx.

Instance Variables
 move: <Object>
 nbCycles: <Object>

move
 - xxxxx

nbCycles
 - xxxxx",A ROSmoothLayoutTranslator is xxxxxxxxx.,,,"move
 - xxxxx

nbCycles
 - xxxxx",,"Instance Variables
 move: <Object>
 nbCycles: <Object>

move
 - xxxxx

nbCycles
 - xxxxx",,,,,,,,,,,,,,,,,
BlElementPositionChangeTest,I contain examples of position change logging functionality,,I contain examples of position change logging functionality,,,,,,,,,,,,,,,,,,,,,
FMRelationSlot,"Description
--------------------

I am an abstract slot used to declare fame properties for a class.
The declared properties with my subclasses must have an opposite.

A relation slot will have:
- A name which is the name of the property
- A type which is the type of the property 
- An inverse name which is the name of the opposite property.

My sublasses will define everything related to the cardinality of the relation side.
 
Internal Representation and Key Implementation Points.
--------------------

 Instance Variables
 inverseName: <aString> The name of the opposite slot.
 inverseSlot: <aSlot>
 targetClass: <aClass>","Description
--------------------

I am an abstract slot",used to declare fame properties for a class.,,,,"A relation slot will have:
- A name which is the name of the property
- A type which is the type of the property 
- An inverse name which is the name of the opposite property.


Internal Representation and Key Implementation Points.
--------------------

 Instance Variables
 inverseName: <aString> The name of the opposite slot.
 inverseSlot: <aSlot>
 targetClass: <aClass>",,My sublasses will define everything related to the cardinality of the relation side.,,,,,,,,,The declared properties with my subclasses must have an opposite.,,,,,,
BlClickEvent,"The click event is fired when a pointing device button (a mouse's primary button) is pressed and released on a single element.

The order of fired events:

 - Mouse Down
 - Mouse Up
 - Click",,The click event is fired when a pointing device button (a mouse's primary button) is pressed and released on a single element.,,,"The order of fired events:

 - Mouse Down
 - Mouse Up
 - Click",,,,,,,,,,,,,,,,,,
BrExamplesShowroom,"I am a collection of ""showroom"" examples.

! Buttons

In the example below we show all existing button styles
${example:BrExamplesShowroom class>>#allButtons|expanded|noCode}$

The following glamorous button reacts to various UI interaction events and changes its style according the state (pressed, hovered)
${example:BrExamplesShowroom>>#glamorousButton}$

Button can also be disabled to prevent click events
${example:BrExamplesShowroom>>#glamorousDisabledButton}$

! Toggles

Toggle buttons can have radically different look, while the behaviour of all of them is exactly the same.
${example:BrExamplesShowroom class>>#allToggles|noCode}$

!! Labelled toggle

To create a toggle button with a label user should the corresponding ${class:BrMaterialToggleWithIconLook}$

${example:BrExamplesShowroom>>#materialLabelToggle}$

!! Iconified toggle

Similarly we can use the icon look to build an iconified toggle:
${example:BrExamplesShowroom>>#materialIconToggle}$

!! Iconified labelled toggle

We can compose label and icon looks to create a toggle button with both label and the icon. Note that the order of looks defines the visual order of the label and icon:

${example:BrExamplesShowroom>>#materialToggle}$

Thus being said by swapping the label and icon look we can move the icon to the right from the label:

${example:BrExamplesShowroom>>#materialReversedToggle}$

! Accordion

Accordion is the exandable and collapsable widget that consists of a header and a content. Any visual ${class:BlElement}$ can be a header of the accordion. The following example shows how a ${class:BrButton}$ can be used an accordion header:

${example:BrExamplesShowroom>>#accordion}$

! Tabs

The following example shows how to create a tab group widget with 3 tabs. The content of each tab is defined with the help of a stencil.

${example:BrExamplesShowroom>>#glamorousTabs}$

! Toolbar

The toolbar is a logical set of action buttons (either labelled or iconified).
${example:BrExamplesShowroom>>#glamorousToolbar}$
${example:BrExamplesShowroom>>#materialToolbar}$

! List

The example below describes how to instantiate a new instance of the simple list that only has one column:
${example:BrExamplesShowroom>>#simpleList|noCode}$

${example:BrExamplesShowroom>>#columnedList|noCode}$","I am a collection of ""showroom"" examples.",,,,,,,,,"! Buttons

In the example below we show all existing button styles
${example:BrExamplesShowroom class>>#allButtons|expanded|noCode}$

The following glamorous button reacts to various UI interaction events and changes its style according the state (pressed, hovered)
${example:BrExamplesShowroom>>#glamorousButton}$

Button can also be disabled to prevent click events
${example:BrExamplesShowroom>>#glamorousDisabledButton}$

! Toggles

Toggle buttons can have radically different look, while the behaviour of all of them is exactly the same.
${example:BrExamplesShowroom class>>#allToggles|noCode}$

!! Labelled toggle

To create a toggle button with a label user should the corresponding ${class:BrMaterialToggleWithIconLook}$

${example:BrExamplesShowroom>>#materialLabelToggle}$

!! Iconified toggle

Similarly we can use the icon look to build an iconified toggle:
${example:BrExamplesShowroom>>#materialIconToggle}$

!! Iconified labelled toggle

We can compose label and icon looks to create a toggle button with both label and the icon. Note that the order of looks defines the visual order of the label and icon:

${example:BrExamplesShowroom>>#materialToggle}$

Thus being said by swapping the label and icon look we can move the icon to the right from the label:

${example:BrExamplesShowroom>>#materialReversedToggle}$

! Accordion

Accordion is the exandable and collapsable widget that consists of a header and a content. Any visual ${class:BlElement}$ can be a header of the accordion. The following example shows how a ${class:BrButton}$ can be used an accordion header:

${example:BrExamplesShowroom>>#accordion}$

! Tabs

The following example shows how to create a tab group widget with 3 tabs. The content of each tab is defined with the help of a stencil.

${example:BrExamplesShowroom>>#glamorousTabs}$

! Toolbar

The toolbar is a logical set of action buttons (either labelled or iconified).
${example:BrExamplesShowroom>>#glamorousToolbar}$
${example:BrExamplesShowroom>>#materialToolbar}$

! List

The example below describes how to instantiate a new instance of the simple list that only has one column:
${example:BrExamplesShowroom>>#simpleList|noCode}$

${example:BrExamplesShowroom>>#columnedList|noCode}$",,,,,,,,,,,,,
WAServerAdaptor,"A WAServer is the abstract base class for all servers. Actual servers do not have to subclass it but have to support the protocol:
 - #codec
 - #usesSmalltalkEncoding

Instance Variables
 codec: <WACodec>

codec
 - the codec used for response conversion from characters to bytes",A WAServer is the abstract base class for all servers.,,,"- #codec
 - #usesSmalltalkEncoding

codec
 - the codec used for response conversion from characters to bytes",,"Instance Variables
 codec: <WACodec>",,,,,,,,,,,Actual servers do not have to subclass it but have to support the protocol:,,,,,,
BlElementPositionChangedEvent,"Is sent when element's position within its parent changes.

Note: position may change even if an element has no parent",,,Is sent when element's position within its parent changes.,,,,,,,,,,,Note: position may change even if an element has no parent,,,,,,Is sent when element's position within its parent changes,,,
FamixTParameterType,"ParameterType represents the symbolic type used in parameterizable classes. This is a FAMIXType.

Example:
public class AClass<A,B,C> {
...
}

Where AClass is a ParameterizableClass. A, B and C are ParameterType of AClass.",ParameterType represents the symbolic type used in parameterizable classes. This is a FAMIXType.,,,,,,,,,"Example:
public class AClass<A,B,C> {
...
}

Where AClass is a ParameterizableClass. A, B and C are ParameterType of AClass.",,,,,,,,,,,,,
RTHistogramSet,The histogram gives you a distribution frequency over the points given. Frequency on y and a collection of values per bars on x.,,The histogram gives you a distribution frequency over the points given. Frequency on y and a collection of values per bars on x.,,,,,,,,,,,,,,,,,,,,,
BlSpaceFramePhase,"I represent a frame phase.

Each phase knows about its start time and send a corresponding event once the phase is completed.",I represent a frame phase.,Each phase knows about its start time and send a corresponding event once the phase is completed.,,,,,,,,,,,,,,,,,,,,,
RTDualAttachPoint,I am a new class to combine attach points,I am a new class,to combine attach points,,,,,,,,,,,,,,,,,,,,,
BlKeyCombination,"I represent an abstract key combination which is the most important part of ===BlShortcut===.
I define an event matching API that allows ===BlShortcutHandler=== to find the most appropriate shortcut for currently pressed keys.

I have support of Visitor pattern. See ===BlKeyCombinationVisitor===

See ===BlKeyCombinationExamples=== for related examples.",I represent an abstract key combination which is the most important part of ===BlShortcut===.,I define an event matching API that allows ===BlShortcutHandler=== to find the most appropriate shortcut for currently pressed keys.I have support of Visitor pattern,,,,,"See ===BlKeyCombinationVisitor===

See ===BlKeyCombinationExamples=== for related examples.",,"BlKeyCombinationVisitor
BlKeyCombinationExamples
BlShortcutHandler",,,,,,,,,,,,,,
BrSelectionRequest,I am sent by a look to request selection update from the view model,,I am sent by a look to request selection update from the view model,,,,,,,,,,,,,,,,,,,,,
GtGraphTreemapSquarify,"I split an area into rectangles that are close to squares (aspect ratio 1) as much as possible.
I use ${method:GtGraphTreemapNode>>#weight}$ node values to split an area into.
I use ${class:GtGraphTreemapSquarifyStep}$ to split area into sub-areas and measure ${class:GtGraphTreemapNode}$ positions and extends.

The algorithm is implemented as described in the paper by Mark Bruls, Kees Huizing, and Jarke J. van Wij, ""Squarified Treemaps"" [*PDF>https://www.win.tue.nl/~vanwijk/stm.pdf*].

!! Algorithm Explanation

This is an adapted extract from the paper Squarified Treemaps mentioned above. Suppose we have a rectangle with width ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodes|label=#width}$ and height ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodes|label=#height}$, and furthermore suppose that this rectangle must be subdivided in seven rectangles with areas ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodes|label=#nodeValues}$. The area will be subdivided as follows:
${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodes|noCode|codeExpanded=false|previewExpanded=true|previewShow=#gtPreviewFor:}$

The *first step* of our algorithm is to split the initial rectangle. We choose for a horizontal subdivision, because the original rectangle is wider than high. We next fill the left half. First we add a single rectangle. The aspect ratio of this first rectangle is ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesFirstStep|label=#worstValueRounded}$.

${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesFirstStep|previewExpanded=true|noCode}$

Next we add a second rectangle, above the first. The worst aspect ratio improves to ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesSecondStep|label=#worstValueRounded}$.
${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesSecondStep|previewExpanded=true|noCode}$

However, if we add the next (area 4) above these original rectangles, the aspect ratio of this rectangle is ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesThirdStep|label=#worstValueRounded}$.
${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesThirdStep|previewExpanded=true|noCode}$

Therefore, we decide that we have reached an optimum for the left half in step two, and start processing the right half. The initial subdivision we choose here is vertical, because the rectangle is higher than wider. In step 4 we add the rectangle with area 4:
${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesFourthStep|previewExpanded=true|noCode}$

In the next step, we add area 3. The worst aspect ratio decreases from ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesFourthStep|label=#worstValueRounded}$ to ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesFifthStep|label=#worstValueRounded}$: 
${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesFifthStep|previewExpanded=true|noCode}$

Addition of the next (area 2) however does not improve the result as the worst aspect ratio increases from ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesFifthStep|label=#worstValueRounded}$ to ${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesSixthStep|label=#worstValueRounded}$:
${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesSixthStep|previewExpanded=true|noCode}$

So we reject the previous step and start to fill the right top partition:
${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodesSeventhStep|previewExpanded=true|noCode}$
 
These steps are repeated until all rectangles have been processed. The final result is the following:
${example:GtGraphTreemapLayoutExamples>>#squarifyWithSevenNodes|noCode|codeExpanded=false|previewExpanded=true}$.

An optimal result can not be guaranteed, and counterexamples can be set up. The order in which the rectangles are processed is important. We found that a decreasing order usually gives the best results. The initially large rectangle is then filled in first with the larger subrectangles.",,"I split an area into rectangles that are close to squares (aspect ratio 1) as much as possible.
I use ${method:GtGraphTreemapNode>>#weight}$ node values to split an area into.
I use ${class:GtGraphTreemapSquarifyStep}$ to split area into sub-areas and measure ${class:GtGraphTreemapNode}$ positions and extends.","I use ${method:GtGraphTreemapNode>>#weight}$ node values to split an area into.
I use ${class:GtGraphTreemapSquarifyStep}$ to split area into sub-areas and measure ${class:GtGraphTreemapNode}$ positions and extends.",,,,"The algorithm is implemented as described in the paper by Mark Bruls, Kees Huizing, and Jarke J. van Wij, ""Squarified Treemaps"" [*PDF>https://www.win.tue.nl/~vanwijk/stm.pdf*].",,,,,,"The algorithm is implemented as described in the paper by Mark Bruls, Kees Huizing, and Jarke J. van Wij, ""Squarified Treemaps"" [*PDF>https://www.win.tue.nl/~vanwijk/stm.pdf*].","An optimal result can not be guaranteed, and counterexamples can be set up. The order in which the rectangles are processed is important.",,https://www.win.tue.nl/~vanwijk/stm.pdf,,,We found that a decreasing order usually gives the best results. The initially large rectangle is then filled in first with the larger subrectangles.,,The order in which the rectangles are processed is important.,,
RTVerticalMultipleData,"RTVerticalMultipleData represents a group of data points that are vertically located. Each group has the same X value.

Negative data are not allowed.

Here is an example:
[[[
| b d | 
b := RTGrapher new.

d := RTVerticalMultipleData new.
d points: #( #('hello' 1 2 1) #('world' 2 4 2 ) #('bonjour' 3 5 4) #('bonjour' 3 5 4 ) #('bonjour' 3 5 4)).
d addMetric: #second.
d addMetric: #third.
d addMetric: #fourth.

d barChartWithBarTitle: #first rotation: -30.
b add: d.

b 
]]] 

Here another example:
[[[
| b d classes |
classes := (Collection withAllSubclasses reverseSortedAs: #numberOfMethods) first: 10.
 
b := RTGrapher new.

d := RTVerticalMultipleData new.
d points: classes.
d addMetric: #numberOfLinesOfCode.
d addMetric: #numberOfMethods.

d barChartWithBarTitle: #name rotation: -30.
b add: d.

b
]]]",RTVerticalMultipleData represents a group of data points that are vertically located.,,RTVerticalMultipleData represents a group of data points that are vertically located.,,"Each group has the same X value.

Negative data are not allowed.",,,,,"Here is an example:
[[[
| b d | 
b := RTGrapher new.

d := RTVerticalMultipleData new.
d points: #( #('hello' 1 2 1) #('world' 2 4 2 ) #('bonjour' 3 5 4) #('bonjour' 3 5 4 ) #('bonjour' 3 5 4)).
d addMetric: #second.
d addMetric: #third.
d addMetric: #fourth.

d barChartWithBarTitle: #first rotation: -30.
b add: d.

b 
]]] 

Here another example:
[[[
| b d classes |
classes := (Collection withAllSubclasses reverseSortedAs: #numberOfMethods) first: 10.
 
b := RTGrapher new.

d := RTVerticalMultipleData new.
d points: classes.
d addMetric: #numberOfLinesOfCode.
d addMetric: #numberOfMethods.

d barChartWithBarTitle: #name rotation: -30.
b add: d.

b
]]]",,,,,,,,,,,,,
TSpartaStrokeOptions,"I define an api of stroke options object.
Stroke options are used in stroking operations.",,"I define an api of stroke options object.
Stroke options are used in stroking operations.",,"I define an api of stroke options object.
Stroke options are used in stroking operations.",,,,,,,,,,,,,,,,,,,
FMOne,"Description
--------------------

I am a relation slot representing a property containing only one element.

Examples
--------------------

 Trait named: #FamixTMethod
 slots: { #parentType => FMOne type: #FamixTWithMethods opposite: #methods }
 package: 'Famix-Traits-Method'","Description
--------------------

I am a relation slot representing a property containing only one element.",,,,,,,,,"Examples
--------------------

 Trait named: #FamixTMethod
 slots: { #parentType => FMOne type: #FamixTWithMethods opposite: #methods }
 package: 'Famix-Traits-Method'",,,,,,,,,,,,,
BrTabAddedEvent,I am sent when a new tab is added to ${class:BrTabGroupModel},,I am sent when a new tab is added to ${class:BrTabGroupModel},I am sent when a new tab is added to ${class:BrTabGroupModel},,,,,,${class:BrTabGroupModel},,,,,,,,,,,,,,
RTSVGAbstractLine,"A RTSVGAbstractLine refers to the common interface for both regular SVG lines and bezier lines (as paths).

The decoration refers to the Maker of the Line.","""A RTSVGAbstractLine refers to the common interface for both regular SVG lines and bezier lines (as paths).

The decoration refers to the Maker of the Line.""",,,,,,,,,,,,,,,,,,,,,,
PRMarkdownWriter,"I am a writer for CommonMark
http://spec.commonmark.org/0.28/","""I am a writer for CommonMark",,,,,,"http://spec.commonmark.org/0.28/""",,,,,,,,,,,,,,,,
GtPlotterScaleDomain,"In mathematics, and more specifically in naive set theory, the domain of definition (or simply the domain) of a function is the set of ""input"" or argument values for which the function is defined. That is, the function provides an ""output"" or value for each member of the domain.[1] Conversely, the set of values the function takes on as output is termed the image of the function, which is sometimes also referred to as the range of the function.

https://en.wikipedia.org/wiki/Domain_of_a_function",,,,,,,,,,,,,,,,https://en.wikipedia.org/wiki/Domain_of_a_function,,,"In mathematics, and more specifically in naive set theory, the domain of definition (or simply the domain) of a function is the set of ""input"" or argument values for which the function is defined. That is, the function provides an ""output"" or value for each member of the domain.[1] Conversely, the set of values the function takes on as output is termed the image of the function, which is sometimes also referred to as the range of the function.",,,,
BlArrowheadExamples,I contain examples of different types of ==BlArrowheadElement==,,I contain examples of different types of ==BlArrowheadElement==,,,,,,,BlArrowheadElement,,,,,,,,,,,,,,
FMFutureProperty,"Description
--------------------

I represent a property of the object currently been imported while it is not yet imported.

I will be useful until all my values are resolved. Each time a value is resolved I'll check if I can be resolved. In that case, I'll push my values in real property.
 
Internal Representation and Key Implementation Points.
--------------------

 Instance Variables
 parentClass: <aFMFutureEntity> The entity owning the property.
 values: <aCollection> The values of the property. Those values can contain dangling references while everything is not imported yet.","""Description
--------------------

I represent a property of the object currently been imported while it is not yet imported.","I represent a property of the object currently been imported while it is not yet imported.

I will be useful until all my values are resolved. Each time a value is resolved I'll check if I can be resolved. In that case, I'll push my values in real property.",,,,"Internal Representation and Key Implementation Points.
--------------------

 Instance Variables
 parentClass: <aFMFutureEntity> The entity owning the property.
 values: <aCollection> The values of the property. Those values can contain dangling references while everything is not imported yet.""",,,,,,,,,,,,,,,,,
RTScale,A class to have nice scales checks subclasses,A class to have nice scales,,,,,,checks subclasses,,,,,,,,,,,,,,,,
MalTerms,"Terms subclasses Bag with support for handling stopwords etc.

example: string
 | terms |
 terms := Terms new.
 terms addString: string using: CamelCaseScanner new.
 terms withCoundDo: [ :term :count |
 term -> count ].

Copyright (c), 2004-2007 Adrian Kuhn. This class is part of Hapax. Hapax is distributed under BSD License, see package comment.","""Terms subclasses Bag with support for handling stopwords etc.","""Terms subclasses Bag with support for handling stopwords etc.","Copyright (c), 2004-2007 Adrian Kuhn. This class is part of Hapax. Hapax is distributed under BSD License, see package comment.""",,,,"Hapax is distributed under BSD License, see package comment.",,,example: string | terms | terms := Terms new. terms addString: string using: CamelCaseScanner new. terms withCoundDo: [ :term :count | term -> count ].,,,,,,,,,,,,"Copyright (c), 2004-2007 Adrian Kuhn. This class is part of Hapax. Hapax is distributed under BSD License, see package comment.",
BrTextEditorSelectionRecorder,"I am used to record text selection intervals while user drags mouse over the text editor.
Additionally I play a role of a selection strategy to support single or multiple selection.",,"I am used to record text selection intervals while user drags mouse over the text editor.
Additionally I play a role of a selection strategy to support single or multiple selection.","I am used to record text selection intervals while user drags mouse over the text editor.
Additionally I play a role of a selection strategy to support single or multiple selection.",,,,,,,,,,,,,,,,,,,,
PMGradient,"Computes the gradient of a function of a Collection of Numbers.

Example: f(x,y)=x^2 * y
g := PMGradient of:[:x|x first squared * x second].
g value:#(3 2). ""-->#(12 9)"" 
g value:#(1 1). ""-->#(2 1)""",,"""Computes the gradient of a function of a Collection of Numbers.",,,,,,,,"Example: f(x,y)=x^2 * y
g := PMGradient of:[:x|x first squared * x second].
g value:#(3 2). """"-->#(12 9)"""" 
g value:#(1 1). """"-->#(2 1)"""" """,,,,,,,,,,,,,
FAMIXNamespaceGroup,FAMIXNamespaceGroup is a MooseGroup containing only FAMIX enities of type FAMIXNamespace.,FAMIXNamespaceGroup is a MooseGroup,containing only FAMIX enities of type FAMIXNamespace.,containing only FAMIX enities of type FAMIXNamespace.,,,,,,FAMIXNamespace,,,,,,,,,,,,,,
RTDecoratedTest,A RTDecoratedTest is a test class for testing the behavior of RTDecorated,A RTDecoratedTest is a test class for testing the behavior of RTDecorated,A RTDecoratedTest is a test class for testing the behavior of RTDecorated,A RTDecoratedTest is a test class for testing the behavior of RTDecorated,,,,,,,,,,,,,,,,,,,,
WAPlugin,"I am an abstract root class for all plugins. Plugins are an easy way to add or remove additional tools without changing the codebase. To add a new plugin make sure you choose the right superclass so that the tool can detect your code.

The appearance of all plugins, such as icons, has to be configured using CSS.",I am an abstract root class for all plugins,"Plugins are an easy way to add or remove additional tools without changing the codebase. To add a new plugin make sure you choose the right superclass so that the tool can detect your code.

The appearance of all plugins, such as icons, has to be configured using CSS.",,,,,,,,,,,,,,,,,,"The appearance of all plugins, such as icons, has to be configured using CSS.",,,
GtExampleDependenciesResolver,"I know how to extract the dependencies of a given example. The dependencies of a given example consists in message sends to other method constructing an example. 

To determine if a message send represents a dependency to a method containing an example, I use heuristic defined by subclasses of ==GtExampleDependencyResolver==.",,I know how to extract the dependencies of a given example. The dependencies of a given example consists in message sends to other method constructing an example.,,,"To determine if a message send represents a dependency to a method containing an example, I use heuristic defined by subclasses of ==GtExampleDependencyResolver==.",,,,#ERROR!,,,,,,,,,,,,,,
RTGrapherSelectRangeViewContext,"Define a range for GT

-=-=-=
g := RTGrapher new.
g view: RTView new.
ds := RTData new.
ds dotShape color: Color blue trans.
ds points: RTShape withAllSubclasses.
ds y: [ :cls | cls numberOfMethods - 50 ].
ds x: [ :cls | cls numberOfLinesOfCode - 150 ].
g add: ds.

RTGrapherSelectRangeViewContext onGrapher: g callback: [ :elements | (g view attributeAt: #presentation) selection: elements ].

g 
-=-=-=",,Define a range for GT,,,,,,,,"-=-=-=
g := RTGrapher new.
g view: RTView new.
ds := RTData new.
ds dotShape color: Color blue trans.
ds points: RTShape withAllSubclasses.
ds y: [ :cls | cls numberOfMethods - 50 ].
ds x: [ :cls | cls numberOfLinesOfCode - 150 ].
g add: ds.

RTGrapherSelectRangeViewContext onGrapher: g callback: [ :elements | (g view attributeAt: #presentation) selection: elements ].

g 
-=-=-=",,,,,,,,,,,,,
SpUserFontSourceBuffer,"I am a buffer source.
Is useful if font is stored as byte array in the image",I am a buffer source.,,,,,,,,,,,,,,,,,Is useful if font is stored as byte array in the image,,,,,
BlGridLayoutUsageExamples,"I contain examples of a grid layout

I show how different resizing strategies work and how to build advanced layouts with the help of a grid",,"I contain examples of a grid layout

I show how different resizing strategies work and how to build advanced layouts with the help of a grid",,,,,,,,,,,,,,,,,,,,,
ChrysalPillarishConfiguration,I'm a pillar specific class to manage code not generated for the configuration class. Pillar code should not use me but my subclass.,I'm a pillar specific class to manage code not generated for the configuration class.,I'm a pillar specific class to manage code not generated for the configuration class.,,,,,,Pillar code should not use me but my subclass.,,,,,,,,,,Pillar code should not use me but my subclass.,,,,,
TSpTextRun,"I define an API of a Text run - an object that holds an array of glyphs that represent a piece of text.

Note that TextRun is optimised for the case of simple ASCII string (all chars are 8 bit), simple multilanguage string (all chars are 16 bit) and complex scripts (characters have various length of 8-32 bits).

Users should never instantiate TextRun directly, instead ask TextPainter to do the necessary job - it is needed to support backend specific text runs",an object that holds an array of glyphs that represent a piece of text.,I define an API of a Text run,,,"Note that TextRun is optimised for the case of simple ASCII string (all chars are 8 bit), simple multilanguage string (all chars are 16 bit) and complex scripts (characters have various length of 8-32 bits).",,,,,,,,,"Note that TextRun is optimised for the case of simple ASCII string (all chars are 8 bit), simple multilanguage string (all chars are 16 bit) and complex scripts (characters have various length of 8-32 bits).

Users should never instantiate TextRun directly, instead ask TextPainter to do the necessary job - it is needed to support backend specific text runs",,,,,,,,,
GLMRoassal2MorphicTest,A GLMRoassalMorphicTest is xxxxxxxxx.,A GLMRoassalMorphicTest is xxxxxxxxx.,,,,,,,,,,,,,,,,,,,,,,
WAInvisibleSessionTrackingStrategy,I am the abstract base class for classes that that use some request attribute that is present on every request for tracking sessions. For document handlers query fields are used.,I am the abstract base class,for classes that that use some request attribute that is present on every request for tracking sessions.,For document handlers query fields are used.,,,,,,,,,,,,,,,,,,,,
RTTreeMapExampleTODELETE,Examples of RTTreeMap,Examples of RTTreeMap,,,,,,,,RTTreeMap,,,,,,,,,,,,,,
RTEditableLabel,"I am a class to create editable label shapes, but do not forget that roassal is for visualizations not to build morphs",I am a class to create editable label shapes,", but do not forget that roassal is for visualizations not to build morphs",,,,,,,,,,,,but do not forget that roassal is for visualizations not to build morphs,,,,,,,,,
RTTextPath,I am a simple class to generate text in roassal with Athens cairo that uses the textPathCommand from roassal,I am a simple class to generate text in roassal,generate text in roassal,with Athens cairo that uses the textPathCommand from roassal,,,,,,,,,,,,,,,,,,,,
WAVideoTag,"Supported only on experimental Opera
http://people.opera.com/howcome/2007/video/

A video element represents a video or movie, with an alternate representation given by its contents.

http://www.whatwg.org/specs/web-apps/current-work/#video
http://lists.whatwg.org/pipermail/whatwg-whatwg.org/attachments/20070228/6a0cdddc/attachment.txt",,,,,,,"""Supported only on experimental Opera
http://people.opera.com/howcome/2007/video/

A video element represents a video or movie, with an alternate representation given by its contents.

http://www.whatwg.org/specs/web-apps/current-work/#video
http://lists.whatwg.org/pipermail/whatwg-whatwg.org/attachments/20070228/6a0cdddc/attachment.txt""",,,,,,,,,,,,,,,,
BlUniverseEvent,I am an event that is sent to the universe by the host to control the Universe's lifecycle,I am an event that is sent to the universe by the host to control the Universe's lifecycle,,I am an event that is sent to the universe by the host to control the Universe's lifecycle,,,,,,Universe,,,,,,,,,,,,,,
BlElementDynamicTransformation,"I am dynamic element transformation in the sense that my transformation matrix may actually depend on some element properties such as #extent or #position.

It means that matrix computation is performed only when requested taking owner element into account.
This also means that the matrix dimension (2D or 3D) should be determined dynamically based on inner transformations",I am dynamic element transformation in the sense that my transformation matrix may actually depend on some element properties such as #extent or #position.,I am dynamic element transformation in the sense that my transformation matrix may actually depend on some element properties such as #extent or #position.,,,It means that matrix computation is performed only when requested taking owner element into account.,,,,,,,,,,,,,This also means that the matrix dimension (2D or 3D) should be determined dynamically based on inner transformations,,,,,
PMBernoulliGeneratorTest,A BernoulliGeneratorTest is a test class for testing the behavior of BernoulliGenerator,A BernoulliGeneratorTest is a test class for testing the behavior of BernoulliGenerator,A BernoulliGeneratorTest is a test class for testing the behavior of BernoulliGenerator,A BernoulliGeneratorTest is a test class for testing the behavior of BernoulliGenerator,,,,,,BernoulliGenerator,,,,,,,,,,,,,,
BlFocusExamples,"How to:

 1) Inspect / run example
 2) Click one any cell to give it a focus (blue border should appear)
 3) Navigate with keyboard arrows (arrow up/down left/right)",,,,,,,,,,"How to:

 1) Inspect / run example
 2) Click one any cell to give it a focus (blue border should appear)
 3) Navigate with keyboard arrows (arrow up/down left/right)",,,,,,,,,,,,,
BlChildrenSubset,"I capture a subset of children from a ${class:BlElement}$ instance.

I am an abstract class. My subclasses define the actual order and criteria for filtering children and iterating over the set of children.
I exist to explicitly capture and combine various ways of filtering and iterating over children. For example, ${class:BlChildrenReversed}$ indicates that the user wants to explicitly iterate over elements in reverse order; ${class:BlChildrenAccountedByLayout}$ indicates that only should children taken into account by layout should be included. 
The example below shows a scenario of combining multiple ways to iterate over children. By having an explicit object for each operation, the composition of operations can be inspected.
${example:BlChildrenSubsetExamples>>#childrenWithMultipleCombinedSubsets}$

I do not enforce a lazy API. Subclasses can perform the filtering immediately or when iteration over children is required. I aim to maintain the composition of subsets while optimizing for speed whenever possible.

!!API
Instances of me are created by calling the factory method ${method:BlChildrenSubset class>>#on:}$ on a subclass with an instance of ${class:BlChildren}$ as parameter.

Subclasses need to override the method ${method:BlChildrenSubset>>#subsetFrom:}$ to filter the elements from the given ${class:BlChildren}$ instance. This can perform no filtering, filter elements, or also change the order of elements.

!! Implementation details
Internally the result of ${method:BlChildrenSubset>>#subsetFrom:}$ is stored into an instance variable. This result is then used when accessing or iterating over elements. This decision was taken to allow iterators to perform work when the iterator is created and ensure a faster iteration.

To preserve the composition of iterators I hold a reference to the initial ${class:BlChildren}$ instance.",I am an abstract class.,"""I capture a subset of children from a ${class:BlElement}$ instance. 
I exist to explicitly capture and combine various ways of filtering and iterating over children.",,"!!API
Instances of me are created by calling the factory method ${method:BlChildrenSubset class>>#on:}$ on a subclass with an instance of ${class:BlChildren}$ as parameter.","!! Implementation details
Internally the result of ${method:BlChildrenSubset>>#subsetFrom:}$ is stored into an instance variable. This result is then used when accessing or iterating over elements. This decision was taken to allow iterators to perform work when the iterator is created and ensure a faster iteration.","!!API
Instances of me are created by calling the factory method ${method:BlChildrenSubset class>>#on:}$ on a subclass with an instance of ${class:BlChildren}$ as parameter.

To preserve the composition of iterators I hold a reference to the initial ${class:BlChildren}$ instance.""",,"My subclasses define the actual order and criteria for filtering children and iterating over the set of children. 
I do not enforce a lazy API. Subclasses can perform the filtering immediately or when iteration over children is required. I aim to maintain the composition of subsets while optimizing for speed whenever possible.


Subclasses need to override the method ${method:BlChildrenSubset>>#subsetFrom:}$ to filter the elements from the given ${class:BlChildren}$ instance. This can perform no filtering, filter elements, or also change the order of elements.",,"For example, ${class:BlChildrenReversed}$ indicates that the user wants to explicitly iterate over elements in reverse order; ${class:BlChildrenAccountedByLayout}$ indicates that only should children taken into account by layout should be included. 
The example below shows a scenario of combining multiple ways to iterate over children. By having an explicit object for each operation, the composition of operations can be inspected.
${example:BlChildrenSubsetExamples>>#childrenWithMultipleCombinedSubsets}$",,,,,,,,,,,,,
BlSpaceEventExamples,I contain examples of space related events,,I contain examples of space related events,,,,,,,,,,,,,,,,,,,,,
XdDocumentsExamples,"!! How-To Create Base64 String

[[[
| aDocument anXdFile |
aDocument := Gt2DocumentExamples new documentWithExistingClass.
anXdFile := aDocument saveToXDoc.
ZnBase64Encoder new 
 breakLines;
 encode: anXdFile streamingStrategy bytes 
]]]",,,,,,,,,,"!! How-To Create Base64 String

[[[
| aDocument anXdFile |
aDocument := Gt2DocumentExamples new documentWithExistingClass.
anXdFile := aDocument saveToXDoc.
ZnBase64Encoder new 
 breakLines;
 encode: anXdFile streamingStrategy bytes 
]]]",,,,,,,,,,,,,
ManifestFamixPharoSmalltalkEntities,I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser,,I store metadata for this package.,These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser,,,,,,SmalllintManifestChecker,,,,,,,,,,,,,,
BrTextEditorExamples,"! Today we will learn how to compose an editor 🙊

==It is as simple as computing a factorial, a piece of cake! == 🍰

[[[show=gtPrintIn:
 10 factorial
]]]

!!! 🔹 First create the text 💁

[[[example=BrTextEditorExamples>>#newText]]]

!!! 🔸 Next, we build the editor 👷

[[[example=BrTextEditorExamples>>#newEditor]]]

!!! 🔹 Then, we attach text to the enditor. 💡

[[[example=BrTextEditorExamples>>#editor:text:]]]

!!! 🔸 Next, we create an editor element. 🤘

[[[example=BrTextEditorExamples>>#newElement|show=gtLiveIn:]]]

!!! 🔹 And finally, build everything together 💪

[[[example=BrTextEditorExamples>>#element:editorText:|show=gtLiveIn:]]]

! Done 😎",,! Today we will learn how to compose an editor 🙊,,,,,,,,"! Today we will learn how to compose an editor 🙊

==It is as simple as computing a factorial, a piece of cake! == 🍰

[[[show=gtPrintIn:
 10 factorial
]]]

!!! 🔹 First create the text 💁

[[[example=BrTextEditorExamples>>#newText]]]

!!! 🔸 Next, we build the editor 👷

[[[example=BrTextEditorExamples>>#newEditor]]]

!!! 🔹 Then, we attach text to the enditor. 💡

[[[example=BrTextEditorExamples>>#editor:text:]]]

!!! 🔸 Next, we create an editor element. 🤘

[[[example=BrTextEditorExamples>>#newElement|show=gtLiveIn:]]]

!!! 🔹 And finally, build everything together 💪

[[[example=BrTextEditorExamples>>#element:editorText:|show=gtLiveIn:]]]

! Done 😎",,,,,,,,,,,,,
WAUpTimeTracker,"WAUpTimeTracker is used to track the TimeStamp when the image last booted.

Access the TimeStamp when the image booted as follows:

 WAUpTimeTracker imageBootTime.

Access the Duration how long ago the image booted as follows:

 WAUpTimeTracker imageUpTime.

At system startup the imageBootTime is (re)set automatically.

This is a work around for Time millisecondClockValue wrapping around.",,"""WAUpTimeTracker is used to track the TimeStamp when the image last booted.

Access the TimeStamp when the image booted as follows:

 WAUpTimeTracker imageBootTime.

Access the Duration how long ago the image booted as follows:

 WAUpTimeTracker imageUpTime.

At system startup the imageBootTime is (re)set automatically.","Access the TimeStamp when the image booted as follows:

 WAUpTimeTracker imageBootTime.

Access the Duration how long ago the image booted as follows:

 WAUpTimeTracker imageUpTime.

At system startup the imageBootTime is (re)set automatically.","Access the TimeStamp when the image booted as follows:

 WAUpTimeTracker imageBootTime.

Access the Duration how long ago the image booted as follows:

 WAUpTimeTracker imageUpTime.

At system startup the imageBootTime is (re)set automatically.",,,,,,,,,,"This is a work around for Time millisecondClockValue wrapping around.""",,,,,,,,,
GtRemoteInspector,"GtRemoteInspector provides a mechanism for remote viewing of objects over a REST/JSON API.

Public API and Key Messages

- message one 
- message two 
- (for bonus points) how to create instances.

 One simple example is simply gorgeous.
 
Internal Representation and Key Implementation Points.

 Instance Variables
 namedObjects: <Object>


 Implementation Points",,GtRemoteInspector provides a mechanism for remote viewing of objects over a REST/JSON API.,,"Public API and Key Messages

- message one 
- message two 
- (for bonus points) how to create instances.",,"Internal Representation and Key Implementation Points.

 Instance Variables
 namedObjects: <Object>",,,,,,,,,,,,,,,,,
BrTextEditorCursorElementRemovedEvent,I am sent by the text editor element when an element playing a role of the cursor is removed from the editor,I am sent by the text editor element,I am sent by the text editor element when an element playing a role of the cursor is removed from the editor,,,,,,,,,,,,,,,,,,,,,
BlChildrenCollection,"I am an abstract collection of bloc elements that can be mutated. I am used by a ${class:BlElement}$ to store its children.

I provide a data structure independent API for adding and removing children. I assume an index-based way of working with children. My subclasses wrap concrete data structures for storing the actual children. Bloc elements work with children only in terms of the API that I provide. Hence, I only provide a minimum API needed to work with children, instead of the full collection API.

I allow elements to optimize working with children for different scenarious. For example, an array for storing children optimises for accessing fast accesses at any position. A linked list optimize for fast adding and removing. A rope uses a balanced binary tree to support fast adding, removing and accessing, with the disadvantage of taking more memory.

!!API

The following subclasses can be used to store children: 
- ${class:BlChildrenArray}$: stores children using an ${class:Array}$ 
- ${class:BlChildrenLinkedList}$: stores children using a ${class:LinkedList}$ 
- ${class:BlChildrenOrderedCollection}$: stores children using a ${class:OrderedCollection}$
- ${class:BlChildrenRope}$: stores children using a ${class:BlCollectionRope}$

Subclasses need to provide the implementation for methods adding and removing children.","""I am an abstract collection of bloc elements that can be mutated.","I provide a data structure independent API for adding and removing children. I assume an index-based way of working with children. 

I allow elements to optimize working with children for different scenarious. For example, an array for storing children optimises for accessing fast accesses at any position. A linked list optimize for fast adding and removing. A rope uses a balanced binary tree to support fast adding, removing and accessing, with the disadvantage of taking more memory.",I am used by a ${class:BlElement}$ to store its children.,,,,,"My subclasses wrap concrete data structures for storing the actual children. Bloc elements work with children only in terms of the API that I provide. Hence, I only provide a minimum API needed to work with children, instead of the full collection API.

Subclasses need to provide the implementation for methods adding and removing children."" 
!!API

The following subclasses can be used to store children: 
- ${class:BlChildrenArray}$: stores children using an ${class:Array}$ 
- ${class:BlChildrenLinkedList}$: stores children using a ${class:LinkedList}$ 
- ${class:BlChildrenOrderedCollection}$: stores children using a ${class:OrderedCollection}$
- ${class:BlChildrenRope}$: stores children using a ${class:BlCollectionRope}$","${class:BlElement}$
${class:BlChildrenArray}$
${class:Array}$ 
${class:BlChildrenLinkedList}$
${class:LinkedList}$
${class:BlChildrenOrderedCollection}$
${class:OrderedCollection}$
${class:BlChildrenRope}$
${class:BlCollectionRope}$",,,,,,,,,,,,,,
PMKolmogorovSmirnov1Sample,"does a two-sided Kolmogorov-Smirnow test and checks whether sample data are from a population with a given distribution. you have to set the data that can be any collection of numbers and the cumulative distribution function. you can do the last one in two ways, either by specifying a block via #cdf: or by specifying a distribution with concrete parameters via #populationDistribution: .
#ksStatistic returns kolmogorovs D, calculated as the maximum of D+ and D- , iow it does not (!) use D = max( | F(y(i)) - i/n| ) . (see eg http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm why this would be wrong.)
#pValue returns the probability of getting a D <= ksStatistic .
#rejectEqualityHypothesisWithAlpha: does what its name says of course.
example:
nd:= DhbNormalDistribution new.""--> Normal distribution( 0, 1)""
ks :=KolmogorovSmirnov compareData: ((1 to:100) collect:[:i|nd random]) withDistribution: nd.""--> 
a KolmogorovSmirnov(dataSize: 100 cdf: distributionValue of Normal distribution( 0, 1))""
ks rejectEqualityHypothesisWithAlpha: 0.05.""--> false""",,does a two-sided Kolmogorov-Smirnow test and checks whether sample data are from a population with a given distribution,,"#ksStatistic returns kolmogorovs D, calculated as the maximum of D+ and D- , iow it does not (!) use D = max( | F(y(i)) - i/n| ) . (see eg http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm why this would be wrong.)
#pValue returns the probability of getting a D <= ksStatistic .
#rejectEqualityHypothesisWithAlpha: does what its name says of course.",,,(see eg http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm why this would be wrong.),,,"you can do the last one in two ways, either by specifying a block via #cdf: or by specifying a distribution with concrete parameters via #populationDistribution: .
example:
nd:= DhbNormalDistribution new.""--> Normal distribution( 0, 1)""
ks :=KolmogorovSmirnov compareData: ((1 to:100) collect:[:i|nd random]) withDistribution: nd.""--> 
a KolmogorovSmirnov(dataSize: 100 cdf: distributionValue of Normal distribution( 0, 1))""
ks rejectEqualityHypothesisWithAlpha: 0.05.""--> false""",,,,you have to set the data that can be any collection of numbers and the cumulative distribution function.,why this would be wrong.),http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm,,,,you have to set the data that can be any collection of numbers and the cumulative distribution function.,,,
PRUnorderedList,I am an unordered list. I am typically used for unnumbered lists,I am an unordered list,,I am typically used for unnumbered lists,,,,,,,,,,,,,,,,,,,,
RTTextWord,"A RTTextWord represents one word of an original text.

Instance Variables
 interval: <Interval>
 text: <String | Text>

interval
 - interval of the word in the original text

text
 - word, a part of the orignal text",A RTTextWord represents one word of an original text.,,,"interval
 - interval of the word in the original text

text
 - word, a part of the orignal text",,"Instance Variables
 interval: <Interval>
 text: <String | Text>",,,,,,,,,,,,,,,,,
RTAbout,I am a class that display general information about Roassal,,I am a class that display general information about Roassal,,,,,,,,,,,,,,,,,,,,,
GtProtoTasker,"I am an abstract tasker defining mandatory methods for all taskers. 
Tasker is responsible for collectin ${class:GtTaskerTask}$ tasks and executing them when requested. 

Mandatory methods are: 
- ${method:GtProtoTasker>>#addTask:|expanded=true}$
- ${method:GtProtoTasker>>#flush|expanded=true}$

Interesting taskers to explore are ${class:GtTaskerOrderedNonRepetitive}$ and ${class:GtPostponingTasker}$.",I am an abstract tasker defining mandatory methods for all taskers.,Tasker is responsible for collectin ${class:GtTaskerTask}$ tasks and executing them when requested.,,"Mandatory methods are: 
- ${method:GtProtoTasker>>#addTask:|expanded=true}$
- ${method:GtProtoTasker>>#flush|expanded=true}$",,,,Interesting taskers to explore are ${class:GtTaskerOrderedNonRepetitive}$ and ${class:GtPostponingTasker}$.,"${class:GtTaskerTask}$
 ${class:GtTaskerOrderedNonRepetitive}$
 ${class:GtPostponingTasker}$",,,,,,,,,,,,,,
GtRlNode,I am an abstraction for a type of dependency in the loading configuration of a system.,I am an abstraction for a type of dependency in the loading configuration of a system.,I am an abstraction for a type of dependency in the loading configuration of a system.,,,,,,,,,,,,,,,,,,,,,
WAComboResponse,"WAComboResponse is a combination of a buffered and a streaming response. By default, WAComboResponse will buffer the entire response to be sent at the end of the request processing cycle. If streaming is desired, the response can be flushed by sending it the #flush message. Flushing a response will sent all previously buffered data using chunked transfer-encoding (which preserves persistent connections). Clients can flush the response as often as they want at appropriate points in their response generation; everything buffered up to that point will be sent. For example, a search results page might use something like:

renderContentOn: aCanvas
 ""Render the search page""

 self renderSearchLabelOn: aCanvas.
 aCanvas flush. ""flush before starting search to give immediate feedback""

 self searchResultsDo:[:aResult|
 self renderSearchResultOn: aCanvas.
 aCanvas flush. ""flush after each search result""
 ].

After a response has been flushed once, header modifications are no longer possible and will raise a WAIllegalStateException.

Server adaptors need to be aware that a committed response must be closed, when complete. An uncommitted response should be handled as usual by the server adapter.","""WAComboResponse is a combination of a buffered and a streaming response.","By default, WAComboResponse will buffer the entire response to be sent at the end of the request processing cycle. If streaming is desired, the response can be flushed by sending it the #flush message.","Flushing a response will sent all previously buffered data using chunked transfer-encoding (which preserves persistent connections). Clients can flush the response as often as they want at appropriate points in their response generation; everything buffered up to that point will be sent. 

After a response has been flushed once, header modifications are no longer possible and will raise a WAIllegalStateException.

Server adaptors need to be aware that a committed response must be closed, when complete. An uncommitted response should be handled as usual by the server adapter.""",,,,,,,"For example, a search results page might use something like:

renderContentOn: aCanvas
 """"Render the search page""""

 self renderSearchLabelOn: aCanvas.
 aCanvas flush. """"flush before starting search to give immediate feedback""""

 self searchResultsDo:[:aResult|
 self renderSearchResultOn: aCanvas.
 aCanvas flush. """"flush after each search result""""
 ].",,,,,,,,,,,,,
RTAbstractStackedDataSet,A data set is a set of points intended to be charted. A data set has to be added to a RTGrapher. Look at the class comment of my subclasses for detail.,A data set is a set of points intended to be charted,,A data set has to be added to a RTGrapher.,,,,Look at the class comment of my subclasses for detail.,,,,,,,,,,,,,A data set has to be added to a RTGrapher.,,,
RTAttachPoint,I am the superclass of the class hierarchy describing attach points. An attach point indicates where lines start and end.,I am the superclass of the class hierarchy describing attach points.,An attach point indicates where lines start and end.,,,,,,,,,,,,,,,,,,,,,
WAPath,"WAPath represents a path navigation (breadcrumbs) for a web page and displays standard breadcrumbs(xxx >> yyy >> zzz). WAPath maintains a stack of associations, one for each ""location"" or ""page"" in the path. The association key is the text that is displayed in the breadcrimb. The association value is an object of your choosing, which your code uses to restore that ""page"". 

To add to the path use the method WAPath>>pushSegment: anObject name: 'lulu'. The name: arguement is the association key, the segment: argument is the association value.

The method WAPath>>currentSegment returns object associated with the current ""page"". Your code is not notified when the user clicks on a link in the WAPath object. So when you render a page call WAPath>>currentSegment to get the current object, and generate the page accordingly.

See WAInspector for example use.

Use WATrail to handle breadcrumbs for sequences of call: and answers:.

Instance Variables:
 stack <Array of associations(String->Object) > History of the page. Keys -> display string, values -> object used in helping generating page.",WAPath represents a path navigation (breadcrumbs) for a web page,"and displays standard breadcrumbs(xxx >> yyy >> zzz). WAPath maintains a stack of associations,","one for each ""location"" or ""page"" in the path. The association key is the text that is displayed in the breadcrimb. The association value is an object of your choosing, which your code uses to restore that ""page"".","To add to the path use the method WAPath>>pushSegment: anObject name: 'lulu'. The name: arguement is the association key, the segment: argument is the association value.

The method WAPath>>currentSegment returns object associated with the current ""page"". Your code is not notified when the user clicks on a link in the WAPath object. So when you render a page call WAPath>>currentSegment to get the current object, and generate the page accordingly.",,"Instance Variables:
 stack <Array of associations(String->Object) > History of the page. Keys -> display string, values -> object used in helping generating page.","See WAInspector for example use.
Use WATrail to handle breadcrumbs for sequences of call: and answers:.",,"WAInspector
WATrail",,,,,,,,,,,,,,
FmxMBPrintVisitor,"I'm a visitor for instances of #FamixMetamodelGenerator and subclasses.

I just visit each node in the builder, and print it on the Transcript.

see FmxMBVisitor to see how to use me.","""I'm a visitor for instances of #FamixMetamodelGenerator and subclasses.","I just visit each node in the builder, and print it on the Transcript.",,,,,"see FmxMBVisitor to see how to use me.
""",,FmxMBVisitor,,,,,,,,,,,,,,
RTSVGVisitor2Test,I am a simple test class for RTSVGVisitor2,I am a simple test class for RTSVGVisitor2,,,,,,,,RTSVGVisitor2,,,,,,,,,,,,,,
BlLocalImageCacheTest,This class contains tests,,This class contains tests,,,,,,,,,,,,,,,,,,,,,
PMQuantileTest,"QuantileTest tests mainly '#quantile: method:' by calculating quartiles with every method on SortedCollections of size 4, 5, 6 and 11.",,,,,"QuantileTest tests mainly '#quantile: method:' by calculating quartiles with every method on SortedCollections of size 4, 5, 6 and 11.",,,,,,,,,,,,,,,,,,
GtDiagrammerDummyTool,I am a dummy tool that does nothing,I am a dummy tool,that does nothing,,,,,,,,,,,,,,,,,,,,,
BlInfiniteDataSourceCommandType,"I am a type of data source update command.
I suppose to be stateless and therefore immutable.
For performance and memory reasons I provide a unique instance of me to be shared among my users",I am a type of data source update command.,,,,"I suppose to be stateless and therefore immutable.
For performance and memory reasons I provide a unique instance of me to be shared among my users",,,,,,,,,,,,,,,,,,
PPPluggableParser,"A pluggable parser that passes the parser stream into a block. This enables users to perform manual parsing or to embed other parser frameworks into PetitParser.

Instance Variables:
 block <BlockClosure> The pluggable one-argument block.",A pluggable parser,that passes the parser stream into a block. This enables users to perform manual parsing or to embed other parser frameworks into PetitParser.,This enables users to perform manual parsing or to embed other parser frameworks into PetitParser.,,,"Instance Variables:
 block <BlockClosure> The pluggable one-argument block.",,,PetitParser.,,,,,,,,,,,,,,
BrGlamorousIcons,"I am a Glamorous icons container. You can import new icons using ${method:name=BrGlamorousIcons class>>#importIconsFromDirectory:}$ using the script below. It imports all ==PNG== files and creates class methods with the same name.

[[[
BrGlamorousIcons importIconsFromDirectory: './gt-icons' asFileReference
]]]

Here is a list of available icons:

${class:BrGlamorousIcons|show=gtIconsFor:|expanded=}$","""I am a Glamorous icons container.",You can import new icons using ${method:name=BrGlamorousIcons class>>#importIconsFromDirectory:}$ using the script below. It imports all ==PNG== files and creates class methods with the same name.,,"Here is a list of available icons:

${class:BrGlamorousIcons|show=gtIconsFor:|expanded=}$",You can import new icons using ${method:name=BrGlamorousIcons class>>#importIconsFromDirectory:}$ using the script below.,,,,,It imports all ==PNG== files and creates class methods with the same name. [[[ BrGlamorousIcons importIconsFromDirectory: './gt-icons' asFileReference ]]],,PNG,,,,,,,,,,,
RTPopupTest,"A ROAbstractPopupTest is xxxxxxxxx.

Instance Variables
 popup: <Object>
 view: <Object>

popup
 - xxxxx

view
 - xxxxx",A ROAbstractPopupTest is xxxxxxxxx.,,,"popup
 - xxxxx

view
 - xxxxx",,"Instance Variables
 popup: <Object>
 view: <Object>",,,,,,,,,,,,,,,,,
BlMatrixTransformation,I am an affine transformation that is directly defined by transformation matrix,I am an affine transformation that is directly defined by transformation matrix,,,,,,,,,,,,,,,,,,,,,,
RTBezier3Line,"Describe a cubic Bezier spline

Here is an example:

-=-=-=-=-=
v := RTView new.

s := RTEllipse new color: (Color red alpha: 0.4); size: 30.
e1 := s elementOn: 'Begin'.
e2 := s elementOn: 'End'.
e3 := s elementOn: 'Middle'.


lineShape := RTBezier3Line new.
lineShape controlElement: e3.

lineShape attachPoint: (RTShorterDistanceAttachPoint instance).
edge := lineShape edgeFrom: e1 to: e2.

v add: e1; add: e2; add: e3; add: edge.

e1 @ RTDraggable.
e2 @ RTDraggable.
e3 @ RTDraggable.

e2 translateBy: 80 @ 50.
e3 translateBy: 40 @ 25.

v 
-=-=-=-=-=",,Describe a cubic Bezier spline,,,,,,,,"Here is an example:

-=-=-=-=-=
v := RTView new.

s := RTEllipse new color: (Color red alpha: 0.4); size: 30.
e1 := s elementOn: 'Begin'.
e2 := s elementOn: 'End'.
e3 := s elementOn: 'Middle'.


lineShape := RTBezier3Line new.
lineShape controlElement: e3.

lineShape attachPoint: (RTShorterDistanceAttachPoint instance).
edge := lineShape edgeFrom: e1 to: e2.

v add: e1; add: e2; add: e3; add: edge.

e1 @ RTDraggable.
e2 @ RTDraggable.
e3 @ RTDraggable.

e2 translateBy: 80 @ 50.
e3 translateBy: 40 @ 25.

v 
-=-=-=-=-=",,,,,,,,,,,,,
BlInfiniteSmoothScrollerAction,I hold information about a smooth scroll request by a SmoothScroller.,,I hold information about a smooth scroll request by a SmoothScroller.,I hold information about a smooth scroll request by a SmoothScroller.,,,,,,SmoothScroller,,,,,,,,,,,,,,
BlRectangleShapeWithArrowExplanation,"! Rectangle geometry with arrow pointer

The goal of this tutorial is to create an element with an arrow-like pointer in the middle of the top edge, as shown below:
${example:BlRectangleShapeWithArrowExplanation>>#elementWithTopArrowGeometry|noCode|previewShow=gtLiveFor:|previewHeight=250}$

A traditional way to implement such geometry is to create a subclass of ${class:BlGeometry}$, override ${method:BlGeometry>>#buildPathOnSpartaCanvas:}$ and implement quite cumbersome algorithm that computes the location of each point and then connects those points using ==moveTo:== and ==lineTo:== commands provided by ==PathBuilder==. The problem with such solution is its exponential increase in compolexity each time we would like to parametrize and customize the resulting geometry, for example the size of the arrow or its horizontal position. Even more compex would be to implement the support for positioning the arrow on different edges (e.g. left, bottom) or an ability to have multiple arrows on separate edges.

This is where a ${class:BlVectorShape}$ comes-in handy.

!! Creating a rectangle shape

We will start with creation of the rectangle shape ${class:BlRectangleShape}$:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleShape|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Translating the top edge

In order to give the arrow pointing up enough space we should move the top edge of the rectangle down by the length of the arrow. First of all we should ask the rectangle shape to give us its top edge ${method:BlRectangleShape>>#topEdge}$. By default the ==topEdge== of the rectangle is an instance of ${class:BlLineShape}$ which can be translated by sending ${method:BlLineShape>>#moveBy:}$ to the ==topEdge==:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTranslatedTopEdge|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Injecting a line inside of the top edge

Next step on our way to the arrow is to inject a line segment equal to the length of the arrow in the middle of the ==topEdge==. It can be done by sending ${method:BlLineShape>>#injectLineAt:length:}$ to the ==topEdge==. Since we want to inject a line right in the middle of the edge we pass ==0.5== as a line location:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTopInjectedLine|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Splitting the injected line

We are almost ready to create a rectangular arrow. We just need to split an injected line in half in order to create the top corner of the rectangle. We can do so by sending a ${method:BlLineShape>>#splitAt:}$ to the now middle section of the ==topEdge== which was created by the previous line injection step:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTopPolylineSplitInHalf|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Moving the top of the triangle

Once we have everything we need for the arrow triangle we can move it's top up by the length of the arrow. To do so we should send ${method:BlPointShape>>#moveBy:}$ to the connection point of the splitted line in the middle of the ==topEdge==. After doing so we receive the expected vector shape we we can later use together with ${class:BlShapeGeometry}$:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTopArrow|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$",,,,,,,,,"${class:BlGeometry}$
 ==PathBuilder==
${class:BlVectorShape}$
${class:BlRectangleShape}$
${class:BlLineShape}$
${class:BlShapeGeometry}$","The goal of this tutorial is to create an element with an arrow-like pointer in the middle of the top edge, as shown below:
${example:BlRectangleShapeWithArrowExplanation>>#elementWithTopArrowGeometry|noCode|previewShow=gtLiveFor:|previewHeight=250}$

A traditional way to implement such geometry is to create a subclass of ${class:BlGeometry}$, override ${method:BlGeometry>>#buildPathOnSpartaCanvas:}$ and implement quite cumbersome algorithm that computes the location of each point and then connects those points using ==moveTo:== and ==lineTo:== commands provided by ==PathBuilder==. The problem with such solution is its exponential increase in compolexity each time we would like to parametrize and customize the resulting geometry, for example the size of the arrow or its horizontal position. Even more compex would be to implement the support for positioning the arrow on different edges (e.g. left, bottom) or an ability to have multiple arrows on separate edges.

This is where a ${class:BlVectorShape}$ comes-in handy.

!! Creating a rectangle shape

We will start with creation of the rectangle shape ${class:BlRectangleShape}$:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleShape|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Translating the top edge

In order to give the arrow pointing up enough space we should move the top edge of the rectangle down by the length of the arrow. First of all we should ask the rectangle shape to give us its top edge ${method:BlRectangleShape>>#topEdge}$. By default the ==topEdge== of the rectangle is an instance of ${class:BlLineShape}$ which can be translated by sending ${method:BlLineShape>>#moveBy:}$ to the ==topEdge==:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTranslatedTopEdge|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Injecting a line inside of the top edge

Next step on our way to the arrow is to inject a line segment equal to the length of the arrow in the middle of the ==topEdge==. It can be done by sending ${method:BlLineShape>>#injectLineAt:length:}$ to the ==topEdge==. Since we want to inject a line right in the middle of the edge we pass ==0.5== as a line location:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTopInjectedLine|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Splitting the injected line

We are almost ready to create a rectangular arrow. We just need to split an injected line in half in order to create the top corner of the rectangle. We can do so by sending a ${method:BlLineShape>>#splitAt:}$ to the now middle section of the ==topEdge== which was created by the previous line injection step:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTopPolylineSplitInHalf|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Moving the top of the triangle

Once we have everything we need for the arrow triangle we can move it's top up by the length of the arrow. To do so we should send ${method:BlPointShape>>#moveBy:}$ to the connection point of the splitted line in the middle of the ==topEdge==. After doing so we receive the expected vector shape we we can later use together with ${class:BlShapeGeometry}$:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTopArrow|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

A traditional way to implement such geometry is to create a subclass of ${class:BlGeometry}$, override ${method:BlGeometry>>#buildPathOnSpartaCanvas:}$ and implement quite cumbersome algorithm that computes the location of each point and then connects those points using ==moveTo:== and ==lineTo:== commands provided by ==PathBuilder==. The problem with such solution is its exponential increase in compolexity each time we would like to parametrize and customize the resulting geometry, for example the size of the arrow or its horizontal position. Even more compex would be to implement the support for positioning the arrow on different edges (e.g. left, bottom) or an ability to have multiple arrows on separate edges.

This is where a ${class:BlVectorShape}$ comes-in handy.

!! Creating a rectangle shape

We will start with creation of the rectangle shape ${class:BlRectangleShape}$:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleShape|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Translating the top edge

In order to give the arrow pointing up enough space we should move the top edge of the rectangle down by the length of the arrow. First of all we should ask the rectangle shape to give us its top edge ${method:BlRectangleShape>>#topEdge}$. By default the ==topEdge== of the rectangle is an instance of ${class:BlLineShape}$ which can be translated by sending ${method:BlLineShape>>#moveBy:}$ to the ==topEdge==:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTranslatedTopEdge|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Injecting a line inside of the top edge

Next step on our way to the arrow is to inject a line segment equal to the length of the arrow in the middle of the ==topEdge==. It can be done by sending ${method:BlLineShape>>#injectLineAt:length:}$ to the ==topEdge==. Since we want to inject a line right in the middle of the edge we pass ==0.5== as a line location:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTopInjectedLine|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Splitting the injected line

We are almost ready to create a rectangular arrow. We just need to split an injected line in half in order to create the top corner of the rectangle. We can do so by sending a ${method:BlLineShape>>#splitAt:}$ to the now middle section of the ==topEdge== which was created by the previous line injection step:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTopPolylineSplitInHalf|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$

!! Moving the top of the triangle

Once we have everything we need for the arrow triangle we can move it's top up by the length of the arrow. To do so we should send ${method:BlPointShape>>#moveBy:}$ to the connection point of the splitted line in the middle of the ==topEdge==. After doing so we receive the expected vector shape we we can later use together with ${class:BlShapeGeometry}$:
${example:BlRectangleShapeWithArrowExplanation>>#rectangleWithTopArrow|previewShow=#gtLiveFor:|previewExpanded=true|previewHeight=250}$",,,,,,,,,,,,,
MorphicRoassalAdapter,I am bridging RoassalModel and RTView,,I am bridging RoassalModel and RTView,I am bridging RoassalModel and RTView,,,,,,"RoassalModel
RTView",,,,,,,,,,,,,,
BlHeadlessHost,I am a fallback host that is chosen if there are no other available and supported hosts.,I am a fallback host that is chosen if there are no other available and supported hosts.,I am a fallback host that is chosen if there are no other available and supported hosts.,,,,,,,,,,,,,,,,,,I am a fallback host that is chosen if there are no other available and supported hosts.,,,
GtDiagrammerStarStencil,I create a star element,,I create a star element,,,,,,,,,,,,,,,,,,,,,
BrTextEditorLineSplitter,I split a piece of text into line segments ${class:BrTextEditorLineSegment}$,,I split a piece of text into line segments ${class:BrTextEditorLineSegment}$,,,,,,,${class:BrTextEditorLineSegment}$,,,,,,,,,,,,,,
PRPillarParserMain,"I'm responsible for starting the parsing process of a Pillar document. If possible, I will use a compiled version of PRPillarParser. I will also use the STON reader to read potentital metadata at the begining of the stream.",,I'm responsible for starting the parsing process of a Pillar document,"If possible, I will use a compiled version of PRPillarParser. I will also use the STON reader to read potentital metadata at the begining of the stream.",,,,,,"PRPillarParser
STON",,,,,,,,,,,,,,
PackageBlueprintTestResource,I am a test resource building a FamixStModel with the package blueprint test resource entities.,I am a test resource building a FamixStModel with the package blueprint test resource entities.,I am a test resource building a FamixStModel with the package blueprint test resource entities.,I am a test resource building a FamixStModel with the package blueprint test resource entities.,,,,,,FamixStModel,,,,,,,,,,,,,,
RTEllipseTest,A RTEllipseTest is a test class for testing the behavior of RTEllipse,A RTEllipseTest is a test class,for testing the behavior of RTEllipse,,,,,,,,,,,,,,,,,,,,,
RTHorizontalData,RTData renders bars and dots in vertical way,,RTData renders bars and dots in vertical way,,,,,,,,,,,,,,,,,,,,,
BrEditorTextFlowLine,"I represent a single line of a flow layout.

I store reference to the next line in order to avoid unnecessary array of lines creation for a very common case of just one line",I represent a single line of a flow layout.,I store reference to the next line in order to avoid unnecessary array of lines creation for a very common case of just one line,,,,,,,,,,,,,,,,,,,,,
RTRotatedLabel,"A RTRotatedLabel describes rotated labels.

| v shape es |
v := RTView new.
shape := RTRotatedLabel new text: [ :c | 'Class ', c name ]; angleInDegree: [ :c | c numberOfMethods \\ 360 ].
es := shape elementsOn: Collection withAllSubclasses.
RTGridLayout on: es.
v addAll: es.
v open",,A RTRotatedLabel describes rotated labels.,,,,,,,,"| v shape es |
v := RTView new.
shape := RTRotatedLabel new text: [ :c | 'Class ', c name ]; angleInDegree: [ :c | c numberOfMethods \\ 360 ].
es := shape elementsOn: Collection withAllSubclasses.
RTGridLayout on: es.
v addAll: es.
v open",,,,,,,,,,,,,
RTSVGPopup,"A RTSVGPopup is any kind of popup born from a certain element.

The click refers to the posibility of activating the popup only when the element is clicked. This is disabled by default.",A RTSVGPopup is any kind of popup born from a certain element.,The click refers to the posibility of activating the popup only when the element is clicked. This is disabled by default.,,,,,,,,,,,,This is disabled by default.,,,,,,The click refers to the posibility of activating the popup only when the element is clicked.,,,
PMStepper,"Basic steppers execute one timestep of a specific order with a given stepsize.

From odeint-v2 documentation:

Solving ordinary differential equation numerically is usually done iteratively, that is a given state of an ordinary differential equation is iterated forward x(t) -> x(t+dt) -> x(t+2dt). Steppers perform one single step. The most general stepper type is described by the Stepper concept.

Before calling doStep, it is important to associate the stepper with a system. The class method onSystem will assign the system to the Stepper.",Basic steppers,Basic steppers execute one timestep of a specific order with a given stepsize.,The most general stepper type is described by the Stepper concept.,. The class method onSystem will assign the system to the Stepper.,"Solving ordinary differential equation numerically is usually done iteratively, that is a given state of an ordinary differential equation is iterated forward x(t) -> x(t+dt) -> x(t+2dt). Steppers perform one single step.",,"From odeint-v2 documentation:

Solving ordinary differential equation numerically is usually done iteratively, that is a given state of an ordinary differential equation is iterated forward x(t) -> x(t+dt) -> x(t+2dt). Steppers perform one single step. The most general stepper type is described by the Stepper concept.",,,,,,,,,,,,,"Before calling doStep, it is important to associate the stepper with a system.",,,
BlMatrixDecomposition,"I represent a matrix decomposition in components.

For example in case of 2D matrix they are:
 - translation
 - scale
 - rotation angle
 - top left 2x2 minor of original matrix
 
3D (4x4) matrices are decomposed as follows:
 - translation
 - scale
 - skew
 - perspective
 - quaternion","""I represent a matrix decomposition in components.",,,,"For example in case of 2D matrix they are:
 - translation
 - scale
 - rotation angle
 - top left 2x2 minor of original matrix
 
3D (4x4) matrices are decomposed as follows:
 - translation
 - scale
 - skew
 - perspective
 - quaternion""",,,,,,,,,,,,,,,,,,
BlDevScripterClickStep,"I fire a ${class:BlMouseDownEvent}$, ${class:BlMouseUpEvent}$, and ${class:BlClickEvent}$.

!! Example

Here you can see how to configure a fire and check a click event on a child element:
${example:BlDevScripterExamples>>#clickCheck|previewExpanded=true|previewHeight=400}$",,"I fire a ${class:BlMouseDownEvent}$, ${class:BlMouseUpEvent}$, and ${class:BlClickEvent}$.",,,,,,,"${class:BlMouseDownEvent}$
${class:BlMouseUpEvent}$
 ${class:BlClickEvent}$","!! Example

Here you can see how to configure a fire and check a click event on a child element:
${example:BlDevScripterExamples>>#clickCheck|previewExpanded=true|previewHeight=400}$",,,,,,,,,,,,,
FamixTTrait,FAMIXTrait models a trait as it can be found in Pharo or PHP.,,FAMIXTrait models a trait as it can be found in Pharo or PHP.,FAMIXTrait models a trait as it can be found in Pharo or PHP.,,,,,,,,,,,,,,,,,,,,
TSpFontDescriptor,"I am a helper trait that defines basic font properties such as weight, style and stretch",I am a helper trait,"that defines basic font properties such as weight, style and stretch",,,,,,,,,,,,,,,,,,,,,
RTTabTable,RTTabTable is made to work with CSV file contents.,,RTTabTable is made to work with CSV file contents.,,,,,,,,,,,,,,,,,,,,,
WAInspector,"This is an abstract implementation of a web-based object inspector. Platforms should implement their own subclasses, specifying behaviour for all unimplemented methods.

Note that #openNativeInspectorOn: on the class-side also needs to be implemented.

Also subclasses probably want to implement #initialize and #unload on the class-side to call 'self select' and 'self unselect' respectively. This will ensure they are registered as the current implementation when they are loaded.","""This is an abstract implementation of a web-based object inspector.","Platforms should implement their own subclasses, specifying behaviour for all unimplemented methods.",,,,,,"Also subclasses probably want to implement #initialize and #unload on the class-side to call 'self select' and 'self unselect' respectively. This will ensure they are registered as the current implementation when they are loaded.""",,,,,,Note that #openNativeInspectorOn: on the class-side also needs to be implemented.,,,,,,,,,
GtRlCommitAndTagReleaseAction,"I execute a commit of the current changes staged for commit and push a tag corresponding to the version number of the repository release.

I only work with strategies of type ${class:GtRlSemanticTagReleaseStrategy}$. 
See ${method:GtRlSemanticTagReleaseStrategy>>#commitAndTagRelease} for more implementation details.",,I execute a commit of the current changes staged for commit and push a tag corresponding to the version number of the repository release.,I only work with strategies of type ${class:GtRlSemanticTagReleaseStrategy}$.,,"I only work with strategies of type ${class:GtRlSemanticTagReleaseStrategy}$. 
See ${method:GtRlSemanticTagReleaseStrategy>>#commitAndTagRelease} for more implementation details.",,See ${method:GtRlSemanticTagReleaseStrategy>>#commitAndTagRelease} for more implementation details.,,,,,,,,,,,,,,,,
PRHTMLCanvas,"An HTML canvas that facilitates writing HTML to a stream. The main method is #tag that allow you to write something like this:

canvas tag
 name: 'a';
 parameterAt: 'href' put: href;
 with: [ ""some code that generates the HTML inside the link"" ]",An HTML canvas that facilitates writing HTML to a stream.,An HTML canvas that facilitates writing HTML to a stream. The main method is #tag that allow you to write something like this:,,The main method is #tag that allow you to write something like this:,,"canvas tag
 name: 'a';
 parameterAt: 'href' put: href;
 with: [ ""some code that generates the HTML inside the link"" ]",,,,,,,,,,,,,,,,,
RTAbstractTreeBuilder,"I am a base class for some builders of roassal like:

RTTreeMapBuilder
RTCircularTreeMapBuilder
RTBundleBuilder
RTSunburstBuilder",I am a base class for some builders of roassal like:,,"I am a base class for some builders of roassal like:

RTTreeMapBuilder
RTCircularTreeMapBuilder
RTBundleBuilder
RTSunburstBuilder",,,,,,"RTTreeMapBuilder
RTCircularTreeMapBuilder
RTBundleBuilder
RTSunburstBuilder",,,,,,,,,,,,,,
BlConcatenationRopeIterator,I am a special iterator used to iterate over concatenation rope,I am a special iterator used to iterate over concatenation rope,I am a special iterator used to iterate over concatenation rope,I am a special iterator used to iterate over concatenation rope,,,,,,,,,,,,,,,,,,,,
SpartaLine,"I represent a line.

I am meant to be polymorphic with Rectangle and Path and can be used as path in various operations, except clipping.

Public API and Key Messages

- from get my start point
- to get my end point

 SpartaLine from: 10@10 to: 20@20
 
Internal Representation and Key Implementation Points.

 Instance Variables
 from: <Point>
 to: <Point>


 Implementation Points",I represent a line.,"I am meant to be polymorphic with Rectangle and Path and can be used as path in various operations, except clipping.",,"Public API and Key Messages

- from get my start point
- to get my end point

 SpartaLine from: 10@10 to: 20@20",,"Instance Variables
 from: <Point>
 to: <Point>",,,,,,,,,,,,,,,,,
RTCPQualitative,"Qualitative schemes do not imply magnitude differences between legend classes, and hues are used to create the primary visual differences between classes. Qualitative schemes are best suited to representing nominal or categorical data.

Check it out by executing:
ColorPalette qualitative show

More info: 
http://colorbrewer2.org/learnmore/schemes_full.html#qualitative

---Copyright:
All colors, palettes and schemes are from www.ColorBrewer.org by Cynthia A. Brewer, Geography, Pennsylvania State University.

FalutUI1 color scheme come from: http://flatuicolors.com/",,"Qualitative schemes do not imply magnitude differences between legend classes, and hues are used to create the primary visual differences between classes. Qualitative schemes are best suited to representing nominal or categorical data.",,,,,"More info: 
http://colorbrewer2.org/learnmore/schemes_full.html#qualitative.
FalutUI1 color scheme come from: http://flatuicolors.com/",,,"Check it out by executing:
ColorPalette qualitative show",,,FalutUI1 color scheme come from: http://flatuicolors.com/,,,"http://colorbrewer2.org/learnmore/schemes_full.html#qualitative
FalutUI1 color scheme come from: http://flatuicolors.com/",,Qualitative schemes are best suited to representing nominal or categorical data.,Qualitative schemes are best suited to representing nominal or categorical data.,,,"---Copyright:
All colors, palettes and schemes are from www.ColorBrewer.org by Cynthia A. Brewer, Geography, Pennsylvania State University.",
BlArrowheadTriangle,"I am a triangular arrow head.
My size depends on the width of a curve and hence can not be manually specified.

It is possible to have a border around triangle by specifying a border width of a triangle arrowhead.

I support background and border paints.
 - For hollow arrowhead let background be transparent.
 - For solid arrowhead make background paint be the same as border paint.
 (it is possible to specify different paints for border and background)",I am a triangular arrow head.,"My size depends on the width of a curve and hence can not be manually specified.
 I support background and border paints.
 - For hollow arrowhead let background be transparent.
 - For solid arrowhead make background paint be the same as border paint.
 (it is possible to specify different paints for border and background)",,,It is possible to have a border around triangle by specifying a border width of a triangle arrowhead.,,,,,,,,,,,,,,,,,,
PRHeadingLevelOffsetTransformer,"Convert from the level of a Pillar heading to the level of heading in the exported document. For example, a ==headingLevelOffset== of 3 converts a 1st level Pillar heading to an ==<h4>== in HTML.",,Convert from the level of a Pillar heading to the level of heading in the exported document,,,,,,,,"For example, a ==headingLevelOffset== of 3 converts a 1st level Pillar heading to an ==<h4>== in HTML.",,,,,,,,,,,,,
RTBorderAttachPoint,"I am an attach point that will end the line on the border of the end shapes.

Unline ContinuousAttachPoint & co. you don't need to care about what the end shape is, as long as it is one of the basic shapes.

Supported shapes:
 - Box
 -RoundedBox
 - Ellipse/Circle

Todo:
 - Polygon

Supported lines:
 - Line (straight line)

Todo:
 - MultiLine
 - BezierLine",I am an attach point that will end the line on the border of the end shapes.,,,,"Unline ContinuousAttachPoint & co. you don't need to care about what the end shape is, as long as it is one of the basic shapes.",,,,ContinuousAttachPoint,,"Supported shapes:
 - Box
 -RoundedBox
 - Ellipse/Circle

Todo:
 - Polygon

Supported lines:
 - Line (straight line)

Todo:
 - MultiLine
 - BezierLine",,,,,,,,,,,,
GtSnippetElementHolder,"I hold a snippet element within an infinite list element.
I know my unique snippet type (pharo code, url, empty etc)",,"I hold a snippet element within an infinite list element.I know my unique snippet type (pharo code, url, empty etc)",,,,,,,,,,,,,,,,,,,,,
BlVisibilityHidden,"I am a concrete visibility type - ""hidden"".
Once set, element should not be rendered but should participate in layout and take space.","I am a concrete visibility type - ""hidden"".",,,,,,,,,,,,,"Once set, element should not be rendered but should participate in layout and take space.",,,,"Once set, element should not be rendered but should participate in layout and take space.",,,,,
PRAbstractCommand,"I'm an object managing configuration. I'm usually invoked from a command line but not only.

My main entry point is 

 createConfiguration: confFilename baseDirectory: baseDirectory argDictionary: arguments

When you type on the command line
 
 ./pharo-ui Pillar.image pillar export --to=""latex"" Chapters/Chapter1/chapter1.pillar
 
You can obtain the same doing; 

 PRExportBuilder new 
 createConfiguration: 'pillar.conf' 
 baseDirectory: FileSystem workingDirectory 
 argDictionary: {
 'inputFile'-> (FileSystem workingDirectory / 'Chapters/Chapter1/chapter1.pillar') .
 'defaultExporters' -> {'latex'}
 } asDictionary;
 export","""I'm an object managing configuration.",I'm usually invoked from a command line but not only.,,,,,,,,"My main entry point is 

 createConfiguration: confFilename baseDirectory: baseDirectory argDictionary: arguments

When you type on the command line
 
 ./pharo-ui Pillar.image pillar export --to=""""latex"""" Chapters/Chapter1/chapter1.pillar
 
You can obtain the same doing; 

 PRExportBuilder new 
 createConfiguration: 'pillar.conf' 
 baseDirectory: FileSystem workingDirectory 
 argDictionary: {
 'inputFile'-> (FileSystem workingDirectory / 'Chapters/Chapter1/chapter1.pillar') .
 'defaultExporters' -> {'latex'}
 } asDictionary;
 export
 """,,,,,,,,,,,,,
RTResizeCanceled,"I am fired when Resize operation is canceled globally for the whole View.

!! Collaborators

DCRTResizable",,I am fired when Resize operation is canceled globally for the whole View.,"!! Collaborators

DCRTResizable",,,,,,,,,,,,,,,,,I am fired when Resize operation is canceled globally for the whole View.,,,
FamixTPackage,"FAMIXPackage represents a package in the source language, meaning that it provides a means to group entities without any baring on lexical scoping. 

Java extractors map Java packages to FAMIXNamespaces. They can also mirror the same information in terms of FAMIXPackage instances.","FAMIXPackage represents a package in the source language,",meaning that it provides a means to group entities without any baring on lexical scoping.,,,Java extractors map Java packages to FAMIXNamespaces. They can also mirror the same information in terms of FAMIXPackage instances.,,,,"FAMIXNamespaces
FAMIXPackage",,,,,,,,,,,,,,
PRWatcher,"A class to watch served sites.
Each 5 seconds, the website is regenerated",A class to watch served sites.,"A class to watch served sites.
Each 5 seconds, the website is regenerated",,,,,,,,,,,,,,,,,,,,,
RTForceBasedLayout,"A ROForceBasedLayout is inspired from the Code of D3. The original d3 version may be found on: http://bl.ocks.org/mbostock/4062045

Layout algorithm inspired by Tim Dwyer and Thomas Jakobsen.

Instance Variables
 alpha: <Object>
 center: <Object>
 charge: <Object>
 charges: <Object>
 fixedNodes: <Object>
 friction: <Object>
 gravity: <Object>
 layoutInitial: <Object>
 length: <Object>
 lengths: <Object>
 nodes: <Object>
 oldPositions: <Object>
 strength: <Object>
 strengths: <Object>
 theta: <Object>
 weights: <Object>

alpha
 - xxxxx

center
 - xxxxx

charge
 - xxxxx

charges
 - xxxxx

fixedNodes
 - xxxxx

friction
 - xxxxx

gravity
 - xxxxx

layoutInitial
 - xxxxx

length
 - xxxxx

lengths
 - xxxxx

nodes
 - xxxxx

oldPositions
 - xxxxx

strength
 - xxxxx

strengths
 - xxxxx

theta
 - xxxxx

weights
 - xxxxx","""A ROForceBasedLayout is inspired from the Code of D3.",,,,,"Instance Variables
 alpha: <Object>
 center: <Object>
 charge: <Object>
 charges: <Object>
 fixedNodes: <Object>
 friction: <Object>
 gravity: <Object>
 layoutInitial: <Object>
 length: <Object>
 lengths: <Object>
 nodes: <Object>
 oldPositions: <Object>
 strength: <Object>
 strengths: <Object>
 theta: <Object>
 weights: <Object>

alpha
 - xxxxx

center
 - xxxxx

charge
 - xxxxx

charges
 - xxxxx

fixedNodes
 - xxxxx

friction
 - xxxxx

gravity
 - xxxxx

layoutInitial
 - xxxxx

length
 - xxxxx

lengths
 - xxxxx

nodes
 - xxxxx

oldPositions
 - xxxxx

strength
 - xxxxx

strengths
 - xxxxx

theta
 - xxxxx

weights
 - xxxxx""","The original d3 version may be found on: http://bl.ocks.org/mbostock/4062045

Layout algorithm inspired by Tim Dwyer and Thomas Jakobsen.",,,,,,,,,The original d3 version may be found on: http://bl.ocks.org/mbostock/4062045,,,,,,Layout algorithm inspired by Tim Dwyer and Thomas Jakobsen.,
WAIframeTag,"The IFRAME element allows authors to insert a frame within a block of text. Inserting an inline frame within a section of text is much like inserting an object via the OBJECT element: they both allow you to insert an HTML document in the middle of another, they may both be aligned with surrounding text, etc. 

The information to be inserted inline is designated by the src attribute of this element. The contents of the IFRAME element, on the other hand, should only be displayed by user agents that do not support frames or are configured not to display frames.

Inline frames may not be resized.",,The IFRAME element allows authors to insert a frame within a block of text.,,,"The information to be inserted inline is designated by the src attribute of this element. The contents of the IFRAME element, on the other hand, should only be displayed by user agents that do not support frames or are configured not to display frames.",,,,,"Inserting an inline frame within a section of text is much like inserting an object via the OBJECT element: they both allow you to insert an HTML document in the middle of another, they may both be aligned with surrounding text, etc.",,,,Inline frames may not be resized.,,,,,,,,,
BlGridLayout,"I layout elements in a rectangular grid.

All children of an element with GridLayout must use GridConstraints that allows users to configure how children are located within grid independently. 

A grid consists of cells that are separated by invisible lines. Each line is assigned to an index, meaning that a grid with N columns would have N+1 line. Indices lie in closed interval [ 1, N + 1 ]. 

Grid Layout supports fitContent, matchParent and exact resizing mode of the owner. Children are allowed to have fitContent and exact resizing modes. Because child's matchParent does not make sense in case of grid users should use #fill to declare that child should take all available cell's space.

By default grid layout does not specify how many columns and rows exist, instead it tries to compute necessary amount of columns or rows depending on amount of children. User can specify amount of columns or rows by sending columnCount: or rowCount: to an instance of grid layout.

Grid Layout supports spacing between cells which can be set sending cellSpacing: message.

Public API and Key Messages

- columnCount: aNumber to specify amount of columns
- rowCount: aNumber to specify amount of rows
- cellSpacing: aNumber to specify spacing between cells
- alignMargins bounds of each element are extended outwards, according to their margins, before the edges of the resulting rectangle are aligned.
- alignBounds alignment is made between the edges of each component's raw bounds

 BlGridLayout new
 columnCount: 2;
 rowCount: 3;
 cellSpacing: 10;
 alignMargins
 
Internal Representation and Key Implementation Points.

 Instance Variables
 alignmentMode: <BlGridAlignmentMode>
 cellSpacing: <Number>
 horizontalAxis: <BlGridLayoutAxis>
 lastLayoutParamsHashCode: <Number>
 orientation: <BlGridOrientation>
 verticalAxis: <BlGridLayoutAxis>


 Implementation Points",,I layout elements in a rectangular grid.,,"Public API and Key Messages

- columnCount: aNumber to specify amount of columns
- rowCount: aNumber to specify amount of rows
- cellSpacing: aNumber to specify spacing between cells
- alignMargins bounds of each element are extended outwards, according to their margins, before the edges of the resulting rectangle are aligned.
- alignBounds alignment is made between the edges of each component's raw bounds","All children of an element with GridLayout must use GridConstraints that allows users to configure how children are located within grid independently. 

A grid consists of cells that are separated by invisible lines. Each line is assigned to an index, meaning that a grid with N columns would have N+1 line. Indices lie in closed interval [ 1, N + 1 ]. 

Grid Layout supports fitContent, matchParent and exact resizing mode of the owner. Children are allowed to have fitContent and exact resizing modes. Because child's matchParent does not make sense in case of grid users should use #fill to declare that child should take all available cell's space.

By default grid layout does not specify how many columns and rows exist, instead it tries to compute necessary amount of columns or rows depending on amount of children. User can specify amount of columns or rows by sending columnCount: or rowCount: to an instance of grid layout.

Grid Layout supports spacing between cells which can be set sending cellSpacing: message.

Internal Representation and Key Implementation Points.

 Implementation Points","Instance Variables
 alignmentMode: <BlGridAlignmentMode>
 cellSpacing: <Number>
 horizontalAxis: <BlGridLayoutAxis>
 lastLayoutParamsHashCode: <Number>
 orientation: <BlGridOrientation>
 verticalAxis: <BlGridLayoutAxis>",,,GridConstraints,,,,,,,,All children of an element with GridLayout must use GridConstraints that allows users to configure how children are located within grid independently.,,,,,,
RTLinkView,"I allow to export several views

for instance if in your visualization RTView, you have elements that have visualizalitations you can use it to explore it in a web browser

RTLinkView works with RTHTML5Exporter and
RTSVGExporter",,I allow to export several views,"RTLinkView works with RTHTML5Exporter and
RTSVGExporter",,,,,,"RTLinkView works with RTHTML5Exporter and
RTSVGExporter","for instance if in your visualization RTView, you have elements that have visualizalitations you can use it to explore it in a web browser.",,,,,,,,"for instance if in your visualization RTView, you have elements that have visualizalitations you can use it to explore it in a web browser","for instance if in your visualization RTView, you have elements that have visualizalitations you can use it to explore it in a web browser",,,,
BlElementBoundsExamples,I contain examples of element bounds api,,I contain examples of element bounds api,,,,,,,,,,,,,,,,,,,,,
PPDebugParser,"A PPDebugParser is a parser that traces all the progress and returns special object that can be browsed to see how the parsing advanced over a time.

Used by adding enableDebug before parsing.

Instance Variables
 root: result of root parser

root
 - xxxxx",A PPDebugParser is a parser,A PPDebugParser is a parser that traces all the progress and returns special object that can be browsed to see how the parsing advanced over a time.,Used by adding enableDebug before parsing.,"root
 - xxxxx",,"Instance Variables
 root: result of root parser",,,,,,,,,,,,,,,,,
PPSea,"A PPIsland allows for imprecise parsing. One can create it on a parser p by calling: 'p island' E.g.:

p := x, a island, y accepts following inputs:
x.....a.....b 
xab

yet fails on:
x....a....c
xb
xac
x..b....a....b

The input represented by dots is called water and water can appear before and after the island. Use it, if you don't want to define all the grammar rules and you want to skip something.

I am still an experiment, but if you know how to improve me, please contact Jan Kurs at: kurs@iam.unibe.ch

Instance Variables
 afterWaterParser: <Object>
 awp: <Object>
 beforeWaterParser: <Object>
 bwp: <Object>
 context: <Object>
 island: <Object>

afterWaterParser
 - xxxxx

awp
 - xxxxx

beforeWaterParser
 - xxxxx

bwp
 - xxxxx

context
 - xxxxx

island
 - xxxxx",,"""A PPIsland allows for imprecise parsing. One can create it on a parser p by calling: 'p island' E.g.:",,"afterWaterParser
 - xxxxx

awp
 - xxxxx

beforeWaterParser
 - xxxxx

bwp
 - xxxxx

context
 - xxxxx

island
 - xxxxx""",,"Instance Variables
 afterWaterParser: <Object>
 awp: <Object>
 beforeWaterParser: <Object>
 bwp: <Object>
 context: <Object>
 island: <Object>

afterWaterParser
 - xxxxx

awp
 - xxxxx

beforeWaterParser
 - xxxxx

bwp
 - xxxxx

context
 - xxxxx

island
 - xxxxx""",,,,"p := x, a island, y accepts following inputs:
x.....a.....b 
xab

yet fails on:
x....a....c
xb
xac
x..b....a....b

The input represented by dots is called water and water can appear before and after the island. Use it, if you don't want to define all the grammar rules and you want to skip something.

I am still an experiment, but if you know how to improve me, please contact Jan Kurs at: kurs@iam.unibe.ch",,,,,"I am still an experiment, but if you know how to improve me, please contact Jan Kurs at: kurs@iam.unibe.ch",,,,,,,,
PRScreenshotAnnotation,"I am an annotation used to show a screenshot of a given class and method.

I am used in a PRDocument to include a PRPicture and add a PNG file to the /figures chapter subfolder.

My parameters are: 
- package: the targetted package
- class: the targetted class
- method: the targetted method
- caption: the caption that will appear under my figure in the final book
- width: PRFigure width (as would be used in a more classic figure inclusion with +caption .>file|width=50)
- label: PRFigure label (as would be used in a more classic figure inclusion with +caption .>file|label=aa)

I am used as follows in a document:

 ${screenshot:package=Kernel|class=Integer|method=+|caption='The Plus Method'|width=50|label=aa}$
 
Note:
 Contrary to the loader or run annotations, there is a transformation going on here: a PRFigure is created in the end, so there is a need here to use a PRNodeTransformer subclass, PRScreenshotTransformer.",I am an annotation,"used to show a screenshot of a given class and method.

I am used in a PRDocument to include a PRPicture and add a PNG file to the /figures chapter subfolder.",I am used in a PRDocument to include a PRPicture and add a PNG file to the /figures chapter subfolder.,"My parameters are: 
- package: the targetted package
- class: the targetted class
- method: the targetted method
- caption: the caption that will appear under my figure in the final book
- width: PRFigure width (as would be used in a more classic figure inclusion with +caption .>file|width=50)
- label: PRFigure label (as would be used in a more classic figure inclusion with +caption .>file|label=aa)",,,,,"PRDocument, PRPicture","I am used as follows in a document:

 ${screenshot:package=Kernel|class=Integer|method=+|caption='The Plus Method'|width=50|label=aa}$",,,,"Note:
 Contrary to the loader or run annotations, there is a transformation going on here: a PRFigure is created in the end, so there is a need here to use a PRNodeTransformer subclass, PRScreenshotTransformer.",,,,,,,,,
RTFilterInView,"This interaction adds a set of menu in the view to filter in and out some elements
Here is an example:
-=-=-=
| b |
b := RTMondrian new.
b shape box size: #numberOfMethods.
b nodes: (Collection withAllSubclasses).
b layout grid.
b normalizer normalizeColor: #numberOfMethods.
b view @ RTFilterInView.
b 
-=-=-=

With edges:
-=-=-=
| b |
b := RTMondrian new.
b shape box size: #numberOfMethods.
b nodes: (Collection withAllSubclasses).
b normalizer normalizeColor: #numberOfMethods.
b edges connectFrom: #superclass.
b layout tree.

b view @ RTFilterInView.

b 
-=-=-=

Example using the spawn block:
-=-=-=
| b |
b := RTMondrian new.
b shape box size: #numberOfMethods.
b nodes: (Collection withAllSubclasses).
b layout grid.
b normalizer normalizeColor: #numberOfMethods.

filter := RTFilterInView new.
filter spawnBlock: [ :el | RTView new addAll: el copy; yourself ].
b view @ filter.
b 
-=-=-=",,This interaction adds a set of menu in the view to filter in and out some elements,,,,,,,,"Here is an example:
-=-=-=
| b |
b := RTMondrian new.
b shape box size: #numberOfMethods.
b nodes: (Collection withAllSubclasses).
b layout grid.
b normalizer normalizeColor: #numberOfMethods.
b view @ RTFilterInView.
b 
-=-=-=

With edges:
-=-=-=
| b |
b := RTMondrian new.
b shape box size: #numberOfMethods.
b nodes: (Collection withAllSubclasses).
b normalizer normalizeColor: #numberOfMethods.
b edges connectFrom: #superclass.
b layout tree.

b view @ RTFilterInView.

b 
-=-=-=

Example using the spawn block:
-=-=-=
| b |
b := RTMondrian new.
b shape box size: #numberOfMethods.
b nodes: (Collection withAllSubclasses).
b layout grid.
b normalizer normalizeColor: #numberOfMethods.

filter := RTFilterInView new.
filter spawnBlock: [ :el | RTView new addAll: el copy; yourself ].
b view @ filter.
b 
-=-=-=",,,,,,,,,,,,,
RTWeightedCircleLayout,"RTWeightedCircleLayout is a circle layout that gives more space to big elements and fewer space to small elements.

Here is an example:
-=-=-=-=-=-=-=-=-=-=-=-=
v := RTView new.
elements := (RTEllipse new size: 5; color: Color red; size: [:vv | vv * 4 ]) elementsOn: (1 to: 15).
v addAll: elements.
RTWeightedCircleLayout on: elements.
v
-=-=-=-=-=-=-=-=-=-=-=-=",RTWeightedCircleLayout is a circle layout that gives more space to big elements and fewer space to small,RTWeightedCircleLayout is a circle layout that gives more space to big elements and fewer space to small elements.,,,,,,,,"Here is an example:
-=-=-=-=-=-=-=-=-=-=-=-=
v := RTView new.
elements := (RTEllipse new size: 5; color: Color red; size: [:vv | vv * 4 ]) elementsOn: (1 to: 15).
v addAll: elements.
RTWeightedCircleLayout on: elements.
v
-=-=-=-=-=-=-=-=-=-=-=-=",,,,,,,,,,,,,
WARedirectingRegistry,I revert to the old < 3.3.0 behavior which is easier for tests.,,I revert to the old < 3.3.0 behavior which is easier for tests.,,,,,,,,,,,,,,,,,,,,,
WAEncoder,I encode everything that is written to myself using #nextPut: and #nextPutAll: onto the wrapped stream.,,I encode everything that is written to myself using #nextPut: and #nextPutAll: onto the wrapped stream.,,I encode everything that is written to myself using #nextPut: and #nextPutAll: onto the wrapped stream.,,,,,,,,,,,,,,,,,,,
PRBashScriptLanguage,Bash scripting language,Bash scripting language,,,,,,,,,,,,,,,,,,,,,,
PPScriptingTest,"These are some simple demo-scripts of parser combinators for the compiler construction course.
http://www.iam.unibe.ch/~scg/Teaching/CC/index.html",These are some simple demo-scripts of parser combinators,,,,,,"These are some simple demo-scripts of parser combinators for the compiler construction course.
http://www.iam.unibe.ch/~scg/Teaching/CC/index.html",,,,,,,,,http://www.iam.unibe.ch/~scg/Teaching/CC/index.html,,,,,,,
WACopyHandlerPlugin,I make a copy of an application.,,I make a copy of an application.,,,,,,,,,,,,,,,,,,,,,
LANInterface,"LAN Interface comments for testing purposes.

Instance Variables:
 addressee <ValueHolder> description of addressee
 contents <ValueHolder> description of contents
 deviceNameMenu <ValueModel> description of deviceNameMenu
 nextNode <ValueHolder> description of nextNode
 nodeList <SelectionInList> description of nodeList
 nodeName <ValueHolder> description of nodeName
 originator <ValueHolder> description of originator","""LAN Interface comments for testing purposes.","""LAN Interface comments for testing purposes.",,,,"Instance Variables:
 addressee <ValueHolder> description of addressee
 contents <ValueHolder> description of contents
 deviceNameMenu <ValueModel> description of deviceNameMenu
 nextNode <ValueHolder> description of nextNode
 nodeList <SelectionInList> description of nodeList
 nodeName <ValueHolder> description of nodeName
 originator <ValueHolder> description of originator
""",,,,,,,,,,,,,,,,,
MalDendrogramNode,"Copyright (c), 2004-2007 Adrian Kuhn. This class is part of Hapax. Hapax is distributed under BSD License, see package comment.","This class is part of Hapax. Hapax is distributed under BSD License, see package comment.",,"This class is part of Hapax. Hapax is distributed under BSD License, see package comment.",,,,"Hapax is distributed under BSD License, see package comment.",,,,,,,,,,,,,,,"Copyright (c), 2004-2007 Adrian Kuhn. Hapax is distributed under BSD License,",
RTTimelineSetTest,A RTTimeLineSetTest is a test class for testing the behavior of RTTimeLineSet,A RTTimeLineSetTest is a test class for testing the behavior of RTTimeLineSet,A RTTimeLineSetTest is a test class for testing the behavior of RTTimeLineSet,A RTTimeLineSetTest is a test class for testing the behavior of RTTimeLineSet,,,,,,RTTimeLineSet,,,,,,,,,,,,,,
BlChickenLeg,I am a single red chicken leg with two toes,I am a single red chicken leg with two toes,,,,,,,,,,,,,,,,,,,,,,
PMStateTime,"A StateTime class is a generalization of point. It holds both a state and a time.

We don't want to use Point, since state may be a vector quantity, and the behavior of array @ number is a little off (it stores points in an array, what we want is the array itself in state, and the scalar quantity in time).","""A StateTime class is a generalization of point.",It holds both a state and a time.,,,"We don't want to use Point, since state may be a vector quantity, and the behavior of array @ number is a little off (it stores points in an array, what we want is the array itself in state, and the scalar quantity in time).""",,,,,,,,,,,,,,,,,,
BlMorphicHostSpace,"I am a host space created by BlMorphicHost.
I make it possible to embed Bloc space within arbitrary morphs.
For more information and example, please refer to BlMorphicHost.","""I am a host space created by BlMorphicHost.",I make it possible to embed Bloc space within arbitrary morphs.,,,,,"For more information and example, please refer to BlMorphicHost.""",,,,,,,,,,,,,,,,
GtSnippetRequest,I am sent by snippet widget looks when they request to receive a snippet model from the widget model,I am sent by snippet widget looks when they request to receive a snippet model from the widget model,I am sent by snippet widget looks when they request to receive a snippet model from the widget model,,,,,,,,,,,,,,,,,,,,,
PMSciKitLearnSVDFlipAlgorithmTest,This is the test class that exercises scikit-learn Eigenvector Flip Algorithm,This is the test class that exercises scikit-learn Eigenvector Flip Algorithm,This is the test class that exercises scikit-learn Eigenvector Flip Algorithm,,,,,,,,,,,,,,,,,,,,,
KGBForMetricsTestResource,I am a test resource building a FamixStModel with some of KGB packages used for metrics tests.,I am a test resource,building a FamixStModel with some of KGB packages used for metrics test,building a FamixStModel with some of KGB packages used for metrics test,,,,,,FamixStModel,,,,,,,,,,,,,,
BlArrowheadSimpleArrow,"I am a simple arrow-like arrowhead.
Both my size and arrow length depend on the curve width.

It is possible hovewer to customize a length fraction - how long should be the outer ""arrow"" compared to the length of the side of a nose triangle.

Users can also customise nose angle that tells how wide should the arrow lines be spread.
The with of the outer arrows can be specified by changing border width of a simple arrow arrowhead.

I support both background and border paint and can have hollow inner triangle.","I am a simple arrow-like arrowhead.
Both my size and arrow length depend on the curve width.","I support both background and border paint and can have hollow inner triangle. 
The with of the outer arrows can be specified by changing border width of a simple arrow arrowhead.",,"It is possible hovewer to customize a length fraction - how long should be the outer ""arrow"" compared to the length of the side of a nose triangle.",,,,,,Users can also customise nose angle that tells how wide should the arrow lines be spread.,,,,,,,,,,,,,
GtPlotterAxisProjection,"I represent a projection value of a domain object on the axis.

Given a Point (20@30) as a domain object and euclidian coordinate system.
Then projection of that point on continuous X-Axis would be 20 and projection on Y-axis would be 30.

A projection of a domain object on discrete axis is an index of that object in a data set",I represent a projection value of a domain object on the axis.,,,,A projection of a domain object on discrete axis is an index of that object in a data set,,,,,"Given a Point (20@30) as a domain object and euclidian coordinate system.
Then projection of that point on continuous X-Axis would be 20 and projection on Y-axis would be 30.",,,,,,,,,,,,,
RTCalendarExample,"RTCalendarExample new installTitle: 'VisualizationCSV' 
 code:
'
| b tab colors dictionary |
tab := RTTabTable new input: ''http://bl.ocks.org/mbostock/raw/4063318/dji.csv'' asUrl retrieveContents usingDelimiter: $,.
tab removeFirstRow.

dictionary := Dictionary new.
tab values do: [ :ar | | value |
 value := (ar fifth asNumber - ar second asNumber)/ ar second asNumber.
 dictionary at: ar first asDate put: value ].

colors := #(#(165 0 38) #(215 48 38) #(244 109 67)
 #(253 174 97) #(254 224 139) #(255 255 191) #(217 239 139)
 #(166 217 106) #(102 189 99) #(26 152 80) #(0 104 55)
 ) collect: [ :ar| Color r: ar first g: ar second b: ar third range: 255 ].

b := RTCalendarBuilder new.
b dateShape rectangle size: 15; color: Color white; borderColor: Color lightGray.
b monthShape shape: (b monthShapePath: 15.0).
b yearShape composite: [ :comp | 
 comp add: (RTLabel new text: [ :d | d year ]; height: 20 ).
 comp add: (RTBox new color: Color transparent). ] .
b dates: ((Year year: 1990) to: (Year year: 2010) ).
b dateLayout gapSize: 0.
b monthLayout month.
b yearLayout horizontalLine.
b dateShape if: [ :d | dictionary includesKey: d ] color: 
 [ :d | | value index |
 value := (dictionary at: d)+0.05.
 index := (value * 11/ 0.1)+1.
 index < 1 ifTrue: [ index := 1 ].
 index > 11 ifTrue: [ index := 11 ].
 colors at: index. ].
b dateInteraction popup.
b build.
(b view elements select: [:e | e model isKindOf: Month]) pushFront.
^ b view

'",,,,,,,,,,"RTCalendarExample new installTitle: 'VisualizationCSV' 
 code:
'
| b tab colors dictionary |
tab := RTTabTable new input: ''http://bl.ocks.org/mbostock/raw/4063318/dji.csv'' asUrl retrieveContents usingDelimiter: $,.
tab removeFirstRow.

dictionary := Dictionary new.
tab values do: [ :ar | | value |
 value := (ar fifth asNumber - ar second asNumber)/ ar second asNumber.
 dictionary at: ar first asDate put: value ].

colors := #(#(165 0 38) #(215 48 38) #(244 109 67)
 #(253 174 97) #(254 224 139) #(255 255 191) #(217 239 139)
 #(166 217 106) #(102 189 99) #(26 152 80) #(0 104 55)
 ) collect: [ :ar| Color r: ar first g: ar second b: ar third range: 255 ].

b := RTCalendarBuilder new.
b dateShape rectangle size: 15; color: Color white; borderColor: Color lightGray.
b monthShape shape: (b monthShapePath: 15.0).
b yearShape composite: [ :comp | 
 comp add: (RTLabel new text: [ :d | d year ]; height: 20 ).
 comp add: (RTBox new color: Color transparent). ] .
b dates: ((Year year: 1990) to: (Year year: 2010) ).
b dateLayout gapSize: 0.
b monthLayout month.
b yearLayout horizontalLine.
b dateShape if: [ :d | dictionary includesKey: d ] color: 
 [ :d | | value index |
 value := (dictionary at: d)+0.05.
 index := (value * 11/ 0.1)+1.
 index < 1 ifTrue: [ index := 1 ].
 index > 11 ifTrue: [ index := 11 ].
 colors at: index. ].
b dateInteraction popup.
b build.
(b view elements select: [:e | e model isKindOf: Month]) pushFront.
^ b view

'",,,,,,,,,,,,,
WAImageStatus,A WAImageStatus displays information about the current Smalltalk image.,,A WAImageStatus displays information about the current Smalltalk image.,,,,,,,,,,,,,,,,,,,,,
GtConnectorButtonCreatedEvent,"Is sent by ButtonAttribute after button is created.

I allow Connector to be notified and attach its own additional handlers to newly created button",,"Is sent by ButtonAttribute after button is created.

I allow Connector to be notified and attach its own additional handlers to newly created button","Is sent by ButtonAttribute after button is created.

I allow Connector to be notified and attach its own additional handlers to newly created button",,,,,,,,,,,,,,,,,Is sent by ButtonAttribute after button is created.,,,
PRSyntaxError,An error about syntax,An error about syntax,,,,,,,,,,,,,,,,,,,,,,
SpartaCairoTextMetrics,"I store the extents of a single glyph or a string of glyphs in user-space coordinates. Because text extents are in user-space coordinates, they are mostly, but not entirely, independent of the current transformation matrix. If you call cairo_scale(cr, 2.0, 2.0), text will be drawn twice as big, but the reported text extents will not be doubled. They will change slightly due to hinting (so you can't assume that metrics are independent of the transformation matrix), but otherwise will remain unchanged.

bearingX - the horizontal distance from the origin to the leftmost part of the glyphs as drawn. Positive if the glyphs lie entirely to the right of the origin.

bearingY - the vertical distance from the origin to the topmost part of the glyphs as drawn. Positive only if the glyphs lie completely below the origin; will usually be negative.

width - width of the glyphs as drawn

height - height of the glyphs as drawn

advanceX - distance to advance in the X direction after drawing these glyphs

advanceY - distance to advance in the Y direction after drawing these glyphs. Will typically be zero except for vertical text layout as found in East-Asian languages.",,I store the extents of a single glyph or a string of glyphs in user-space coordinates.,,,"Because text extents are in user-space coordinates, they are mostly, but not entirely, independent of the current transformation matrix. If you call cairo_scale(cr, 2.0, 2.0), text will be drawn twice as big, but the reported text extents will not be doubled. They will change slightly due to hinting (so you can't assume that metrics are independent of the transformation matrix), but otherwise will remain unchanged.","bearingX - the horizontal distance from the origin to the leftmost part of the glyphs as drawn. Positive if the glyphs lie entirely to the right of the origin.

bearingY - the vertical distance from the origin to the topmost part of the glyphs as drawn. Positive only if the glyphs lie completely below the origin; will usually be negative.

width - width of the glyphs as drawn

height - height of the glyphs as drawn

advanceX - distance to advance in the X direction after drawing these glyphs

advanceY - distance to advance in the Y direction after drawing these glyphs. Will typically be zero except for vertical text layout as found in East-Asian languages.",,,,,,,,"They will change slightly due to hinting (so you can't assume that metrics are independent of the transformation matrix), but otherwise will remain unchanged.",,,,,,,,,
BlCompulsoryCombinationTest,This class contains tests,,This class contains tests,,,,,,,,,,,,,,,,,,,,,
RTScrollBarBuilder,"A RTScrollBarBuilder is a scroll bar that you can add to navigate in your view. More than a Draggable view, it allows to keep a mark about your position in the view and it scale for large views. 

It can be static, movable, using #isStatic or #isMovable
aving an orientation #vertical or #horizontal.

the default configuration is #isBasic and #isStatic,

the bar shape is defined by #barShape: <#aBox or default value #anEllipse>
the bar can have a specificity like #scalable, so it give an idea of the size of the view.

Size or fixedPosition can be defined as blocks.

width: to set a static size of width.",A RTScrollBarBuilder is a scroll bar that you can add to navigate in your view.,"More than a Draggable view, it allows to keep a mark about your position in the view and it scale for large views.",,"It can be static, movable, using #isStatic or #isMovable
aving an orientation #vertical or #horizontal.

the default configuration is #isBasic and #isStatic,

the bar shape is defined by #barShape: <#aBox or default value #anEllipse>
the bar can have a specificity like #scalable, so it give an idea of the size of the view.

Size or fixedPosition can be defined as blocks.

width: to set a static size of width.",,,,,,,,,,,,,,,,,,,
BlMorphicSpaceHostMorph,I act as a space host for a Bloc space,I act as a space host for a Bloc space,,I act as a space host for a Bloc space,,,,,,,,,,,,,,,,,,,,