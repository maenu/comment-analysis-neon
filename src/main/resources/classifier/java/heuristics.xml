<?xml version="1.0" encoding="UTF-8"?>
<heuristics>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="test"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="class"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/xcomp</type>
        <text>Is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Provides [something].</text>
        <conditions>
            <condition>dobj.governor="provide"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Helps [something].</text>
        <conditions>
            <condition>dobj.governor="default support use help"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Implements [something].</text>
        <conditions>
            <condition>dobj.governor="implement"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] implementations.</text>
        <conditions>
            <condition>nsubj.governor="implementation"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Class tests [something].</text>
        <conditions>
            <condition>nsubj.governor="test"</condition>
            <condition>nsubj.dependent="class"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To implement [something].</text>
        <conditions>
            <condition>aux.governor="implement"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp/aux/auxpass</type>
        <text>To be contained by that.</text>
        <conditions>
            <condition>nsubj.governor="contain"</condition>
            <condition>nsubj.dependent="that"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
            <condition>xcomp.dependent="store"</condition>
            <condition>xcomp.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="add"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Uses.</text>
        <conditions>
            <condition>xcomp.governor="use"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] files.</text>
        <conditions>
            <condition>nsubj.governor="register file"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="enumeration list"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Links [something].</text>
        <conditions>
            <condition>dobj.governor="link"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_for</type>
        <text>This is class.</text>
        <conditions>
            <condition>nsubj.governor="class"</condition>
            <condition>nsubj.dependent="this"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_for/xcomp</type>
        <text>Those is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.dependent="those"</condition>
            <condition>nsubj.governor=prep_for.governor</condition>
            <condition>prep_for.dependent="readability"</condition>
            <condition>prep_for.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] needs.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To store.</text>
        <conditions>
            <condition>aux.governor="store"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] uses [something].</text>
        <conditions>
            <condition>nsubj.governor="apply use"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>[auxiliary] be added.</text>
        <conditions>
            <condition>nsubjpass.governor="add"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>That uses.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="that"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>That is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.dependent="that"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>[auxiliary] be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_to</type>
        <text>Is added.</text>
        <conditions>
            <condition>nsubjpass.governor="add"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="collection class"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_of</type>
        <text>Files implementation.</text>
        <conditions>
            <condition>dobj.governor="file"</condition>
            <condition>dobj.dependent="implementation"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Tests operation.</text>
        <conditions>
            <condition>dobj.governor="test"</condition>
            <condition>dobj.dependent="operation"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod/dobj</type>
        <text>[verb]s [something] represent.</text>
        <conditions>
            <condition>vmod.governor="class"</condition>
            <condition>vmod.dependent="represent"</condition>
            <condition>vmod.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Represents declaration.</text>
        <conditions>
            <condition>dobj.governor="represent"</condition>
            <condition>dobj.dependent="contract declaration"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Requires.</text>
        <conditions>
            <condition>xcomp.governor="need require"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="type"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] sees [something].</text>
        <conditions>
            <condition>nsubj.governor="see"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Class maintains [something].</text>
        <conditions>
            <condition>nsubj.governor="maintain"</condition>
            <condition>nsubj.dependent="class"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Class contains [something].</text>
        <conditions>
            <condition>nsubj.governor="contain"</condition>
            <condition>nsubj.dependent="class"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_of</type>
        <text>Implementation objects.</text>
        <conditions>
            <condition>nsubj.governor="object"</condition>
            <condition>nsubj.dependent="implementation"</condition>
            <condition>nsubj.dependent=prep_of.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Class objects.</text>
        <conditions>
            <condition>nsubj.governor="object"</condition>
            <condition>nsubj.dependent="class"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Class represents [something].</text>
        <conditions>
            <condition>nsubj.governor="represent"</condition>
            <condition>nsubj.dependent="class"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of/dobj</type>
        <text>Defaults [something].</text>
        <conditions>
            <condition>prep_of.governor="implementation"</condition>
            <condition>prep_of.governor=dobj.dependent</condition>
            <condition>dobj.governor="use default"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Class provides [something].</text>
        <conditions>
            <condition>nsubj.governor="provide"</condition>
            <condition>nsubj.dependent="class"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Represents reference.</text>
        <conditions>
            <condition>dobj.governor="represent"</condition>
            <condition>dobj.dependent="reference"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Class implements [something].</text>
        <conditions>
            <condition>nsubj.governor="implement"</condition>
            <condition>nsubj.dependent="class"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Shows [something].</text>
        <conditions>
            <condition>dobj.governor="show"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] uses.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To create [something].</text>
        <conditions>
            <condition>aux.governor="create"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prepc_for/dobj</type>
        <text/>
        <conditions>
            <condition>prepc_for.governor="component"</condition>
            <condition>prepc_for.dependent="display"</condition>
            <condition>prepc_for.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="apply use"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] files [something].</text>
        <conditions>
            <condition>nsubj.governor="file"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Inputformat files.</text>
        <conditions>
            <condition>nsubj.governor="file"</condition>
            <condition>nsubj.dependent="inputformat"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] calls.</text>
        <conditions>
            <condition>nsubj.governor="call"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Represents part.</text>
        <conditions>
            <condition>dobj.governor="represent"</condition>
            <condition>dobj.dependent="item part"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Uses.</text>
        <conditions>
            <condition>ccomp.governor="use"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="part builder"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] extends [something].</text>
        <conditions>
            <condition>nsubj.governor="extend"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] counts [something].</text>
        <conditions>
            <condition>nsubj.governor="count"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Counts [something].</text>
        <conditions>
            <condition>dobj.governor="count"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] links [something].</text>
        <conditions>
            <condition>nsubj.governor="link"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Class is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.dependent="class"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_as</type>
        <text>[something] uses.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=prep_as.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_to</type>
        <text>Adds [something].</text>
        <conditions>
            <condition>dobj.governor="add"</condition>
            <condition>dobj.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] handles [something].</text>
        <conditions>
            <condition>nsubj.governor="handle"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] tests.</text>
        <conditions>
            <condition>nsubj.governor="test"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>That allows.</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.dependent="that"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Can add.</text>
        <conditions>
            <condition>aux.governor="add"</condition>
            <condition>aux.dependent="can"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="collection set"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gets [something].</text>
        <conditions>
            <condition>dobj.governor="get"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Removes [something].</text>
        <conditions>
            <condition>dobj.governor="remove"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] starts.</text>
        <conditions>
            <condition>nsubj.governor="start"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] determine.</text>
        <conditions>
            <condition>aux.governor="determine"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] delegate.</text>
        <conditions>
            <condition>aux.governor="delegate"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_from</type>
        <text/>
        <conditions>
            <condition>prep_from.governor="read"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Manages [something].</text>
        <conditions>
            <condition>dobj.governor="manage"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] sends.</text>
        <conditions>
            <condition>nsubj.governor="send"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="set collection"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] backs.</text>
        <conditions>
            <condition>nsubj.governor="back"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Defaults [something].</text>
        <conditions>
            <condition>dobj.governor="order default"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] includes.</text>
        <conditions>
            <condition>nsubj.governor="include"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] exists.</text>
        <conditions>
            <condition>nsubj.governor="exist"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] generators.</text>
        <conditions>
            <condition>nsubj.governor="generator"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Encapsulates [something].</text>
        <conditions>
            <condition>dobj.governor="encapsulate"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] writes.</text>
        <conditions>
            <condition>nsubj.governor="write"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Writes [something].</text>
        <conditions>
            <condition>dobj.governor="write"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Tests.</text>
        <conditions>
            <condition>ccomp.governor="test"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Builds [something].</text>
        <conditions>
            <condition>dobj.governor="build"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="collection set"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="collection class"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Replaces [something].</text>
        <conditions>
            <condition>dobj.governor="replace"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="show present"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] takes.</text>
        <conditions>
            <condition>nsubj.governor="take"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] interfaces.</text>
        <conditions>
            <condition>nsubj.governor="interface"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] creates.</text>
        <conditions>
            <condition>nsubj.governor="create"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Stores [something].</text>
        <conditions>
            <condition>dobj.governor="store"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="part builder"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] adds.</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Has [something].</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="use apply"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Adds.</text>
        <conditions>
            <condition>xcomp.governor="add"</condition>
        </conditions>
        <sentence_class>summary</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prepc_by/xcomp/aux/dobj</type>
        <text>To [verb] property to satisfy.</text>
        <conditions>
            <condition>prepc_by.governor="compare"</condition>
            <condition>prepc_by.dependent="tostr"</condition>
            <condition>prepc_by.dependent=xcomp.governor</condition>
            <condition>xcomp.dependent="satisfy"</condition>
            <condition>xcomp.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="property"</condition>
        </conditions>
        <sentence_class>exception</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Throws [something].</text>
        <conditions>
            <condition>dobj.governor="throw"</condition>
        </conditions>
        <sentence_class>exception</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] fails.</text>
        <conditions>
            <condition>nsubj.governor="fail"</condition>
        </conditions>
        <sentence_class>exception</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] throws.</text>
        <conditions>
            <condition>nsubj.governor="throw"</condition>
        </conditions>
        <sentence_class>exception</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] compares.</text>
        <conditions>
            <condition>nsubj.governor="compare"</condition>
        </conditions>
        <sentence_class>exception</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Vaadin ltds.</text>
        <conditions>
            <condition>nsubj.governor="ltd"</condition>
            <condition>nsubj.dependent="vaadin"</condition>
        </conditions>
        <sentence_class>Ownership</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Loui wassermans.</text>
        <conditions>
            <condition>nsubj.governor="wasserman"</condition>
            <condition>nsubj.dependent="loui"</condition>
        </conditions>
        <sentence_class>Ownership</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] googles.</text>
        <conditions>
            <condition>nsubj.governor="google"</condition>
        </conditions>
        <sentence_class>Ownership</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_since</type>
        <text/>
        <conditions>
            <condition>prep_since.governor="bourrillion"</condition>
        </conditions>
        <sentence_class>Ownership</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Ownership</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] share.</text>
        <conditions>
            <condition>aux.governor="share"</condition>
        </conditions>
        <sentence_class>Ownership</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="type"</condition>
        </conditions>
        <sentence_class>Ownership</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>We use [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>[auxiliary] be changed.</text>
        <conditions>
            <condition>nsubjpass.governor="change"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] includes [something].</text>
        <conditions>
            <condition>nsubj.governor="include"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To listen.</text>
        <conditions>
            <condition>aux.governor="listen"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] use.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] sees.</text>
        <conditions>
            <condition>nsubj.governor="see"</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Does [something].</text>
        <conditions>
            <condition>dobj.governor="do"</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="support"</condition>
        </conditions>
        <sentence_class>Warning</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] requires.</text>
        <conditions>
            <condition>nsubj.governor="need require"</condition>
        </conditions>
        <sentence_class>Precondition</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="apply use"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp/nsubjpass/auxpass/neg</type>
        <text>Intends and interface does not.</text>
        <conditions>
            <condition>xcomp.governor="intend"</condition>
            <condition>xcomp.governor=nsubjpass.governor</condition>
            <condition>nsubjpass.dependent="interface"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/neg</type>
        <text>Class is not intended.</text>
        <conditions>
            <condition>nsubjpass.governor="intend"</condition>
            <condition>nsubjpass.dependent="class"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] attempts.</text>
        <conditions>
            <condition>nsubj.governor="use attempt"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] lis [something].</text>
        <conditions>
            <condition>nsubj.governor="o be li"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] formattermessages.</text>
        <conditions>
            <condition>nsubj.governor="formattermessage"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To use [something].</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Os [something].</text>
        <conditions>
            <condition>dobj.governor="li be n o"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is created.</text>
        <conditions>
            <condition>nsubjpass.governor="create"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] use [something].</text>
        <conditions>
            <condition>aux.governor="apply use"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] uses [something].</text>
        <conditions>
            <condition>nsubj.governor="apply use"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Uses.</text>
        <conditions>
            <condition>xcomp.governor="use"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Pres [something].</text>
        <conditions>
            <condition>dobj.governor="pre"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="time instance"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/neg/xcomp</type>
        <text>Is not intended.</text>
        <conditions>
            <condition>nsubjpass.governor="intend"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
            <condition>neg.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] deps comment.</text>
        <conditions>
            <condition>nsubj.governor="dep"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="comment"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Builds [something].</text>
        <conditions>
            <condition>dobj.governor="build"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is implemented.</text>
        <conditions>
            <condition>auxpass.governor="implement"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="time"</condition>
            <condition>prep_of.dependent="request"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>It means.</text>
        <conditions>
            <condition>nsubj.governor="means"</condition>
            <condition>nsubj.dependent="it"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To use.</text>
        <conditions>
            <condition>aux.governor="help assist use"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>dobj</type>
        <text>Does [something].</text>
        <conditions>
            <condition>dobj.governor="make do"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To extend.</text>
        <conditions>
            <condition>aux.governor="extend"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] parts.</text>
        <conditions>
            <condition>nsubj.governor="o p part"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/vmod</type>
        <text>[something] uses [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=vmod.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod/nsubj/cop</type>
        <text>[something] is.</text>
        <conditions>
            <condition>vmod.governor="function"</condition>
            <condition>vmod.governor=nsubj.governor</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_from</type>
        <text>Class filters file.</text>
        <conditions>
            <condition>nsubj.governor="accept"</condition>
            <condition>nsubj.dependent="it"</condition>
            <condition>nsubj.governor="filter"</condition>
            <condition>nsubj.dependent="class"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="file"</condition>
            <condition>dobj.governor=prep_from.governor</condition>
            <condition>prep_from.dependent="directory"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To implement.</text>
        <conditions>
            <condition>aux.governor="implement"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To acquire [something].</text>
        <conditions>
            <condition>aux.governor="get acquire"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_before</type>
        <text>Space roots.</text>
        <conditions>
            <condition>nsubj.governor="root"</condition>
            <condition>nsubj.dependent="space"</condition>
            <condition>nsubj.dependent=prep_before.governor</condition>
            <condition>prep_before.dependent="expression"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>That goes.</text>
        <conditions>
            <condition>nsubj.governor="go"</condition>
            <condition>nsubj.dependent="that"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for/nsubj/dobj</type>
        <text>We [verb] [something].</text>
        <conditions>
            <condition>prep_for.governor="increase"</condition>
            <condition>prep_for.governor=nsubj.governor</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses method.</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.dependent="technique method"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Os [something].</text>
        <conditions>
            <condition>dobj.governor="n p o"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] uses [something].</text>
        <conditions>
            <condition>dobj.governor="apply use"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/nsubj/dobj</type>
        <text>[something] means [something] and we pick function.</text>
        <conditions>
            <condition>ccomp.governor="means"</condition>
            <condition>ccomp.governor=nsubj.governor</condition>
            <condition>nsubj.dependent="it"</condition>
            <condition>nsubj.governor="pick"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="function"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Allows [something].</text>
        <conditions>
            <condition>dobj.governor="let allow"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>We want.</text>
        <conditions>
            <condition>nsubj.governor="want"</condition>
            <condition>nsubj.dependent="we"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] uses.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is time.</text>
        <conditions>
            <condition>nsubj.governor="time"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>cop</type>
        <text>Is.</text>
        <conditions>
            <condition>cop.governor="time case"</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/auxpass</type>
        <text>[auxiliary] be used.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>This can be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.dependent="this"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/xcomp/aux</type>
        <text>To be set.</text>
        <conditions>
            <condition>nsubjpass.governor="set"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.governor=xcomp.governor</condition>
            <condition>xcomp.dependent="null"</condition>
            <condition>xcomp.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] builds [something].</text>
        <conditions>
            <condition>nsubj.governor="build"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] includes [something].</text>
        <conditions>
            <condition>nsubj.governor="include"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>P ps [something].</text>
        <conditions>
            <condition>nsubj.governor="o p"</condition>
            <condition>nsubj.dependent="i p"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is specified.</text>
        <conditions>
            <condition>nsubjpass.governor="specify"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has consequence.</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="effect consequence"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/ccomp/aux/dobj</type>
        <text>To learn [something] to use.</text>
        <conditions>
            <condition>aux.governor="learn"</condition>
            <condition>aux.governor=ccomp.governor</condition>
            <condition>ccomp.dependent="use"</condition>
            <condition>ccomp.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>That uses.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="that"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Can use.</text>
        <conditions>
            <condition>aux.governor="apply use"</condition>
            <condition>aux.dependent="can"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] ps.</text>
        <conditions>
            <condition>nsubj.governor="o part p"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] makes [something].</text>
        <conditions>
            <condition>nsubj.governor="do make"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="i p"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] gets.</text>
        <conditions>
            <condition>nsubj.governor="acquire get"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] returns.</text>
        <conditions>
            <condition>nsubj.governor="permit return"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/neg/dobj</type>
        <text>[something] [auxiliary] not accept [something].</text>
        <conditions>
            <condition>nsubj.governor="accept"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
            <condition>neg.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="type"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To link [something].</text>
        <conditions>
            <condition>aux.governor="link"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp/nsubj/dobj</type>
        <text>[something] is to compute.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
            <condition>ccomp.dependent="compute"</condition>
            <condition>ccomp.dependent=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>You can apply [something].</text>
        <conditions>
            <condition>nsubj.governor="use apply"</condition>
            <condition>nsubj.dependent="you"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>Param ts to header.</text>
        <conditions>
            <condition>nsubj.governor="t"</condition>
            <condition>nsubj.dependent="param"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
            <condition>ccomp.dependent="header"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Exception is thrown.</text>
        <conditions>
            <condition>nsubjpass.governor="throw"</condition>
            <condition>nsubjpass.dependent="exception"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is defined.</text>
        <conditions>
            <condition>auxpass.governor="define"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_to</type>
        <text>Is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] implement [something].</text>
        <conditions>
            <condition>aux.governor="implement"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Implements [something].</text>
        <conditions>
            <condition>dobj.governor="implement"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gets [something].</text>
        <conditions>
            <condition>dobj.governor="get"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] allows [something].</text>
        <conditions>
            <condition>nsubj.governor="let allow"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] gets [something].</text>
        <conditions>
            <condition>nsubj.governor="get"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp/dobj</type>
        <text>Creates [something] to use.</text>
        <conditions>
            <condition>xcomp.governor="create"</condition>
            <condition>xcomp.dependent="use"</condition>
            <condition>xcomp.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] deps comment.</text>
        <conditions>
            <condition>nsubj.governor="dep"</condition>
            <condition>nsubj.dependent=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="comment"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Includes [something].</text>
        <conditions>
            <condition>dobj.governor="include"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="map"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="add"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>P ps.</text>
        <conditions>
            <condition>nsubj.governor="p"</condition>
            <condition>nsubj.dependent="p"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] throws.</text>
        <conditions>
            <condition>nsubj.governor="throw"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] implements [something].</text>
        <conditions>
            <condition>nsubj.governor="implement"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] must implement [something].</text>
        <conditions>
            <condition>nsubj.governor="implement"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="must"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] throws [something].</text>
        <conditions>
            <condition>nsubj.governor="throw"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_to</type>
        <text>Maps [something].</text>
        <conditions>
            <condition>dobj.governor="map"</condition>
            <condition>dobj.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Time is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.dependent="case time"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>You have [something].</text>
        <conditions>
            <condition>nsubj.governor="use apply"</condition>
            <condition>nsubj.dependent="you"</condition>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/auxpass/nsubjpass</type>
        <text>[auxiliary] be specified.</text>
        <conditions>
            <condition>aux.governor="specify"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=nsubjpass.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] translates [something].</text>
        <conditions>
            <condition>nsubj.governor="iterate translate"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_per</type>
        <text/>
        <conditions>
            <condition>prep_per.governor="token"</condition>
            <condition>prep_per.dependent="second"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>We serve [something].</text>
        <conditions>
            <condition>nsubj.governor="serve"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/nsubj</type>
        <text>[something] takes [something].</text>
        <conditions>
            <condition>nsubj.governor="take"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Ratelimiter becomes.</text>
        <conditions>
            <condition>nsubj.governor="become"</condition>
            <condition>nsubj.dependent="ratelimiter"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of/nsubj</type>
        <text>[something] is.</text>
        <conditions>
            <condition>prep_of.governor="sum amount"</condition>
            <condition>prep_of.dependent=nsubj.dependent</condition>
            <condition>nsubj.governor="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/nsubj</type>
        <text>[something] means and it.</text>
        <conditions>
            <condition>ccomp.governor="means"</condition>
            <condition>ccomp.governor=nsubj.governor</condition>
            <condition>nsubj.dependent="it"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>It is request.</text>
        <conditions>
            <condition>nsubj.governor="request"</condition>
            <condition>nsubj.dependent="it"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of/nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>prep_of.governor="value"</condition>
            <condition>prep_of.dependent=nsubj.dependent</condition>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] headers [something].</text>
        <conditions>
            <condition>nsubj.governor="header"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Param ts [something].</text>
        <conditions>
            <condition>nsubj.governor="t"</condition>
            <condition>nsubj.dependent="param"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gets [something].</text>
        <conditions>
            <condition>dobj.governor="serve get"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] makes [something].</text>
        <conditions>
            <condition>nsubj.governor="type make"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] [auxiliary] use.</text>
        <conditions>
            <condition>nsubj.governor="apply use"</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="implementation"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.dependent=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>P uses [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="p"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is generator.</text>
        <conditions>
            <condition>nsubj.governor="setup generator"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] uses technique.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="method technique"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="use apply"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/prep_to</type>
        <text>Can apply.</text>
        <conditions>
            <condition>aux.governor="use apply"</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp/dobj</type>
        <text>Runs [something] to use.</text>
        <conditions>
            <condition>xcomp.governor="run"</condition>
            <condition>xcomp.dependent="use"</condition>
            <condition>xcomp.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To get [something].</text>
        <conditions>
            <condition>aux.governor="get"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] acquires [something].</text>
        <conditions>
            <condition>nsubj.governor="get acquire"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/vmod</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.governor=vmod.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass/xcomp</type>
        <text>Is used.</text>
        <conditions>
            <condition>auxpass.governor="use"</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/dobj</type>
        <text>Sees [something].</text>
        <conditions>
            <condition>ccomp.governor="see"</condition>
            <condition>ccomp.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>P ps.</text>
        <conditions>
            <condition>nsubj.governor="o p"</condition>
            <condition>nsubj.dependent="i p"</condition>
            <condition>nsubj.governor="p"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>P is.</text>
        <conditions>
            <condition>nsubj.governor="o be"</condition>
            <condition>nsubj.dependent="i p"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/nsubj</type>
        <text>[something] ps to be.</text>
        <conditions>
            <condition>ccomp.governor="p"</condition>
            <condition>ccomp.dependent="be"</condition>
            <condition>ccomp.dependent=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To do [something].</text>
        <conditions>
            <condition>aux.governor="do"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] maps.</text>
        <conditions>
            <condition>nsubj.governor="map"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Varargs [something].</text>
        <conditions>
            <condition>dobj.governor="vararg"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is evicted.</text>
        <conditions>
            <condition>nsubjpass.governor="evict"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="method"</condition>
            <condition>prep_of.dependent="class"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Com lis [something].</text>
        <conditions>
            <condition>nsubj.governor="li"</condition>
            <condition>nsubj.dependent="com"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Computes [something].</text>
        <conditions>
            <condition>dobj.governor="calculate compute"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Reduces [something].</text>
        <conditions>
            <condition>dobj.governor="reduce"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>We compute [something].</text>
        <conditions>
            <condition>nsubj.governor="compute"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is increased.</text>
        <conditions>
            <condition>nsubjpass.governor="increase"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] comes.</text>
        <conditions>
            <condition>nsubj.governor="come"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses edsl.</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.dependent="edsl"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To bind [something].</text>
        <conditions>
            <condition>aux.governor="bind"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] bind type.</text>
        <conditions>
            <condition>aux.governor="bind"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="type"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sets [something].</text>
        <conditions>
            <condition>dobj.governor="place set"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Os [something].</text>
        <conditions>
            <condition>dobj.governor="name n o"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="time instance"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Calls [something].</text>
        <conditions>
            <condition>dobj.governor="name call"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] codes.</text>
        <conditions>
            <condition>nsubj.governor="code"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] knows.</text>
        <conditions>
            <condition>nsubj.governor="know"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in/nsubj</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="result"</condition>
            <condition>prep_in.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is supplied.</text>
        <conditions>
            <condition>auxpass.governor="provide supply"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Extends [something].</text>
        <conditions>
            <condition>dobj.governor="extend"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] extend [something].</text>
        <conditions>
            <condition>aux.governor="extend"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To avoid.</text>
        <conditions>
            <condition>aux.governor="avoid"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_in</type>
        <text>[something] passes.</text>
        <conditions>
            <condition>nsubj.governor="pass"</condition>
            <condition>nsubj.governor=prep_in.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] requires.</text>
        <conditions>
            <condition>nsubj.governor="need require"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] sees.</text>
        <conditions>
            <condition>nsubj.governor="see"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/nsubj</type>
        <text>[something] takes.</text>
        <conditions>
            <condition>ccomp.governor="take"</condition>
            <condition>ccomp.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] names.</text>
        <conditions>
            <condition>nsubj.governor="o name"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Is.</text>
        <conditions>
            <condition>ccomp.governor="p i"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] os [something].</text>
        <conditions>
            <condition>dobj.governor="p o"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] avoid [something].</text>
        <conditions>
            <condition>aux.governor="avoid"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>dobj</type>
        <text>Does [something].</text>
        <conditions>
            <condition>dobj.governor="make do"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>dobj</type>
        <text>Does anything.</text>
        <conditions>
            <condition>dobj.governor="do"</condition>
            <condition>dobj.dependent="anything"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] throws [something].</text>
        <conditions>
            <condition>dobj.governor="throw"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] modifies [something].</text>
        <conditions>
            <condition>nsubj.governor="modify"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] includes [something].</text>
        <conditions>
            <condition>dobj.governor="include"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] handles [something].</text>
        <conditions>
            <condition>nsubj.governor="handle"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Stores [something].</text>
        <conditions>
            <condition>dobj.governor="store"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>You use.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="you"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses method.</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.dependent="technique method"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Links [something].</text>
        <conditions>
            <condition>dobj.governor="link"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>neg</type>
        <text/>
        <conditions>
            <condition>neg.governor="concern matter"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Spends [something].</text>
        <conditions>
            <condition>dobj.governor="spend"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] considers.</text>
        <conditions>
            <condition>nsubj.governor="consider"</condition>
            <condition>nsubj.dependent=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="translate"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] serve [something].</text>
        <conditions>
            <condition>aux.governor="serve"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Takes [something].</text>
        <conditions>
            <condition>dobj.governor="take"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="time instance"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Is.</text>
        <conditions>
            <condition>ccomp.governor="be i"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="amount sum"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="be i"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>We need.</text>
        <conditions>
            <condition>nsubj.governor="require need"</condition>
            <condition>nsubj.dependent="we"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Annotatedwithes [something].</text>
        <conditions>
            <condition>dobj.governor="annotatedwith"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] creates [something].</text>
        <conditions>
            <condition>nsubj.governor="create"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Creates [something].</text>
        <conditions>
            <condition>dobj.governor="create"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Binds [something].</text>
        <conditions>
            <condition>dobj.governor="bind"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] binds [something].</text>
        <conditions>
            <condition>nsubj.governor="bind"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to/nsubj</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="apply"</condition>
            <condition>prep_to.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="instance"</condition>
            <condition>prep_of.dependent="serviceimpl"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>neg</type>
        <text/>
        <conditions>
            <condition>neg.governor="i part"</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] use [something].</text>
        <conditions>
            <condition>aux.governor="apply use"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="number"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="consider"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] delegate.</text>
        <conditions>
            <condition>aux.governor="delegate"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="fall"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_on</type>
        <text/>
        <conditions>
            <condition>prep_on.governor="run"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] modify.</text>
        <conditions>
            <condition>aux.governor="modify"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] enters.</text>
        <conditions>
            <condition>nsubj.governor="enter"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] ses.</text>
        <conditions>
            <condition>nsubj.governor="s"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Considers.</text>
        <conditions>
            <condition>xcomp.governor="consider"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="use"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="sequence series"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] needs.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Treats [something].</text>
        <conditions>
            <condition>dobj.governor="e treat"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="string"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Shows [something].</text>
        <conditions>
            <condition>dobj.governor="show"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_before</type>
        <text/>
        <conditions>
            <condition>prep_before.governor="space"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Represents [something].</text>
        <conditions>
            <condition>dobj.governor="represent"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Ps.</text>
        <conditions>
            <condition>xcomp.governor="p"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="instance time"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="create"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] create.</text>
        <conditions>
            <condition>aux.governor="create"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] i.s.</text>
        <conditions>
            <condition>nsubj.governor="i."</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="reflect point"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_since</type>
        <text/>
        <conditions>
            <condition>prep_since.governor="bourrillion"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_like</type>
        <text/>
        <conditions>
            <condition>prep_like.governor="use apply"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="class"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Returns [something].</text>
        <conditions>
            <condition>dobj.governor="return"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Is.</text>
        <conditions>
            <condition>ccomp.governor="name i"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] hps.</text>
        <conditions>
            <condition>nsubj.governor="hp"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] configure.</text>
        <conditions>
            <condition>aux.governor="configure"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] stores.</text>
        <conditions>
            <condition>nsubj.governor="store"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] links.</text>
        <conditions>
            <condition>nsubj.governor="link"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] throw.</text>
        <conditions>
            <condition>aux.governor="throw"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] matters.</text>
        <conditions>
            <condition>nsubj.governor="concern matter"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Tweaks [something].</text>
        <conditions>
            <condition>dobj.governor="tweak"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Guarantees.</text>
        <conditions>
            <condition>ccomp.governor="guarantee"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="request"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="point element"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gives [something].</text>
        <conditions>
            <condition>dobj.governor="give"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Asks [something].</text>
        <conditions>
            <condition>dobj.governor="consult ask"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] changes.</text>
        <conditions>
            <condition>nsubj.governor="change"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="concept"</condition>
        </conditions>
        <sentence_class>usage</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>nsubjpass/auxpass</type>
        <text>Is granted.</text>
        <conditions>
            <condition>nsubjpass.governor="grant"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/prep_with</type>
        <text>To deal.</text>
        <conditions>
            <condition>aux.governor="deal"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=prep_with.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="time"</condition>
            <condition>prep_of.dependent="request"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>It means.</text>
        <conditions>
            <condition>nsubj.governor="means"</condition>
            <condition>nsubj.dependent="it"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>auxpass</type>
        <text>Is unused.</text>
        <conditions>
            <condition>auxpass.governor="unus"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>That goes.</text>
        <conditions>
            <condition>nsubj.governor="go"</condition>
            <condition>nsubj.dependent="that"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for/nsubj/dobj</type>
        <text>We [verb] [something].</text>
        <conditions>
            <condition>prep_for.governor="increase"</condition>
            <condition>prep_for.governor=nsubj.governor</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/nsubj/dobj</type>
        <text>[something] means [something] and we pick function.</text>
        <conditions>
            <condition>ccomp.governor="means"</condition>
            <condition>ccomp.governor=nsubj.governor</condition>
            <condition>nsubj.dependent="it"</condition>
            <condition>nsubj.governor="pick"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="function"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Computes [something].</text>
        <conditions>
            <condition>dobj.governor="compute"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="period"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp/nsubj/dobj</type>
        <text>[something] is to compute.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
            <condition>ccomp.dependent="compute"</condition>
            <condition>ccomp.dependent=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Request comes.</text>
        <conditions>
            <condition>nsubj.governor="come"</condition>
            <condition>nsubj.dependent="request"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] means.</text>
        <conditions>
            <condition>nsubj.governor="mean"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_per</type>
        <text/>
        <conditions>
            <condition>prep_per.governor="token"</condition>
            <condition>prep_per.dependent="second"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>We serve [something].</text>
        <conditions>
            <condition>nsubj.governor="serve"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/nsubj</type>
        <text>[something] takes [something].</text>
        <conditions>
            <condition>nsubj.governor="take"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Ratelimiter becomes.</text>
        <conditions>
            <condition>nsubj.governor="become"</condition>
            <condition>nsubj.dependent="ratelimiter"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To acquire [something].</text>
        <conditions>
            <condition>aux.governor="get acquire"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_to</type>
        <text>[something] translates.</text>
        <conditions>
            <condition>nsubj.governor="translate"</condition>
            <condition>nsubj.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of/nsubj</type>
        <text>[something] is.</text>
        <conditions>
            <condition>prep_of.governor="sum amount"</condition>
            <condition>prep_of.dependent=nsubj.dependent</condition>
            <condition>nsubj.governor="be"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Reduces [something].</text>
        <conditions>
            <condition>dobj.governor="reduce"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="translate"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>We compute [something].</text>
        <conditions>
            <condition>nsubj.governor="compute"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] permits.</text>
        <conditions>
            <condition>nsubj.governor="permit"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is increased.</text>
        <conditions>
            <condition>nsubjpass.governor="increase"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] allow.</text>
        <conditions>
            <condition>aux.governor="allow"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Maintains [something].</text>
        <conditions>
            <condition>dobj.governor="keep maintain"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="rate"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="wait"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>nsubj</type>
        <text>[something] arrives.</text>
        <conditions>
            <condition>nsubj.governor="arrive"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Acquires [something].</text>
        <conditions>
            <condition>dobj.governor="acquire"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Serves [something].</text>
        <conditions>
            <condition>dobj.governor="serve"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>We want.</text>
        <conditions>
            <condition>nsubj.governor="want"</condition>
            <condition>nsubj.dependent="we"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="amount sum"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Throttles [something].</text>
        <conditions>
            <condition>dobj.governor="limit throttle"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gets [something].</text>
        <conditions>
            <condition>dobj.governor="acquire get"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Guarantees.</text>
        <conditions>
            <condition>ccomp.governor="guarantee"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Keeps [something].</text>
        <conditions>
            <condition>dobj.governor="maintain keep"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Throttles [something].</text>
        <conditions>
            <condition>dobj.governor="limit throttle"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] stores.</text>
        <conditions>
            <condition>nsubj.governor="store"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gives [something].</text>
        <conditions>
            <condition>dobj.governor="give"</condition>
        </conditions>
        <sentence_class>Autogenerated</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sees com.</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
            <condition>dobj.dependent="com"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/dobj/nsubj/aux</type>
        <text>[something] to decide which to return.</text>
        <conditions>
            <condition>ccomp.governor="decide"</condition>
            <condition>ccomp.dependent="return"</condition>
            <condition>ccomp.dependent=dobj.governor</condition>
            <condition>dobj.dependent="which"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="implementation"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/nsubj/dobj</type>
        <text>[something] sees [something] to see.</text>
        <conditions>
            <condition>ccomp.governor="see"</condition>
            <condition>ccomp.dependent="see"</condition>
            <condition>ccomp.governor=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="test"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] [auxiliary] return.</text>
        <conditions>
            <condition>nsubj.governor="return"</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] sees [something].</text>
        <conditions>
            <condition>nsubj.governor="see"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj/dobj</type>
        <text>[something] sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>[auxiliary] be added.</text>
        <conditions>
            <condition>nsubjpass.governor="add"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Wikus wikuses [something].</text>
        <conditions>
            <condition>nsubj.governor="wikus"</condition>
            <condition>nsubj.dependent="wikus"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/auxpass</type>
        <text>[auxiliary] be invoked.</text>
        <conditions>
            <condition>aux.governor="invoke"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="class"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is defined.</text>
        <conditions>
            <condition>nsubjpass.governor="define"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] links.</text>
        <conditions>
            <condition>nsubj.governor="link"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Inputformat files.</text>
        <conditions>
            <condition>nsubj.governor="file"</condition>
            <condition>nsubj.dependent="inputformat"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] represents [something].</text>
        <conditions>
            <condition>nsubj.governor="represent"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Uses.</text>
        <conditions>
            <condition>xcomp.governor="use"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] uses [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sees org.</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
            <condition>dobj.dependent="org"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Links [something].</text>
        <conditions>
            <condition>dobj.governor="link"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Will return.</text>
        <conditions>
            <condition>aux.governor="return"</condition>
            <condition>aux.dependent="will"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="type"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Contains [something].</text>
        <conditions>
            <condition>dobj.governor="contain"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] orgs.</text>
        <conditions>
            <condition>nsubj.governor="org"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_on</type>
        <text/>
        <conditions>
            <condition>prep_on.governor="base"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Creates [something].</text>
        <conditions>
            <condition>dobj.governor="create"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="default instance"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] help.</text>
        <conditions>
            <condition>aux.governor="assist help"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
        </conditions>
        <sentence_class>Pointer</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Vaadin ltds.</text>
        <conditions>
            <condition>nsubj.governor="ltd"</condition>
            <condition>nsubj.dependent="vaadin"</condition>
        </conditions>
        <sentence_class>deprecation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/neg/xcomp</type>
        <text>Is not intended.</text>
        <conditions>
            <condition>nsubjpass.governor="intend"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
            <condition>neg.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>deprecation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp/nsubjpass/auxpass/neg</type>
        <text>Is not intended.</text>
        <conditions>
            <condition>xcomp.governor="intend"</condition>
            <condition>xcomp.governor=nsubjpass.governor</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>deprecation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>deprecation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] detect.</text>
        <conditions>
            <condition>aux.governor="detect"</condition>
        </conditions>
        <sentence_class>deprecation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_since</type>
        <text/>
        <conditions>
            <condition>prep_since.governor="bourrillion"</condition>
        </conditions>
        <sentence_class>deprecation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>deprecation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Recommendation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Considers.</text>
        <conditions>
            <condition>xcomp.governor="consider"</condition>
        </conditions>
        <sentence_class>Recommendation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] uses.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
        </conditions>
        <sentence_class>Recommendation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>nsubjpass/auxpass</type>
        <text>Portlet is removed.</text>
        <conditions>
            <condition>nsubjpass.governor="remove"</condition>
            <condition>nsubjpass.dependent="portlet"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>todo</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_for</type>
        <text>Portlet requests.</text>
        <conditions>
            <condition>nsubj.governor="request"</condition>
            <condition>nsubj.dependent="portlet"</condition>
            <condition>nsubj.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>todo</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>Param ts to header.</text>
        <conditions>
            <condition>nsubj.governor="t"</condition>
            <condition>nsubj.dependent="param"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
            <condition>ccomp.dependent="header"</condition>
        </conditions>
        <sentence_class>formatter</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] headers [something].</text>
        <conditions>
            <condition>nsubj.governor="header"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>formatter</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] footers.</text>
        <conditions>
            <condition>nsubj.governor="footer"</condition>
        </conditions>
        <sentence_class>formatter</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="apply use"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="li be"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/xcomp</type>
        <text>Is used.</text>
        <conditions>
            <condition>nsubjpass.governor="apply use"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/dobj/nsubj/aux</type>
        <text>[something] to decide which to return.</text>
        <conditions>
            <condition>ccomp.governor="decide"</condition>
            <condition>ccomp.dependent="return"</condition>
            <condition>ccomp.dependent=dobj.governor</condition>
            <condition>dobj.dependent="which"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] contains [something].</text>
        <conditions>
            <condition>nsubj.governor="contain"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>nsubjpass/auxpass</type>
        <text>Is granted.</text>
        <conditions>
            <condition>nsubjpass.governor="grant"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To keep.</text>
        <conditions>
            <condition>aux.governor="hold keep"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="apply use"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To hold [something].</text>
        <conditions>
            <condition>aux.governor="keep maintain hold"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_of</type>
        <text>Line contains name.</text>
        <conditions>
            <condition>nsubj.governor="contain"</condition>
            <condition>nsubj.dependent="line"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="name"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
            <condition>prep_of.dependent="file"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_from</type>
        <text>Class filters file.</text>
        <conditions>
            <condition>nsubj.governor="accept"</condition>
            <condition>nsubj.dependent="it"</condition>
            <condition>nsubj.governor="filter"</condition>
            <condition>nsubj.dependent="class"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="file"</condition>
            <condition>dobj.governor=prep_from.governor</condition>
            <condition>prep_from.dependent="directory"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp/aux/dobj</type>
        <text>[something] to be [something] to maintain.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
            <condition>xcomp.dependent="keep maintain"</condition>
            <condition>xcomp.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp/aux</type>
        <text>[something] to be to keep.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
            <condition>xcomp.dependent="maintain keep"</condition>
            <condition>xcomp.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp/nsubj</type>
        <text>[something] is.</text>
        <conditions>
            <condition>xcomp.governor="be"</condition>
            <condition>xcomp.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] [auxiliary] start.</text>
        <conditions>
            <condition>nsubj.governor="start"</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_from</type>
        <text>Li recovers.</text>
        <conditions>
            <condition>nsubj.governor="recover"</condition>
            <condition>nsubj.dependent="li"</condition>
            <condition>nsubj.governor=prep_from.governor</condition>
            <condition>prep_from.dependent="failure"</condition>
            <condition>prep_from.governor="recover"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] [auxiliary] return.</text>
        <conditions>
            <condition>nsubj.governor="return"</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_for</type>
        <text>Portlet requests.</text>
        <conditions>
            <condition>nsubj.governor="request"</condition>
            <condition>nsubj.dependent="portlet"</condition>
            <condition>nsubj.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is placed.</text>
        <conditions>
            <condition>nsubjpass.governor="put place"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] [auxiliary] get [something].</text>
        <conditions>
            <condition>nsubj.governor="get"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Has [something].</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] supports.</text>
        <conditions>
            <condition>nsubj.governor="use support"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] stores [something] and that.</text>
        <conditions>
            <condition>dobj.governor="store"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
            <condition>nsubj.dependent="that"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_from</type>
        <text>Is built.</text>
        <conditions>
            <condition>nsubjpass.governor="build"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_from.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Contains [something].</text>
        <conditions>
            <condition>dobj.governor="contain"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_in</type>
        <text>Is put.</text>
        <conditions>
            <condition>nsubjpass.governor="place put"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_in.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="line row"</condition>
            <condition>prep_of.dependent="file"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="name"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>We add.</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.dependent="we"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>[auxiliary] be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Adds.</text>
        <conditions>
            <condition>ccomp.governor="add"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_as</type>
        <text>Is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_as.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Uses.</text>
        <conditions>
            <condition>xcomp.governor="apply use"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="path default"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] avoid.</text>
        <conditions>
            <condition>aux.governor="avoid"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>It prints [something].</text>
        <conditions>
            <condition>nsubj.governor="print"</condition>
            <condition>nsubj.dependent="it"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is specified.</text>
        <conditions>
            <condition>nsubjpass.governor="specify"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Ps.</text>
        <conditions>
            <condition>ccomp.governor="p"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="class"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="number"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is propagated.</text>
        <conditions>
            <condition>nsubjpass.governor="propagate"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] creates [something].</text>
        <conditions>
            <condition>dobj.governor="create"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is created.</text>
        <conditions>
            <condition>nsubjpass.governor="create"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_to</type>
        <text>Adds [something].</text>
        <conditions>
            <condition>dobj.governor="add"</condition>
            <condition>dobj.governor=prep_to.governor</condition>
            <condition>prep_to.dependent="view"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is changed.</text>
        <conditions>
            <condition>nsubjpass.governor="change"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="row line"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] handles [something].</text>
        <conditions>
            <condition>nsubj.governor="handle"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] stores.</text>
        <conditions>
            <condition>nsubj.governor="store"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] calls.</text>
        <conditions>
            <condition>nsubj.governor="call"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] specify [something].</text>
        <conditions>
            <condition>aux.governor="specify"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Specifies [something].</text>
        <conditions>
            <condition>dobj.governor="specify"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/nsubj</type>
        <text>[something] assumes.</text>
        <conditions>
            <condition>ccomp.governor="assume"</condition>
            <condition>ccomp.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] makes [something].</text>
        <conditions>
            <condition>nsubj.governor="do make"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux</type>
        <text>[auxiliary] write [something].</text>
        <conditions>
            <condition>dobj.governor="write"</condition>
            <condition>dobj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] closes [something].</text>
        <conditions>
            <condition>nsubj.governor="close"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] generates [something].</text>
        <conditions>
            <condition>nsubj.governor="generate"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] sort [something].</text>
        <conditions>
            <condition>aux.governor="make sort"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="write"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] tests [something].</text>
        <conditions>
            <condition>nsubj.governor="test"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] objects.</text>
        <conditions>
            <condition>nsubj.governor="object"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Will return.</text>
        <conditions>
            <condition>aux.governor="return"</condition>
            <condition>aux.dependent="will"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] supports [something].</text>
        <conditions>
            <condition>nsubj.governor="support"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Creates to p.</text>
        <conditions>
            <condition>ccomp.governor="create"</condition>
            <condition>ccomp.dependent="p"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="value"</condition>
            <condition>prep_of.dependent="property"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] makes.</text>
        <conditions>
            <condition>nsubj.governor="make"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] provides [something].</text>
        <conditions>
            <condition>nsubj.governor="provide"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="event default"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is supported.</text>
        <conditions>
            <condition>auxpass.governor="support"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gets [something].</text>
        <conditions>
            <condition>dobj.governor="acquire get"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Processes [something].</text>
        <conditions>
            <condition>dobj.governor="support process"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Accepts [something].</text>
        <conditions>
            <condition>dobj.governor="accept"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] corresponds.</text>
        <conditions>
            <condition>nsubj.governor="match correspond"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Includes [something].</text>
        <conditions>
            <condition>dobj.governor="include"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] keeps.</text>
        <conditions>
            <condition>nsubj.governor="maintain keep"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="behavior"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Removes [something].</text>
        <conditions>
            <condition>dobj.governor="remove"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] updates.</text>
        <conditions>
            <condition>nsubj.governor="update"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="specify"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="list"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] process.</text>
        <conditions>
            <condition>aux.governor="process"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] specifies.</text>
        <conditions>
            <condition>nsubj.governor="specify"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] means.</text>
        <conditions>
            <condition>nsubj.governor="means"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="apply"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] areas.</text>
        <conditions>
            <condition>nsubj.governor="open area"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Collects [something].</text>
        <conditions>
            <condition>dobj.governor="accumulate collect"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Compresses.</text>
        <conditions>
            <condition>xcomp.governor="wrapper compress"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] writes.</text>
        <conditions>
            <condition>nsubj.governor="write"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] checks.</text>
        <conditions>
            <condition>nsubj.governor="check"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Acquires [something].</text>
        <conditions>
            <condition>dobj.governor="get acquire"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_on</type>
        <text/>
        <conditions>
            <condition>prep_on.governor="start"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_into</type>
        <text/>
        <conditions>
            <condition>prep_into.governor="move go"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] files.</text>
        <conditions>
            <condition>nsubj.governor="file"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="run"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prepc_for</type>
        <text/>
        <conditions>
            <condition>prepc_for.governor="use"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] link.</text>
        <conditions>
            <condition>aux.governor="link"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="default path"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="default event"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] create.</text>
        <conditions>
            <condition>aux.governor="create"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="create"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Defines [something].</text>
        <conditions>
            <condition>dobj.governor="define"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Saves [something].</text>
        <conditions>
            <condition>dobj.governor="save"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] provide.</text>
        <conditions>
            <condition>aux.governor="provide"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] reads.</text>
        <conditions>
            <condition>nsubj.governor="read"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] links.</text>
        <conditions>
            <condition>nsubj.governor="link"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] put.</text>
        <conditions>
            <condition>aux.governor="put"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sets [something].</text>
        <conditions>
            <condition>dobj.governor="put set"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Builds [something].</text>
        <conditions>
            <condition>dobj.governor="build"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="type kind"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] stableintervals.</text>
        <conditions>
            <condition>nsubj.governor="stableinterval"</condition>
        </conditions>
        <sentence_class>Expand</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] formattermessages.</text>
        <conditions>
            <condition>nsubj.governor="formattermessage"</condition>
        </conditions>
        <sentence_class>Commentedcode</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_before</type>
        <text>Space roots.</text>
        <conditions>
            <condition>nsubj.governor="root"</condition>
            <condition>nsubj.dependent="space"</condition>
            <condition>nsubj.dependent=prep_before.governor</condition>
            <condition>prep_before.dependent="expression"</condition>
        </conditions>
        <sentence_class>Commentedcode</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Varargs [something].</text>
        <conditions>
            <condition>dobj.governor="vararg"</condition>
        </conditions>
        <sentence_class>Commentedcode</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_before</type>
        <text/>
        <conditions>
            <condition>prep_before.governor="space"</condition>
        </conditions>
        <sentence_class>Commentedcode</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] provide [something].</text>
        <conditions>
            <condition>aux.governor="provide"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Subclassexplnation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] needs.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Has [something].</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp/aux/auxpass</type>
        <text>To be contained by that.</text>
        <conditions>
            <condition>nsubj.governor="contain"</condition>
            <condition>nsubj.dependent="that"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
            <condition>xcomp.dependent="store"</condition>
            <condition>xcomp.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Needs.</text>
        <conditions>
            <condition>xcomp.governor="require need"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] needs.</text>
        <conditions>
            <condition>nsubj.governor="require need"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux/dobj</type>
        <text>To provide [something].</text>
        <conditions>
            <condition>dobj.governor="provide"</condition>
            <condition>dobj.governor=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Allows.</text>
        <conditions>
            <condition>xcomp.governor="allow"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>That requires.</text>
        <conditions>
            <condition>nsubj.governor="need require"</condition>
            <condition>nsubj.dependent="that"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux</type>
        <text>[auxiliary] implement [something].</text>
        <conditions>
            <condition>dobj.governor="implement"</condition>
            <condition>dobj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/xcomp</type>
        <text>Allows [something].</text>
        <conditions>
            <condition>dobj.governor="allow"</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] sees [something].</text>
        <conditions>
            <condition>nsubj.governor="see"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="number"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>We try [something].</text>
        <conditions>
            <condition>nsubj.governor="try"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/neg</type>
        <text>[auxiliary] not implement.</text>
        <conditions>
            <condition>aux.governor="implement"</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To find [something].</text>
        <conditions>
            <condition>aux.governor="find"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To implement [something].</text>
        <conditions>
            <condition>aux.governor="implement"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To have [something].</text>
        <conditions>
            <condition>aux.governor="have"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Class provides [something].</text>
        <conditions>
            <condition>nsubj.governor="provide"</condition>
            <condition>nsubj.dependent="class"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Finds [something].</text>
        <conditions>
            <condition>dobj.governor="find"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] tests.</text>
        <conditions>
            <condition>nsubj.governor="test"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] use [something].</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] allows.</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>We don.</text>
        <conditions>
            <condition>nsubj.governor="don"</condition>
            <condition>nsubj.dependent="we"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] provide [something].</text>
        <conditions>
            <condition>aux.governor="provide"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] objects.</text>
        <conditions>
            <condition>nsubj.governor="object"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] implementations.</text>
        <conditions>
            <condition>nsubj.governor="implementation"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gets [something].</text>
        <conditions>
            <condition>dobj.governor="get"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] represents.</text>
        <conditions>
            <condition>nsubj.governor="represent"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="class"</condition>
        </conditions>
        <sentence_class>rational</sentence_class>
    </NLP_heuristic>
</heuristics>
